<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>静然之旅</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-03T13:50:20.784Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>静然</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown语法</title>
    <link href="http://yoursite.com/2018/05/03/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/05/03/Markdown语法/</id>
    <published>2018-05-03T12:35:32.000Z</published>
    <updated>2018-05-03T13:50:20.784Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><h2 id="基本技巧"><a href="#基本技巧" class="headerlink" title="基本技巧"></a>基本技巧</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。<br>标题还可以用#表示，最多6个#分别代表标题1到标题6<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 我是标题一</span><br><span class="line">...</span><br><span class="line">###### 我是标题六</span><br><span class="line">这是一个一级标题</span><br><span class="line">===</span><br><span class="line">这是一个二级标题</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><h1 id="我是标题一"><a href="#我是标题一" class="headerlink" title="我是标题一"></a>我是标题一</h1><p>…</p><h6 id="我是标题6"><a href="#我是标题6" class="headerlink" title="我是标题6"></a>我是标题6</h6><h1 id="这是一个一级标题"><a href="#这是一个一级标题" class="headerlink" title="这是一个一级标题"></a>这是一个一级标题</h1><h2 id="这是一个二级标题"><a href="#这是一个二级标题" class="headerlink" title="这是一个二级标题"></a>这是一个二级标题</h2><h3 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a>粗斜体</h3><p>使用 * 和 _ 表示斜体。<br>使用 ** 和 __ 表示粗体。<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*    _斜体文本_</span><br><span class="line">**粗体文本**    __粗体文本__</span><br><span class="line">***粗斜体文本***    ___粗斜体文本___</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br><em>斜体文本</em>    <em>斜体文本</em><br><strong>粗体文本</strong>    <strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong>    <strong><em>粗斜体文本</em></strong></p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>使用 <code>[描述](链接地址)</code> 为文字增加外链接，使用<code>&lt;链接地址&gt;</code>直接链接网址。<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文字链接: [链接名称](链接网址)</span><br><span class="line">网址链接: &lt;链接网址&gt;</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br>文字链接: <a href="https://www.baidu.com/" target="_blank" rel="noopener">百度</a><br>网址链接: <a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com/</a></p><h3 id="高级链接技巧"><a href="#高级链接技巧" class="headerlink" title="高级链接技巧"></a>高级链接技巧</h3><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line">[1]: http://www.google.com/</span><br><span class="line">[yahoo]: http://www.yahoo.com/</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a>.<br>这个链接用 yahoo 作为网址变量 <a href="http://www.yahoo.com/" target="_blank" rel="noopener">Yahoo!</a>.<br>然后在文档的结尾为变量赋值（网址）</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>使用 *，+，- 表示无序列表。<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 列表文本前使用 [减号+空格]</span><br><span class="line">+ 列表文本前使用 [加号+空格]</span><br><span class="line">* 列表文本前使用 [星号+空格]</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><ul><li>列表文本前使用 [减号+空格]</li></ul><ul><li>列表文本前使用 [加号+空格]</li></ul><ul><li>列表文本前使用 [星号+空格]</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>使用数字和点表示有序列表。<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 列表前使用 [数字+点+空格]</span><br><span class="line">2. 我们会自动帮你添加数字</span><br><span class="line">7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><ol><li>列表前使用 [数字+点+空格]</li><li>我们会自动帮你添加数字</li><li>不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</li></ol><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">    &gt; 前面空一行</span><br><span class="line">    &gt; 仍然需要在 &gt;  前面加四个空格</span><br><span class="line"></span><br><span class="line">4. 列表里代码段：</span><br><span class="line"></span><br><span class="line">    ``` [这里为了演示而加]</span><br><span class="line">    前面四个空格，之后按代码语法 ``` 书写</span><br><span class="line">    ``` [这里为了演示而加]</span><br><span class="line">        或者直接空八个，引入代码块</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><ol><li>列出所有元素：<ul><li>无序列表元素 A<ol><li>元素 A 的有序子列表</li></ol></li><li>前面加四个空格</li></ul></li><li>列表里的多段换行：<br> 前面必须加四个空格，<br> 这样换行，整体的格式不会乱</li><li><p>列表里引用：</p><blockquote><p>前面空一行<br>仍然需要在 &gt;  前面加四个空格</p></blockquote></li><li><p>列表里代码段：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前面四个空格，之后按代码语法 ``` 书写</span><br></pre></td></tr></table></figure><pre><code>或者直接空八个，引入代码块</code></pre></li></ol><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="普通引用"><a href="#普通引用" class="headerlink" title="普通引用"></a>普通引用</h4><p><code>示例：</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">折行可以不加，新起一行都要加上哦</span><br></pre></td></tr></table></figure><p><code>效果：</code></p><blockquote><p>引用文本前使用 [大于号+空格]<br>折行可以不加，新起一行都要加上哦</p></blockquote><h4 id="引用里嵌套引用"><a href="#引用里嵌套引用" class="headerlink" title="引用里嵌套引用"></a>引用里嵌套引用</h4><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt;&gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt;&gt;&gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><blockquote><p>最外层引用</p><blockquote><p>多一个 &gt; 嵌套一层引用</p><blockquote><p>可以嵌套很多层</p></blockquote></blockquote></blockquote><h4 id="引用里嵌套列表"><a href="#引用里嵌套列表" class="headerlink" title="引用里嵌套列表"></a>引用里嵌套列表</h4><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><blockquote><ul><li>这是引用里嵌套的一个列表</li><li>还可以有子列表<ul><li>子列表需要从 - 之后延后四个空格开始</li></ul></li></ul></blockquote><h4 id="引用里嵌套代码块"><a href="#引用里嵌套代码块" class="headerlink" title="引用里嵌套代码块"></a>引用里嵌套代码块</h4><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;     同样的，在前面加四个空格形成代码块</span><br><span class="line">&gt;</span><br><span class="line">&gt; ```[为了演示而加]</span><br><span class="line">&gt; 或者使用 ``` 形成代码块</span><br><span class="line">&gt; ```[为了演示而加]</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><blockquote><pre><code>同样的，在前面加四个空格形成代码块</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 或者使用 ``` 形成代码块</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>使用 四个缩进空格 表示代码块或者使用 ``` 形成代码块。<br>支持的语言：<code>1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino,armasm,asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic,bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake,coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi,diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm,erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss,gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell,haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json,julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript,llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury,mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis,objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell,processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib,roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali,smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript,tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html,verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir</code><br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    ```[为了演示而加]</span><br><span class="line">    $(document).ready(function () &#123;</span><br><span class="line">        alert(&apos;hello world&apos;);</span><br><span class="line">    &#125;);</span><br><span class="line">    ```[为了演示而加]</span><br><span class="line">        def g(x):</span><br><span class="line">            yield from range(x, 0, -1)</span><br><span class="line">        yield from range(x)</span><br><span class="line">这里为了演示而在左侧增加四个不可见的空格，实际上并不需要</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'hello world'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><pre><code>def g(x):    yield from range(x, 0, -1)yield from range(x)</code></pre><p>如你不需要代码高亮，可以用下面的方法禁用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```nohighlight</span><br><span class="line">```[为了演示而加]</span><br></pre></td></tr></table></figure></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>使用 <code>![描述](图片链接地址)</code> 插入图像，跟链接的方法区别在于前面加了个感叹号 !，这样是不是觉得好记多了呢？。<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![我的头像](https://www.zybuluo.com/static/img/my_head.jpg)</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br><img src="https://www.zybuluo.com/static/img/my_head.jpg" alt="我的头像"><br>当然，你也可以像网址那样对图片网址使用变量，赋值必须在文档最后操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![我的头像][1]</span><br><span class="line">[1]: https://www.zybuluo.com/static/img/my_head.jpg</span><br></pre></td></tr></table></figure></p><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>如果另起一行，只需在当前行结尾加2个空格，如果是要起一个新段落，只需要空出一行即可。<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在当前行的结尾加 2 个空格</span><br><span class="line">这行就会新起一行</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br>在当前行的结尾加 2 个空格<br>这行就会新起一行</p><h3 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h3><p>如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行：<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前面的段落</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">后面的段落</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br>前面的段落</p><hr><p>后面的段落</p><h2 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h2><h3 id="行内-HTML-元素"><a href="#行内-HTML-元素" class="headerlink" title="行内 HTML 元素"></a>行内 HTML 元素</h3><p>目前只支持部分段内 HTML 元素效果，包括 <code>&lt;kdb&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>，如</p><h4 id="键位显示"><a href="#键位显示" class="headerlink" title="键位显示"></a>键位显示</h4><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h4 id="代码块-1"><a href="#代码块-1" class="headerlink" title="代码块"></a>代码块</h4><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;pre&gt;这里是代码&lt;/pre&gt; 元素同样可以形成代码块</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br>使用 <pre>这里是代码</pre> 元素同样可以形成代码块</p><h4 id="粗斜体-1"><a href="#粗斜体-1" class="headerlink" title="粗斜体"></a>粗斜体</h4><p><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt; Markdown 在此处同样适用，如 *加粗* &lt;/b&gt;</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br><b> Markdown 在此处同样适用，如 <em>加粗</em> </b></p><h3 id="符号转义"><a href="#符号转义" class="headerlink" title="符号转义"></a>符号转义</h3><p>如果你的描述中需要用到 markdown 的符号，比如 _ # <em> 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 _ # \</em> 进行避免。<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\_不想这里的文本变斜体\_</span><br><span class="line">\*\*不想这里的文本被加粗\*\*</span><br></pre></td></tr></table></figure></p><p><code>效果：</code><br>_不想这里的文本变斜体_<br>**不想这里的文本被加粗**</p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：<br><code>示例：</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$ x = &#123;-b \pm \sqrt&#123;b^2-4ac&#125; \over 2a&#125;. $$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">x \href&#123;why-equal.html&#125;&#123;=&#125; y^2 + 1</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></p><p><code>效果：</code></p><p>$$ x = {-b \pm \sqrt{b^2-4ac} \over 2a}. $$</p><p>$$<br>x \href{why-equal.html}{=} y^2 + 1<br>$$</p><p>文章内容引用<code>https://segmentfault.com/markdown#articleHeader7</code>和<code>https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#1-内容目录</code>整理而成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
&lt;h2 id=&quot;基本技巧&quot;&gt;&lt;a href=&quot;#基本技巧&quot; class=&quot;headerlink&quot; title=&quot;基本技巧&quot;&gt;&lt;/a&gt;基本技巧&lt;/h2
      
    
    </summary>
    
      <category term="杂项" scheme="http://yoursite.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>github + hexo 搭建个人博客</title>
    <link href="http://yoursite.com/2018/04/30/hello-world/"/>
    <id>http://yoursite.com/2018/04/30/hello-world/</id>
    <published>2018-04-30T15:48:46.710Z</published>
    <updated>2018-05-01T13:56:50.507Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub Pages 是通过我们网站托管和发布的公开网页。所以利用这个可以搭建个人博客。<br><a id="more"></a></p><h1 id="如何搭建个人博客"><a href="#如何搭建个人博客" class="headerlink" title="如何搭建个人博客"></a>如何搭建个人博客</h1><h2 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h2><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><p>前往<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>注册账号，并且创建一个New repository。Repository name填写为dracoqiu.github.io，dracoqiu这个为用户名，自行修改。创建完成后在项目的Settings里找到GitHub Pages，会发现这里有显示你的博客地址。</p><h3 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH-Key"></a>配置SSH-Key</h3><p>给电脑配置SSH-Key的话就不用每次都输入账号密码。<br>1、打开git的命令行工具输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your e-mail"</span></span><br></pre></td></tr></table></figure></p><p>创建成功后会看到以下内容<br>Your identification has been saved in /c/Users/XZY-06/.ssh/id_rsa.<br>Your public key has been saved in /c/Users/XZY-06/.ssh/id_rsa.pub.<br>打开文件夹，然后找到id_rsa.pub，用编辑器打开复制里面的内容，然后登陆你的GitHub账户，依次点击账号Settings &gt; SSH and GPG keys &gt; new SSH key，把id_rsa.<br>pub中的内容拷贝进去key项，title相当于备注，可随意填写 。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;  <span class="comment"># 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</span></span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><p>新建完成后，指定文件夹的目录如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml  <span class="comment"># 网站的 配置 信息，您可以在此配置大部分的参数。</span></span><br><span class="line">├── package.json  <span class="comment"># 应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</span></span><br><span class="line">├── scaffolds  <span class="comment"># 模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</span></span><br><span class="line">├── <span class="built_in">source</span>  <span class="comment"># 资源文件夹是存放用户资源的地方。</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts  <span class="comment"># md文件存放目录</span></span><br><span class="line">└── themes  <span class="comment"># 主题 文件夹。Hexo 会根据主题来生成静态页面。</span></span><br></pre></td></tr></table></figure></p><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>运行以下命令将生成静态文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo g  <span class="comment"># 简写</span></span><br></pre></td></tr></table></figure></p><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s  <span class="comment"># 简写</span></span><br></pre></td></tr></table></figure></p><p>如果端口被占用运行以下命令给该端口再启动服务器。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 3000</span><br></pre></td></tr></table></figure></p><p>在浏览器中输入 localhost:3000就可以看到博客。</p><h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><h4 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h4><p>打开Git bash，在当前项目根目下使用git从github上checkout主题的代码，输入指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>下载完成后，在hexo\theme目录下回多出一个next文件夹，里面就是next主题所需的文件,当然我们也可以看到在theme文件目录还有一个landscape文件夹，这也就是hexo默认的主题。</p><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p>之前我们配置hexo的时候，有用到<code>_config.yml</code>文件，称其为<em>站点配置文件</em>，而我们打开next主题文件夹，发现里面也有一个<code>_config.yml</code>文件，我们称这个为<em>主题配置文件</em>。在hexo中启用next主题的方式：就是打开站点配置文件，找到theme字段，将其值改为“next”，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme:  next</span><br></pre></td></tr></table></figure></p><h4 id="next的样式选择"><a href="#next的样式选择" class="headerlink" title="next的样式选择"></a>next的样式选择</h4><p>next的样式其实有三种：Muse、Mist和Pisces，步骤2中看到的其实是next默认的模式Muse，根据官方说明三个样式的特点如下：<br><em>Muse</em>： 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白<br><em>Mist</em>：  Muse 的紧凑版本，整洁有序的单栏外观<br><em>Pisces</em>： 双栏 Scheme，小家碧玉似的清新<br>切换的控制其实很简单，使用next主题配置文件中的<code>scheme</code>字段来控制，假设我们选择Mist样式（个人认为最好看的样式），操作步骤是：打开next文件夹中的<code>_config.yml</code>文件，找到<code>scheme</code>字段，将其设置为“Mist”，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line">scheme: Mist</span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure></p><p>重新启动博客，刷新浏览器可以看到效果</p><h4 id="设置favicon"><a href="#设置favicon" class="headerlink" title="设置favicon"></a>设置favicon</h4><p>打开主题配置文件<code>_config.yml</code>可以看到favicon的配置信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure></p><h4 id="菜单栏控制"><a href="#菜单栏控制" class="headerlink" title="菜单栏控制"></a>菜单栏控制</h4><p>我们看到页面顶部的菜单栏，其实是由主题配置文件中的menu字段控制的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment"># schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment"># commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure></p><p>然而，点击打开About却出现了“Cannot GET /about/”的页面错误，这是因为我们还没有about这个页面，需要使用<code>hexo new page &quot;页面名称&quot;</code>进行创建<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure></p><p>执行结果就是在hexo\source目录下面多出了一个about文件夹，里面有index.md，这就是点击About会展示的内容页面。同理，也可以创建tags页面</p><h4 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h4><p>添加一个 分类 页面，并在菜单中显示页面链接。<br>1、新建一个页面，命名为 categories 。命令如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure></p><p>2、编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段<code>comments</code>并将值设置为<code>false</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date: 2018-05-01 14:25:00</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>3、在页面头部可以设置分类以及标签<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: github + hexo 搭建个人博客</span><br><span class="line">categories: <span class="string">"Hexo教程"</span> <span class="comment">#文章分類目錄 可以省略</span></span><br><span class="line">tags:</span><br><span class="line">     - Hexo教程</span><br><span class="line">description: <span class="comment">#你對本頁的描述 可以省略</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h4 id="菜单栏控制-1"><a href="#菜单栏控制-1" class="headerlink" title="菜单栏控制"></a>菜单栏控制</h4><p>在站点配置文件中假如如下内容，明确指定使用的语言，例如中文<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure></p><h4 id="侧栏设置"><a href="#侧栏设置" class="headerlink" title="侧栏设置"></a>侧栏设置</h4><p>在主题配置文件的<code>sidebar</code>字段，此处我直接设置为侧栏一直显示，而且显示在右边<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  <span class="comment"># Sidebar Position, available value: left | right</span></span><br><span class="line">  position: left</span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display, available value:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggler.</span></span><br><span class="line">  <span class="comment">#display: post</span></span><br><span class="line">  display: always</span><br><span class="line">  <span class="comment">#display: hide</span></span><br><span class="line">  <span class="comment">#display: remove</span></span><br></pre></td></tr></table></figure></p><h4 id="设置头像和作者名称"><a href="#设置头像和作者名称" class="headerlink" title="设置头像和作者名称"></a>设置头像和作者名称</h4><p>在站点配置文件中，新加一个字段<code>avatar</code>，值就是头像的连接地址，这里我使用站内地址，将avatar.png放到本地目录hexo\source\images中；作者名称直接设置站点配置文件中<code>author</code>字段的值：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 静然之旅</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">author: 静然</span><br><span class="line">avatar: /images/avatar.png</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></p><h4 id="给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。"><a href="#给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。" class="headerlink" title="给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。"></a>给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。</h4><p>在主题的配置文件找到<code>busuanzi_count</code>字段，把<code>enable</code>设置为<code>true</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="literal">true</span></span><br><span class="line">  site_uv_header: &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="literal">true</span></span><br><span class="line">  site_pv_header: &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="literal">true</span></span><br><span class="line">  page_pv_header: &lt;i class=<span class="string">"fa fa-file-o"</span>&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure></p><h3 id="上传到GitHub"><a href="#上传到GitHub" class="headerlink" title="上传到GitHub"></a>上传到GitHub</h3><p>打开站点<code>配置文件</code>(即更目录下的<code>_config.yml</code>)，在最后修改如下代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/dracoqiu/dracoqiu.github.io.git  <span class="comment"># 库（Repository）地址</span></span><br><span class="line">  branch: master  <span class="comment"># 分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</span></span><br><span class="line">  message: [message]  <span class="comment"># 自定义提交信息 (默认为 Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;)</span></span><br></pre></td></tr></table></figure></p><p>每次修改本地文件都需执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br><span class="line"><span class="comment"># 以下为简写</span></span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><p>如果执行<code>$ hexo deploy</code>提示<code>ERROR Deployer not found: git</code>，则执行以下命令，再执行<code>$ hexo deploy</code>上传到GitHub<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><h3 id="博客安装和主题配置参考"><a href="#博客安装和主题配置参考" class="headerlink" title="博客安装和主题配置参考"></a>博客安装和主题配置参考</h3><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a><br><a href="http://theme-next.iissnan.com/getting-started.html#top" target="_blank" rel="noopener">next主题官网</a><br><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GitHub Pages 是通过我们网站托管和发布的公开网页。所以利用这个可以搭建个人博客。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://yoursite.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo教程" scheme="http://yoursite.com/tags/Hexo%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
