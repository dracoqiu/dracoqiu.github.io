<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>静然之旅</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-06T13:19:11.920Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>静然</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP常见面试题</title>
    <link href="http://yoursite.com/2019/08/06/PHP%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2019/08/06/PHP常见面试题/</id>
    <published>2019-08-06T13:17:22.000Z</published>
    <updated>2019-08-06T13:19:11.920Z</updated>
    
    <content type="html"><![CDATA[<p>收集了一些常见的面试题<br><a id="more"></a></p><h4 id="请选择以下代码运行的结果"><a href="#请选择以下代码运行的结果" class="headerlink" title="请选择以下代码运行的结果"></a>请选择以下代码运行的结果</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">'1e3'</span> == <span class="string">'1000'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'LOL'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line">LOL</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line">`<span class="number">1e3</span>` 是 科学计数法 实数的指数形式 为<span class="number">1</span>乘以<span class="number">10</span>的三次方，故‘<span class="number">1e3</span>’==<span class="string">'1000'</span>是成立的，输出<span class="keyword">echo</span> `LOL`</span><br></pre></td></tr></table></figure><h4 id="请选出以下代码运行的结果"><a href="#请选出以下代码运行的结果" class="headerlink" title="请选出以下代码运行的结果"></a>请选出以下代码运行的结果</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">"aabbzz"</span>;</span><br><span class="line">$a++;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line">aabcaa</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line">字符串字母相加其实就是在末尾字母加一</span><br><span class="line">如：$a = <span class="string">"a"</span>; $a++;答应结果就是 b,$a=<span class="string">'aa'</span>;结果就是ab 故$a = <span class="string">"aabb"</span>;打印结果就是 aabc ,如$a = <span class="string">"aabbz"</span>;结果就是 aabca</span><br><span class="line">因为Z是末尾字母故加一变为a,向前一位进一,b就变为c,故结果为C</span><br></pre></td></tr></table></figure><h4 id="引用易错点"><a href="#引用易错点" class="headerlink" title="引用易错点"></a>引用易错点</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$data = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">    $v = &amp;$data[$k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line">$data = [<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'c'</span>];</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line">这里有个考点要记得就是&amp;是引用；修改引用变量的值，那么空间的值也会改变</span><br><span class="line">第一次循环 得到$v=&amp;$data[<span class="number">0</span>]=&gt;<span class="string">'a'</span></span><br><span class="line"></span><br><span class="line">第二次循环$v=&amp;$data[<span class="number">1</span>]=&gt;<span class="string">'b'</span>($v=$data[<span class="number">0</span>]),可见第一次引用的$data[<span class="number">0</span>]的值已经被改变，所以此时的$data[<span class="number">0</span>]=b,此时$v引用的$data[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">进入第三次循环 此时$v又变为$v=&amp;$data[<span class="number">2</span>]=&gt;<span class="string">'c'</span>($v=$data[<span class="number">1</span>]),$v又一次改变，引用的$data[<span class="number">1</span>]的值也被改变为C</span><br><span class="line"></span><br><span class="line">所以此时的$data[<span class="number">1</span>]=c,这样循环结束 $data[<span class="number">0</span>]=&gt;<span class="string">'b'</span>， $data[<span class="number">1</span>]=&gt;<span class="string">'c'</span>， $data[<span class="number">2</span>]=&gt;<span class="string">'c'</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$data = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($data <span class="keyword">as</span> &amp;$v) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($data <span class="keyword">as</span> $v) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>($v);</span><br><span class="line"></span><br><span class="line">var_dump($data);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line">$data = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'b'</span>];</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 第一次遍历 */</span></span><br><span class="line">$v = &amp;$data[<span class="number">0</span>];</span><br><span class="line">$v = &amp;$data[<span class="number">1</span>];</span><br><span class="line">$v = &amp;$data[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一次遍历完成后, 这个时候 $v = &amp;$data[2]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 第二轮遍历 */</span></span><br><span class="line"><span class="comment">// 因为$v等价于$data[2],相当于$data[2] = $data[0],把$data[2]赋值为a(即$data[0]); 此时数组array = ['a','b','a'];</span></span><br><span class="line">$v = $data[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为$v等价于$data[2],相当于$data[2] = $data[1],把$data[2]赋值为b(即$data[1]); 此时数组array = ['a','b','b'];</span></span><br><span class="line">$v = $data[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为$v等价于$data[2],相当于$data[2] = $data[2],即赋值为其本身,而此时已经被上一次赋值为b; 此时数组array = ['a','b','b'];</span></span><br><span class="line">$v = $data[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二次遍历完后, array = ['a','b','b']</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>($v); <span class="comment">// unset($v)释放掉临时的引用</span></span><br></pre></td></tr></table></figure><h4 id="写出一下程序的输出结果"><a href="#写出一下程序的输出结果" class="headerlink" title="写出一下程序的输出结果"></a>写出一下程序的输出结果</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$a= <span class="number">0.1</span>;</span><br><span class="line">$b = <span class="number">0.7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($a+$b ==<span class="number">0.8</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line">空</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line">这里的考点有两个：</span><br><span class="line"><span class="number">1</span>，<span class="keyword">echo</span> <span class="keyword">false</span>和<span class="keyword">true</span>的值</span><br><span class="line"><span class="number">2</span>、浮点类型不能用于精确计算</span><br><span class="line"></span><br><span class="line">首先浮点类型的数据不能用于计算，他会将浮点类型转为二进制，所以有一定的损耗，故它无限接近于<span class="number">0.8</span>，也就是<span class="number">0.79999999</span>...，所以<span class="keyword">echo</span> 应该是个<span class="keyword">false</span>；<span class="keyword">echo</span> <span class="keyword">false</span>；结果是空；<span class="keyword">echo</span> <span class="keyword">true</span>；结果是<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="用PHP写出显示客户端的IP和服务端的IP"><a href="#用PHP写出显示客户端的IP和服务端的IP" class="headerlink" title="用PHP写出显示客户端的IP和服务端的IP"></a>用PHP写出显示客户端的IP和服务端的IP</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> $_SERVER[‘REMOTE_ADDR’]; <span class="comment">//客户端IP</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> gethostbyname(<span class="string">"www.baidu.com"</span>); <span class="comment">//服务端</span></span><br></pre></td></tr></table></figure><h4 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="number">0</span>;</span><br><span class="line">$b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> ($a = <span class="number">3</span> &gt; <span class="number">0</span> || $b = <span class="number">3</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    $a++;</span><br><span class="line">    $b++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $a,$b;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line"><span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line">此题考查的是运算符的优先级问题，首先在此题中比较运算符&gt;逻辑运算符&gt;赋值</span><br><span class="line">所以<span class="number">1</span>，先看 <span class="number">3</span>&gt;<span class="number">0</span>为<span class="keyword">true</span>,<span class="number">2</span>，因为是||运算所以后面的$b=<span class="number">3</span>&gt;<span class="number">0</span> 形成短路作用，这时的$a=<span class="keyword">true</span>,$b=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">故$a++;为<span class="number">1</span>；$b++;为<span class="number">1</span>这里解释下布尔类型运算不影响布尔类型结果；但是$b=<span class="number">0</span>;$b++;就改变为<span class="number">1</span>， <span class="keyword">echo</span> <span class="keyword">true</span>；结果为<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="PHP中如何优化多个if…esleif语句的情况"><a href="#PHP中如何优化多个if…esleif语句的情况" class="headerlink" title="PHP中如何优化多个if…esleif语句的情况"></a>PHP中如何优化多个if…esleif语句的情况</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line">首先尽可能将表达式可能性越大的越往前面放，其次如果我们判断的内容比较复杂且 判断的值只是字符串，整型，浮点 那么就可以用<span class="keyword">switch</span>...<span class="keyword">case</span>来代替</span><br></pre></td></tr></table></figure><h4 id="函数以及变量引用综合例子"><a href="#函数以及变量引用综合例子" class="headerlink" title="函数以及变量引用综合例子"></a>函数以及变量引用综合例子</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">val1= <span class="number">5</span>;</span><br><span class="line">$val2 = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">(&amp;$my_val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $val1;</span><br><span class="line">    $val1+=<span class="number">2</span>;<span class="comment">//7</span></span><br><span class="line">    $val2 =<span class="number">4</span>;<span class="comment">//4</span></span><br><span class="line">    $my_val +=<span class="number">3</span>;<span class="comment">//8</span></span><br><span class="line">    <span class="keyword">return</span> $val2;<span class="comment">//4</span></span><br><span class="line">&#125;</span><br><span class="line">$my_val = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> foo($my_val).<span class="string">"\n"</span>;<span class="comment">//4</span></span><br><span class="line"><span class="keyword">echo</span> $my_val;<span class="comment">//8</span></span><br><span class="line"><span class="keyword">echo</span> $val1.<span class="string">"\n"</span>.$val2;<span class="comment">//7   10</span></span><br><span class="line">$bar = <span class="string">'foo'</span>;</span><br><span class="line">$my_val =<span class="number">10</span>;</span><br><span class="line"><span class="keyword">echo</span> $bar($my_val).<span class="string">"\n"</span>;<span class="comment">//4s</span></span><br></pre></td></tr></table></figure><h4 id="用PHP方式对目录进行遍历"><a href="#用PHP方式对目录进行遍历" class="headerlink" title="用PHP方式对目录进行遍历"></a>用PHP方式对目录进行遍历</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$dir = <span class="string">'./test'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loopDir</span><span class="params">($dir)</span></span>&#123;</span><br><span class="line">    $handle = opendir($dir);</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">false</span> !== ($file =readdir($handle)))&#123;</span><br><span class="line">        <span class="keyword">if</span>($file != <span class="string">'.'</span> &amp;&amp; $file != <span class="string">'..'</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> $file.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            <span class="keyword">if</span>(filetype($dir.<span class="string">'/'</span>.$file) == <span class="string">'dir'</span>) &#123;</span><br><span class="line">                loopDir($dir.<span class="string">'/'</span>.$file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">loopDir($dir);</span><br></pre></td></tr></table></figure><h4 id="请简单叙述-CGI-fastCGI-h和-PHP-FPM的区别"><a href="#请简单叙述-CGI-fastCGI-h和-PHP-FPM的区别" class="headerlink" title="请简单叙述 CGI fastCGI h和  PHP-FPM的区别"></a>请简单叙述 CGI fastCGI h和  PHP-FPM的区别</h4><blockquote><p>CGI 代表为了联系PHP 和websevae 的一个桥梁<br>fastCGI 是CGI的改良版<br>PHP-FPM  进程管理器</p></blockquote><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><ol><li><p>冒泡排序</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maopao</span><span class="params">($arr)</span> </span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    $n = count($arr) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>($j = <span class="number">0</span>; $j &lt; $n; $j++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($arr[$j] &lt; $arr[$j+<span class="number">1</span>]) &#123;</span><br><span class="line">                $temp = $arr[$j+<span class="number">1</span>];</span><br><span class="line">                $arr[$j+<span class="number">1</span>] = $arr[$j];</span><br><span class="line">                $arr[$j] = $temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>快速排序</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quick_sort</span><span class="params">($array)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count($array) &lt;= <span class="number">1</span>) <span class="keyword">return</span> $array;</span><br><span class="line"></span><br><span class="line">    $key = $array[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $left_arr = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    $right_arr = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt; count($array); $i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($array[$i] &lt;= $key)</span><br><span class="line"></span><br><span class="line">            $left_arr[] = $array[$i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">            $right_arr[] = $array[$i];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $left_arr = quick_sort($left_arr);</span><br><span class="line"></span><br><span class="line">    $right_arr = quick_sort($right_arr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> array_merge($left_arr, <span class="keyword">array</span>($key), $right_arr);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="请说明-PHP-中传值与传引用的区别，什么时候传值什么时候传引用"><a href="#请说明-PHP-中传值与传引用的区别，什么时候传值什么时候传引用" class="headerlink" title="请说明 PHP 中传值与传引用的区别，什么时候传值什么时候传引用?"></a>请说明 PHP 中传值与传引用的区别，什么时候传值什么时候传引用?</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">按值传递：函数范围内对值的任何改变在函数外部都会被忽略</span><br><span class="line"></span><br><span class="line">按引用传递：函数范围内对值的任何改变在函数外部也能反映出这些修改</span><br><span class="line"></span><br><span class="line">优缺点：按值传递时，php必须复制值。特别是对于大型的字符串和对象来说，这将会是一个代价很大的操作。</span><br><span class="line"></span><br><span class="line">按引用传递则不需要复制值，对于性能提高很有好处。</span><br></pre></td></tr></table></figure><h4 id="MySQL数据库中的字段类型varchar和char的主要区别是什么"><a href="#MySQL数据库中的字段类型varchar和char的主要区别是什么" class="headerlink" title="MySQL数据库中的字段类型varchar和char的主要区别是什么?"></a>MySQL数据库中的字段类型varchar和char的主要区别是什么?</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">char和varchar最大的不同就是一个是固定长度,一个是可变长度.由于是可变长度,因此存储的是实际字符串再加上一个记录字符串长度的字节。如果分配给char或varchar列的值超过 列的最大长度,则对值进行裁剪.</span><br><span class="line"></span><br><span class="line">varchar(M)和char(M),M都表示字符数.varchar的最大长度为<span class="number">65535</span>个字节,不同的编码所对应的最大可存储的字符数不同.char最多可以存放<span class="number">255</span>个字符,不同的编码最大可用字节数不同</span><br></pre></td></tr></table></figure><h4 id="对于大流量的网站，采用什么样的方法来解决访问量问题？"><a href="#对于大流量的网站，采用什么样的方法来解决访问量问题？" class="headerlink" title="对于大流量的网站，采用什么样的方法来解决访问量问题？"></a>对于大流量的网站，采用什么样的方法来解决访问量问题？</h4><ol><li>确认服务器硬件是否足够支持当前的流量</li><li>优化数据库访问</li><li>禁止外部的盗链</li><li>控制大文件的下载</li><li>使用不同主机分流主要流量(分布式部署)</li><li>使用流量分析统计软件</li><li>尽量使用静态页，缓存</li></ol><ul><li><p>什么是面向对象？主要特征是什么？</p><blockquote><p>面向对象是程序的一种设计方式，它利于提高程序的重用性，使程序结构更加清晰。主要特征：封装、继承、多态。</p></blockquote></li><li><p>SESSION 与 COOKIE的区别是什么？</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SESSION存储在服务器端，COOKIE保存在客户端。</span><br><span class="line">Session比较安全，cookie用某些手段可以修改，不安全。</span><br><span class="line">Session依赖于cookie进行传递。禁用cookie后，session还可以使用，在存储session的文件中，生成sessionID，通过get传参的方式将sessionID传到要实现session共享的页面，读取sessionID,从而从session中获取数据。</span><br></pre></td></tr></table></figure><h4 id="对缓存技术的了解"><a href="#对缓存技术的了解" class="headerlink" title="对缓存技术的了解"></a>对缓存技术的了解</h4><ol><li>缓存技术是将动态内容缓存到文件中，在一定时间内访问动态页面直接调用缓存文件，而不必重新访问数据库。</li><li>使用memcache,redis可以做缓存</li></ol><ul><li>表单中get和post提交方式的区别<blockquote><p>get是显式的，数据从url中可以看到，传输的数据量小，安全性低； post是隐式的，传送的数据量较大，安全性较高</p></blockquote></li></ul><h4 id="优化mysql数据库的方法"><a href="#优化mysql数据库的方法" class="headerlink" title="优化mysql数据库的方法"></a>优化mysql数据库的方法</h4><ol><li>数据表中的数据类型的优化  如选择合适的字段，选择效率快速的字段</li><li>索引优化</li><li>SQL语句的优化z<ul><li>优化查询过程中的数据访问如使用limit、使用返回列不用*</li><li>优化长难句的查询语句 变复杂为简单、切分查询、分解关联查询</li><li>优化特定类型的查询语句如优化count()、优化关联查询、优化子查询、优化Group by、优化limit</li></ul></li><li>存储引擎的优化<ul><li>尽量使用InnoDB存储引擎，因为它支持事务、外键、使用独立表空间、使用的是行级锁</li></ul></li><li>数据表结构的设计优化<ul><li>分区操作 如通过特定的策略对数据进行物理拆分、对用户透明的、partition by</li><li>分库分表  如水平拆分（以行级进行拆分）、垂直拆分（列及拆分）</li></ul></li><li>数据架构的优化<ul><li>主从复制</li><li>读写分离</li><li>双主热备</li><li>负载均衡　　通过LVS的三种模式实现的、Mycat数据库中间件实现的</li></ul></li></ol><ul><li>语句include和require的区别是什么？<blockquote><p>require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行<br>include有返回值，而require没有(可能因为如此require的速度比include快)，如果被包含的文件不存在的化，那么会提示一个错误，但是程序会继续执行下去</p></blockquote></li></ul><h4 id="redis和memcacahe、mongoDB的区别？"><a href="#redis和memcacahe、mongoDB的区别？" class="headerlink" title="redis和memcacahe、mongoDB的区别？"></a>redis和memcacahe、mongoDB的区别？</h4><blockquote><p>都是非关系型数据库，性能都非常高，但是mongoDB和memcache、redis是不同的两种类型。后两者主要用于数据的缓存，前者主要用在查询和储存大数据方面，是最接近数据库的文档型的非关系数据库。</p></blockquote><blockquote><p>从数据存储位置上来分，memcache的数据存在内存中，而redis既可以存储在内存中，也可以存储的到磁盘中，达到持久化存储的功能，memcache一旦断电，数据全部丢失，redis可以利用快照和AOF把数据存到磁盘中，当恢复时又从磁盘中读取到内存中，当物理内存使用完毕后，可以把数据写入到磁盘中。</p></blockquote><blockquote><p>从存储数据的类型上来分，memcache和redis存储的方式都是键值对，只不过redis值的类型比较丰富，有string(字符串),hash(哈希)，list(列表),set(集合)zset(有序集合)，而memcache主要存储的是字符串。</p></blockquote><h4 id="PHP的基本变量类型"><a href="#PHP的基本变量类型" class="headerlink" title="PHP的基本变量类型"></a>PHP的基本变量类型</h4><ol><li>四种标量类型：boolean （布尔型）、integer （整型）、float （浮点型, 也称作 double)、string （字符串）</li><li>两种复合类型：array （数组）、object （对象）</li><li>最后是两种特殊类型：resource（资源）、NULL（NULL）</li></ol><h4 id="静态化如何实现的？伪静态如何实现？"><a href="#静态化如何实现的？伪静态如何实现？" class="headerlink" title="静态化如何实现的？伪静态如何实现？"></a>静态化如何实现的？伪静态如何实现？</h4><ol><li>静态化指的是页面静态化，也即生成实实在在的静态文件，也即不需要查询数据库就可以直接从文件中获取数据，指的是真静态。<ol><li>实现方式主要有两种：</li></ol><ul><li>一种是我们在添加信息入库的时候就生成的静态文件，也称为模板替换技术。</li><li>一种是用户在访问我们的页面时先判断是否有对应的缓存文件存在，如果存在就读缓存，不存在就读数据库，同时生成缓存文件。</li></ul></li><li>伪静态不是真正意义上的静态化，之所以使用伪静态，主要是为了SEO推广，搜索引擎对动态的文件获取难度大，不利于网站的推广。实习原理是基于Apache或Nginx的rewrite机智<ol><li>主要有两种方式：</li></ol><ul><li>一种是直接在配置虚拟机的位置配置伪静态，这个每次修改完成后需要重启web服务器。</li><li>另一种采用分布式的，可以在网站的根目录上创建.htaccess的文件，在里面配置相应的重写规则来实现伪静态，这种每次重写时不需要重启web服务器，且结构上比较清晰。</li></ul></li></ol><h4 id="如何处理负载，高并发"><a href="#如何处理负载，高并发" class="headerlink" title="如何处理负载，高并发"></a>如何处理负载，高并发</h4><ol><li><p>HTML静态化</p><blockquote><p>效率最高、消耗最小的就是纯静态化的html页面，所以我们尽可能使我们的 网站上的页面采用静态页面来实现，这个最简单的方法其实也是最有效的方法。</p></blockquote></li><li><p>图片服务器分离</p><blockquote><p>把图片单独存储，尽量减少图片等大流量的开销，可以放在一些相关的平台上，如七牛等</p></blockquote></li><li><p>数据库集群和库表散列及缓存</p><blockquote><p>数据库的并发连接为100，一台数据库远远不够，可以从读写分离、主从复制，数据库集群方面来着手。另外尽量减少数据库的访问，可以使用缓存数据库如memcache、redis。</p></blockquote></li><li><p>镜像</p><blockquote><p>尽量减少下载，可以把不同的请求分发到多个镜像端</p></blockquote></li><li><p>负载均衡</p><blockquote><p>Apache的最大并发连接为1500，只能增加服务器，可以从硬件上着手，如F5服务器。当然硬件的成本比较高，我们往往从软件方面着手。</p></blockquote></li></ol><h4 id="Mysql的读写分离"><a href="#Mysql的读写分离" class="headerlink" title="Mysql的读写分离?"></a>Mysql的读写分离?</h4><blockquote><p>读写分离的实现原理就是在执行SQL语句的时候，判断到底是读操作还是写操作，把读的操作转向到读服务器上（从服务器，一般是多台），写的操作转到写的服务器上（主服务器，一般是一台，视数据量来看）。</p></blockquote><h4 id="说一下单引号双引号？"><a href="#说一下单引号双引号？" class="headerlink" title="说一下单引号双引号？"></a>说一下单引号双引号？</h4><blockquote><p>单引号内部的变量不会执行， 双引号会执行<br>单引号解析速度比双引号快。<br>单引号只能解析部分特殊字符，双引号可以解析所有特殊字符。</p></blockquote><h4 id="PHP7的新特性？重点"><a href="#PHP7的新特性？重点" class="headerlink" title="PHP7的新特性？重点"></a>PHP7的新特性？重点</h4><ul><li><p>标量类型声明：PHP 7 中的函数的形参类型声明可以是标量了。在 PHP 5 中只能是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。</p></li><li><p>返回值类型声明：增加了对返回类型声明的支持。 类似于参数类型声明，返回类型声明指明了函数返回值的类型。可用的类型与参数声明中可用的类型相同。</p></li><li><p>NULL 合并运算符：由于日常使用中存在大量同时使用三元表达式和 isset()的情况，NULL 合并运算符使得变量存在且值不为NULL， 它就会返回自身的值，否则返回它的第二个操作数。</p></li><li><p>use 加强：从同一 namespace 导入的类、函数和常量现在可以通过单个 use 语句 一次性导入了</p></li><li><p>匿名类：现在支持通过new class 来实例化一个匿名类</p></li></ul><h4 id="PHP-数组排序"><a href="#PHP-数组排序" class="headerlink" title="PHP 数组排序"></a>PHP 数组排序</h4><ul><li><p>sort() - 以升序对数组排序</p></li><li><p>rsort() - 以降序对数组排序</p></li><li><p>asort() - 根据值，以升序对关联数组进行排序</p></li><li><p>ksort() - 根据键，以升序对关联数组进行排序</p></li><li><p>arsort() - 根据值，以降序对关联数组进行排序</p></li><li><p>krsort() - 根据键，以降序对关联数组进行排序</p></li></ul><h4 id="PHP支持多继承吗？"><a href="#PHP支持多继承吗？" class="headerlink" title="PHP支持多继承吗？"></a>PHP支持多继承吗？</h4><blockquote><p>不支持。PHP中只允许单继承，父类可以被一个子类用关键字“extends”继承。</p></blockquote><h4 id="PHP如何实现多继承吗？"><a href="#PHP如何实现多继承吗？" class="headerlink" title="PHP如何实现多继承吗？"></a>PHP如何实现多继承吗？</h4><p>可以使用 interface 或 trait 实现 。</p><ol><li><p>使用 interface 声明类不能被实例化，并且属性必须是常量，方法不能有方法体　</p></li><li><p>trait 声明的类不能被实例化，由use引入，会覆盖父类的相同属性及方法，如果有多个use,那么按顺序下面的覆盖最上面的相同的属性及方法</p></li></ol><h4 id="优化MYSQL数据库的方法"><a href="#优化MYSQL数据库的方法" class="headerlink" title="优化MYSQL数据库的方法"></a>优化MYSQL数据库的方法</h4><ul><li><p>选择最有效率的表名顺序</p></li><li><p>WHERE子句中的连接顺序</p></li><li><p>SELECT子句中避免使用‘*’</p></li><li><p>用Where子句替换HAVING子句</p></li><li><p>通过内部函数提高SQL效率</p></li><li><p>避免在索引列上使用计算。</p></li><li><p>提高GROUP BY 语句的效率, 可以通过将不需要的记录在GROUP BY 之前过滤掉。</p></li><li><p>选取最适用的字段属性,应该尽量把字段设置为NOT NULL</p></li><li><p>使用连接（JOIN）来代替子查询(Sub-Queries)</p></li><li><p>使用联合(UNION)来代替手动创建的临时表</p></li><li><p>尽量少使用 LIKE 关键字和通配符</p></li><li><p>使用事务和外键</p></li></ul><h4 id="MySQL主从备份的原理？"><a href="#MySQL主从备份的原理？" class="headerlink" title="MySQL主从备份的原理？"></a>MySQL主从备份的原理？</h4><blockquote><p>mysql支持单向、异步复制，复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。</p></blockquote><h4 id="error-reporting-的作用？"><a href="#error-reporting-的作用？" class="headerlink" title="error_reporting() 的作用？"></a>error_reporting() 的作用？</h4><blockquote><p>设置 PHP 的报错级别并返回当前级别。</p></blockquote><h4 id="如何修改session的生存时间"><a href="#如何修改session的生存时间" class="headerlink" title="如何修改session的生存时间"></a>如何修改session的生存时间</h4><ol><li>在php.ini 中设置 session.gc_maxlifetime = 1440 //默认时间</li><li>代码实现<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$lifeTime = <span class="number">24</span> * <span class="number">3600</span>; <span class="comment">// 保存一天</span></span><br><span class="line"></span><br><span class="line">session_set_cookie_params($lifeTime);</span><br><span class="line"></span><br><span class="line">session_start();</span><br></pre></td></tr></table></figure></li></ol><h4 id="常见的-PHP-安全性攻击"><a href="#常见的-PHP-安全性攻击" class="headerlink" title="常见的 PHP 安全性攻击"></a>常见的 PHP 安全性攻击</h4><ol><li><p>SQL注入：用户利用在表单字段输入SQL语句的方式来影响正常的SQL执行。<br> 防止：</p><ul><li>使用mysql_real_escape_string()过滤数据</li><li>手动检查每一数据是否为正确的数据类型</li><li>使用预处理语句并绑定变量</li><li>参数化SQL：是指在设计与数据库链接并访问数据时，在需要填入数值或数据的地方，使用参数 (Parameter) 来给值，用@或？来表示参数。</li></ul></li><li><p>XSS攻击 ：跨站点脚本攻击，由用户输入一些数据到你的网站，其中包括客户端脚本(通常JavaScript)。如果你没有过滤就输出数据到另一个web页面，这个脚本将被执行。</p><blockquote><p>防止：为了防止XSS攻击，使用PHP的htmlentities()函数过滤再输出到浏览器。</p></blockquote></li><li><p>CSRF：跨站点请求伪造，是指一个页面发出的请求，看起来就像是网站的信任用户，但是是伪造的</p><blockquote><p>防止：一般来说，确保用户来自你的表单，并且匹配每一个你发送出去的表单。有两点一定要记住：<br>对用户会话采用适当的安全措施，例如:给每一个会话更新id和用户使用SSL。<br>生成另一个一次性的令牌并将其嵌入表单，保存在会话中(一个会话变量)，在提交时检查它。 如laravel中的 _token</p></blockquote></li><li><p>代码注入：代码注入是利用计算机漏洞通过处理无效数据造成的。问题出在，当你不小心执行任意代码，通常通过文件包含。写得很糟糕的代码可以允许一个远程文件包含并执行。如许多PHP函数，如require可以包含URL或文件名。</p><blockquote><p>防止代码注入<br>过滤用户输入<br>在php.ini中设置禁用allow_url_fopen和allow_url_include。这将禁用require/include/fopen的远程文件</p></blockquote></li></ol><h4 id="FILE表示什么意思？"><a href="#FILE表示什么意思？" class="headerlink" title="FILE表示什么意思？"></a><strong>FILE</strong>表示什么意思？</h4><blockquote><p>文件的完整路径和文件名。如果用在包含文件中，则返回包含文件名。自 PHP 4.0.2 起，<strong>FILE</strong> 总是包含一个绝对路径，而在此之前的版本有时会包含一个相对路径。</p></blockquote><h4 id="PHP如何实现页面跳转"><a href="#PHP如何实现页面跳转" class="headerlink" title="PHP如何实现页面跳转"></a>PHP如何实现页面跳转</h4><ol><li>方法一：php函数跳转，缺点，header头之前不能有输出，跳转后的程序继续执行，可用exit中断执行后面的程序。<ul><li>header(“Location:网址”);//直接跳转</li><li>header(“refresh:3;url=<a href="http://www.jsdaima.com&quot;);//三秒后跳转" target="_blank" rel="noopener">http://www.jsdaima.com&quot;);//三秒后跳转</a></li></ul></li><li>方法二：利用meta<ul><li><meta http-equiv="refresh" content="3;url='helloworld.php'"></li></ul></li></ol><h4 id="str是一段html文本，使用正则表达式去除其中的所有js脚本"><a href="#str是一段html文本，使用正则表达式去除其中的所有js脚本" class="headerlink" title="$str是一段html文本，使用正则表达式去除其中的所有js脚本"></a>$str是一段html文本，使用正则表达式去除其中的所有js脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$pattern = &apos;/&lt;script.*&gt;\.+&lt;\/script&gt;/&apos;;</span><br><span class="line"></span><br><span class="line">preg_replace($pattern, &apos;&apos;, $str);</span><br></pre></td></tr></table></figure><h4 id="mvc是什么-相互间有什么关系"><a href="#mvc是什么-相互间有什么关系" class="headerlink" title="mvc是什么?相互间有什么关系?"></a>mvc是什么?相互间有什么关系?</h4><blockquote><p>mvc是一种开发模式,主要分为三部分:m(model),也就是模型,负责数据的操作;v(view),也就是视图,负责前后台的显示;c(controller),也就是控制器,负责业务逻辑</p></blockquote><blockquote><p>客户端请求项目的控制器,如果执行过程中需要用到数据,控制器就会到模型中获取数据,再将获取到的数据通过视图显示出来</p></blockquote><h4 id="oop是什么"><a href="#oop是什么" class="headerlink" title="oop是什么?"></a>oop是什么?</h4><blockquote><p>oop是面向对象编程,面向对象编程是一种计算机编程架构,OOP 的一条基本原则是计算机程序是由单个能够起到子程序作用的单元或对象组合而成。</p><ul><li><strong>封装性</strong>：也称为信息隐藏，就是将一个类的使用和实现分开，只保留部分接口和方法与外部联系，或者说只公开了一些供开发人员使用的方法。于是开发人员只 需要关注这个类如何使用，而不用去关心其具体的实现过程，这样就能实现MVC分工合作，也能有效避免程序间相互依赖，实现代码模块间松藕合。</li><li>继承性：就是子类自动继承其父级类中的属性和方法，并可以添加新的属性和方法或者对部分属性和方法进行重写。继承增加了代码的可重用性。PHP只支持单继承，也就是说一个子类只能有一个父类。</li><li>多态性：子类继承了来自父级类中的属性和方法，并对其中部分方法进行重写。于是多个子类中虽然都具有同一个方法，但是这些子类实例化的对象调用这些相同的方法后却可以获得完全不同的结果，这种技术就是多态性。多态性增强了软件的灵活性。</li></ul></blockquote><ol><li><p>易维护</p><blockquote><p>采用面向对象思想设计的结构，可读性高，由于继承的存在，即使改变需求，那么维护也只是在局部模块，所以维护起来是非常方便和较低成本的。</p></blockquote></li><li><p>质量高</p><blockquote><p>在设计时，可重用现有的，在以前的项目的领域中已被测试过的类使系统满足业务需求并具有较高的质量。</p></blockquote></li><li><p>效率高</p><blockquote><p>在软件开发时，根据设计的需要对现实世界的事物进行抽象，产生类。使用这样的方法解决问题，接近于日常生活和自然的思考方式，势必提高软件开发的效率和质量。</p></blockquote></li><li><p>易扩展</p><blockquote><p>由于继承、封装、多态的特性，自然设计出高内聚、低耦合的系统结构，使得系统更灵活、更容易扩展，而且成本较低。</p></blockquote></li></ol><h4 id="smarty是什么-有什么作用"><a href="#smarty是什么-有什么作用" class="headerlink" title="smarty是什么,有什么作用?"></a>smarty是什么,有什么作用?</h4><blockquote><p>smarty是用php写出来的模板引擎,也是目前业界最著名的php模板引擎之一</p></blockquote><blockquote><p>它分离了逻辑代码和外在的显示,提供了一种易于管理和使用的方法,用来将混杂的php逻辑代码与html代码进行分离，我们公司使用的是TP框架,已经封装好了smarty模板,所以没有单独使用过。</p></blockquote><h4 id="thinkphp的特性有哪些"><a href="#thinkphp的特性有哪些" class="headerlink" title="thinkphp的特性有哪些?"></a>thinkphp的特性有哪些?</h4><ol><li>多表查询非常方便,在model中几句代码就可以完成对多表的关联操作</li><li>融合了smarty模板,使前后台分离</li><li>支持多种缓存技术,尤其对memcache技术支持非常好</li><li>命名规范,模型,视图,控制器严格遵循命名规则,通过命名一一对应</li><li>支持多种url模式</li><li>内置ajax返回方法,包括xml,json,html等</li><li>支持应用扩展,类库扩展,驱动扩展等</li></ol><h4 id="请介绍一下laravel框架"><a href="#请介绍一下laravel框架" class="headerlink" title="请介绍一下laravel框架?"></a>请介绍一下laravel框架?</h4><blockquote><p>laravel框架的设计思想比较先进,非常适合应用各种开发模式,作为一个框架,它为你准备好了一切,composer是php的未来,没有composer,php肯定要走向没落</p></blockquote><blockquote><p>laravel框架最大的特点和优秀之处就是集合了php比较新的特点,以及各种各样的设计模式,Ioc模式,依赖注入等</p></blockquote><h4 id="请简述一下数据库的优化"><a href="#请简述一下数据库的优化" class="headerlink" title="请简述一下数据库的优化?"></a>请简述一下数据库的优化?</h4><blockquote><p>数据库的优化可以从四个方面来优化:</p><ol><li>从结构层: web服务器采用负载均衡服务器,mysql服务器采用主从复制,读写分离</li><li>从储存层: 采用合适的存储引擎,采用三范式</li><li>从设计层: 采用分区分表,索引,表的字段采用合适的字段属性,适当的采用逆范式,开启mysql缓存</li><li>sql语句层:结果一样的情况下,采用效率高,速度快节省资源的sql语句执行</li></ol></blockquote><h4 id="怎么保证促销商品不会超卖"><a href="#怎么保证促销商品不会超卖" class="headerlink" title="怎么保证促销商品不会超卖?"></a>怎么保证促销商品不会超卖?</h4><blockquote><p>这个问题是我们当时开发时遇到的一个难点，超卖的原因主要是下的订单的数目和我们要促销的商品的数目不一致导致的，每次总是订单的数比我们的促销商品的数目要多，当时我们的小组讨论了好久，给出了好几个方案来实现：</p></blockquote><ol><li><p>第一种方案：在每次下订单前我们判断促销商品的数量够不够，不够不允许下订单，更改库存量时加上一个条件，只更改商品库存大于0的商品的库存，当时我们使用ab进行压力测试，当并发超过500，访问量超过2000时，还是会出现超卖现象。所以被我们否定了。</p></li><li><p>第二种方案：使用mysql的事务加排他锁来解决，首先我们选择数据库的存储引擎为innoDB，使用的是排他锁实现的，刚开始的时候我们测试了下共享锁，发现还是会出现超卖的现象。有个问题是，当我们进行高并发测试时，对数据库的性能影响很大，导致数据库的压力很大，最终也被我们否定了。</p></li><li><p>第三种方案：使用文件锁实现。当用户抢到一件促销商品后先触发文件锁，防止其他用户进入，该用户抢到促销品后再解开文件锁，放其他用户进行操作。这样可以解决超卖的问题，但是会导致文件得I/O开销很大。</p></li><li><p>最后我们使用了redis的队列来实现。将要促销的商品数量以队列的方式存入redis中，每当用户抢到一件促销商品则从队列中删除一个数据，确保商品不会超卖。这个操作起来很方便，而且效率极高，最终我们采取这种方式来实现</p></li></ol><h4 id="商城秒杀的实现"><a href="#商城秒杀的实现" class="headerlink" title="商城秒杀的实现?"></a>商城秒杀的实现?</h4><blockquote><p>抢购、秒杀是如今很常见的一个应用场景，主要需要解决的问题有两个：</p><ol><li>高并发对数据库产生的压力</li><li>竞争状态下如何解决库存的正确减少（”超卖”问题）</li></ol><ul><li>对于第一个问题，已经很容易想到用缓存来处理抢购，避免直接操作数据库，例如使用Redis。</li><li>第二个问题，我们可以使用redis队列来完成，把要秒杀的商品放入到队列中，因为pop操作是原子的，即使有很多用户同时到达，也是依次执行，文件锁和事务在高并发下性能下降很快，当然还要考虑其他方面的东西，比如抢购页面做成静态的，通过ajax调用接口，其中也可能会出现一个用户抢多次的情况，这时候需要再加上一个排队队列和抢购结果队列及库存队列。高并发情况下，将用户进入排队队列，用一个线程循环处理从排队队列取出一个用户，判断用户是否已在抢购结果队列，如果在，则已抢购，否则未抢购，库存减1，写数据库，将用户入结果队列。</li></ul></blockquote><h4 id="购物车的原理"><a href="#购物车的原理" class="headerlink" title="购物车的原理?"></a>购物车的原理?</h4><blockquote><p>购物车相当于现实中超市的购物车，不同的是一个是实体车，一个是虚拟车而已。用户可以在购物网站的不同页面之间跳转，以选购自己喜爱的商品，点击购买时，该商品就自动保存到你的购物车中，重复选购后，最后将选中的所有商品放在购物车中统一到付款台结账，这也是尽量让客户体验到现实生活中购物的感觉。服务器通过追踪每个用户的行动，以保证在结账时每件商品都物有其主。</p></blockquote><p><strong>主要涉及以下几点:</strong></p><ol><li>把商品添加到购物车，即订购</li><li>删除购物车中已定购的商品</li><li>修改购物车中某一本图书的订购数量</li><li>清空购物车</li><li>显示购物车中商品清单及数量、价格<blockquote><blockquote><p>实现购物车的关键在于服务器识别每一个用户并维持与他们的联系。但是HTTP协议是一种“无状态(Stateless)”的协议，因而服务器不能记住是谁在购买商品，当把商品加入购物车时，服务器也不知道购物车里原先有些什么，使得用户在不同页面间跳转时购物车无法“随身携带”，这都给购物车的实现造成了一定的困难。<br>目前购物车的实现主要是通过cookie、session或结合数据库的方式。</p></blockquote></blockquote></li></ol><h4 id="什么事面向对象？主要特征是什么？"><a href="#什么事面向对象？主要特征是什么？" class="headerlink" title="什么事面向对象？主要特征是什么？"></a>什么事面向对象？主要特征是什么？</h4><blockquote><p>面向对象是程序的一种设计方式，它利于提高程序的重用性，使程序结构更加清晰。主要特征：封装、继承、多态。</p></blockquote><h4 id="SESSION-与-COOKIE的区别是什么，请从协议，产生的原因与作用说明"><a href="#SESSION-与-COOKIE的区别是什么，请从协议，产生的原因与作用说明" class="headerlink" title="SESSION 与 COOKIE的区别是什么，请从协议，产生的原因与作用说明?"></a>SESSION 与 COOKIE的区别是什么，请从协议，产生的原因与作用说明?</h4><ul><li>http无状态协议，不能区分用户是否是从同一个网站上来的，同一个用户请求不同的页面不能看做是同一个用户。</li><li>SESSION存储在服务器端，COOKIE保存在客户端。Session比较安全，cookie用某些手段可以修改，不安全。Session依赖于cookie进行传递。</li><li>禁用cookie后，session不能正常使用。Session的缺点：保存在服务器端，每次读取都从服务器进行读取，对服务器有资源消耗。Session保存在服务器端的文件或数据库中，默认保存在文件中，文件路径由php配置文件的session.save_path指定。Session文件是公有的。</li></ul><h4 id="HTTP-状态中302、403、-500代码含义？"><a href="#HTTP-状态中302、403、-500代码含义？" class="headerlink" title="HTTP 状态中302、403、 500代码含义？"></a>HTTP 状态中302、403、 500代码含义？</h4><blockquote><p>一二三四五原则:（即一：消息系列；二：成功系列； 三：重定向系列；四：请求错误系列；五：服务器端错误系列。）</p><ul><li>302:临时转移成功，请求的内容已转移到新位置</li><li>403:禁止访问</li><li>500:服务器内部错误</li><li>401：代表未授权。</li></ul></blockquote><h4 id="请写出数据类型-int-char-varchar-datetime-text-的意思；请问-varchar-和-char有什么区别？"><a href="#请写出数据类型-int-char-varchar-datetime-text-的意思；请问-varchar-和-char有什么区别？" class="headerlink" title="请写出数据类型(int char varchar datetime text)的意思；请问 varchar 和 char有什么区别？"></a>请写出数据类型(int char varchar datetime text)的意思；请问 varchar 和 char有什么区别？</h4><ul><li>Int 整数</li><li>char 定长字符</li><li>Varchar 变长字符</li><li>Datetime 日期时间型</li><li>Text 文本型</li></ul><p><strong>Varchar与char的区别</strong></p><ul><li>char是固定长度的字符类型，分配多少空间，就占用多长空间。</li><li>Varchar是可变长度的字符类型，内容有多大就占用多大的空间，能有效节省空间。<blockquote><p>由于varchar类型是可变的，所以在数据长度改变的时，服务器要进行额外的操作，所以效率比char类型低。</p></blockquote></li></ul><h4 id="MyISAM和-InnoDB-的基本区别？索引结构如何实现？"><a href="#MyISAM和-InnoDB-的基本区别？索引结构如何实现？" class="headerlink" title="MyISAM和 InnoDB 的基本区别？索引结构如何实现？"></a>MyISAM和 InnoDB 的基本区别？索引结构如何实现？</h4><ul><li>MyISAM类型不支持事务，表锁，易产生碎片，要经常优化，读写速度较快，适合用于频繁查询的应用；</li><li>InnoDB类型支持事务，行锁，有崩溃恢复能力，读写速度比MyISAM慢，适合于插入和更新操作比较多的应用，空间占用大，不支持全文索引等。</li></ul><blockquote><p>创建索引：alert table tablename add index 索引名 (<code>字段名</code>)</p></blockquote><h4 id="isset-和-empty-区别"><a href="#isset-和-empty-区别" class="headerlink" title="isset() 和 empty() 区别"></a>isset() 和 empty() 区别</h4><ol><li>PHP的isset()函数 一般用来检测变量是否设置<blockquote><p>格式：bool isset ( mixed var [, mixed var [, …]] )</p></blockquote></li></ol><blockquote><p>功能：检测变量是否设置</p></blockquote><blockquote><p>返回值：<br>若变量不存在则返回 FALSE<br>若变量存在且其值为NULL，也返回 FALSE<br>若变量存在且值不为NULL，则返回 TURE<br>同时检查多个变量时，每个单项都符合上一条要求时才返回 TRUE，否则结果为 FALSE<br>版本：PHP 3, PHP 4, PHP 5<br>更多说明：<br>使用 unset() 释放变量之后，它将不再是 isset()。<br>PHP函数isset()只能用于变量，传递任何其它参数都将造成解析错误。<br>检测常量是否已设置可使用 defined() 函数。</p></blockquote><ol start="2"><li>PHP的empty()函数 判断值为否为空</li></ol><blockquote><p>格式：bool empty ( mixed var )</p></blockquote><blockquote><p>功能：检查一个变量是否为空</p></blockquote><blockquote><p>返回值：<br>若变量不存在则返回 TRUE<br>若变量存在且其值为””、0、”0”、NULL、、FALSE、array()、var $var; 以及没有任何属性的对象，则返回 TURE<br>若变量存在且值不为””、0、”0”、NULL、、FALSE、array()、var $var; 以及没有任何属性的对象，则返回 FALSE<br>版本：PHP 3, PHP 4, PHP 5<br>更多说明：<br>empty()的返回值=!(boolean) var，但不会因为变量未定义而产生警告信息。参见转换为布尔值获取更多信息。<br>empty() 只能用于变量，传递任何其它参数都将造成Paser error而终止运行。<br>检测常量是否已设置可使用 defined() 函数。</p></blockquote><h4 id="AJAX的优势是什么？"><a href="#AJAX的优势是什么？" class="headerlink" title="AJAX的优势是什么？"></a>AJAX的优势是什么？</h4><blockquote><p>ajax是异步传输技术，可以通过javascript实现，也可以通过JQuery框架实现，实现局部刷新，减轻了服务器的压力，也提高了用户体验。</p></blockquote><h4 id="在程序的开发中，如何提高程序的运行效率？"><a href="#在程序的开发中，如何提高程序的运行效率？" class="headerlink" title="在程序的开发中，如何提高程序的运行效率？"></a>在程序的开发中，如何提高程序的运行效率？</h4><ul><li>优化SQL语句，查询语句中尽量不使用select *，用哪个字段查哪个字段；少用子查询可用表连接代替；少用模糊查询；</li><li>数据表中创建索引；</li><li>对程序中经常用到的数据生成缓存。</li></ul><h4 id="对于大流量的网站-您采用什么样的方法来解决访问量问题"><a href="#对于大流量的网站-您采用什么样的方法来解决访问量问题" class="headerlink" title="对于大流量的网站,您采用什么样的方法来解决访问量问题?"></a>对于大流量的网站,您采用什么样的方法来解决访问量问题?</h4><ul><li>有效使用缓存，增加缓存命中率</li><li>使用负载均衡</li><li>对静态文件使用cdn进行存储和加速</li><li>想法减少数据库的使用</li><li>查看出现统计的瓶颈在哪里</li><li>反向代理</li></ul><h4 id="foo-和-foo-之间有什么区别"><a href="#foo-和-foo-之间有什么区别" class="headerlink" title="foo()和@foo()之间有什么区别?"></a>foo()和@foo()之间有什么区别?</h4><blockquote><p>@代表所有warning忽略</p></blockquote><h4 id="简述php的垃圾收集机制。"><a href="#简述php的垃圾收集机制。" class="headerlink" title="简述php的垃圾收集机制。"></a>简述php的垃圾收集机制。</h4><blockquote><p>php中的变量存储在变量容器zval中，zval中除了存储变量类型和值外，还有is_ref和refcount字段。refcount表示指向变量的元素个数，is_ref表示变量是否有别名。如果refcount为0时，就回收该变量容器。如果一个zval的refcount减1之后大于0，它就会进入垃圾缓冲区。当缓冲区达到最大值后，回收算法会循环遍历zval，判断其是否为垃圾，并进行释放处理。</p></blockquote><h4 id="echo、print-r、print、var-dump区别"><a href="#echo、print-r、print、var-dump区别" class="headerlink" title="echo、print_r、print、var_dump区别"></a>echo、print_r、print、var_dump区别</h4><ul><li>echo：语句结构；</li><li>print：是函数，有返回值</li><li>print_r：能打印数组，对象</li><li>var_dump:能打印对象数组，并且带数据类型</li></ul><h4 id="写出smarty模板的特点"><a href="#写出smarty模板的特点" class="headerlink" title="写出smarty模板的特点"></a>写出smarty模板的特点</h4><blockquote><p>速度快，编译型，缓存技术，插件机制，强大的表现逻辑</p></blockquote><h4 id="如何把一个GB2312格式的字符串装换成UTF-8格式？"><a href="#如何把一个GB2312格式的字符串装换成UTF-8格式？" class="headerlink" title="如何把一个GB2312格式的字符串装换成UTF-8格式？"></a>如何把一个GB2312格式的字符串装换成UTF-8格式？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv(&apos;GB2312&apos;,&apos;UTF-8&apos;,&apos;IT技能学习&apos;);</span><br></pre></td></tr></table></figure><h4 id="如果需要原样输出用户输入的内容，在数据入库前，要用哪个函数处理？"><a href="#如果需要原样输出用户输入的内容，在数据入库前，要用哪个函数处理？" class="headerlink" title="如果需要原样输出用户输入的内容，在数据入库前，要用哪个函数处理？"></a>如果需要原样输出用户输入的内容，在数据入库前，要用哪个函数处理？</h4><blockquote><p>htmlspecialchars或者htmlentities</p></blockquote><h4 id="什么是事务？及其特性？"><a href="#什么是事务？及其特性？" class="headerlink" title="什么是事务？及其特性？"></a>什么是事务？及其特性？</h4><blockquote><p>事务：是一系列的数据库操作，是数据库应用的基本逻辑单位。</p></blockquote><p><strong>事务特性：</strong></p><ol><li>原子性：即不可分割性，事务要么全部被执行，要么就全部不被执行。</li><li>一致性或可串性。事务的执行使得数据库从一种正确状态转换成另一种正确状态</li><li>隔离性。在事务正确提交之前，不允许把该事务对数据的任何改变提供给任何其他事务，</li><li>持久性。事务正确提交后，其结果将永久保存在数据库中，即使在事务提交后有了其他故障，事务的处理结果也会得到保存。</li></ol><blockquote><p><strong>或者这样理解</strong>：<br>事务就是被绑定在一起作为一个逻辑工作单元的SQL语句分组，如果任何一个语句操作失败那么整个操作就被失败，以后操作就会回滚到操作前状态，或者是上有个节点。为了确保要么执行，要么不执行，就可以使用事务。要将有组语句作为事务考虑，就需要通过ACID测试，即原子性，一致性，隔离性和持久性。</p></blockquote><h4 id="什么是锁？"><a href="#什么是锁？" class="headerlink" title="什么是锁？"></a>什么是锁？</h4><blockquote><p>数据库是一个多用户使用的共享资源。当多个用户并发地存取数据时，在数据库中就会产生多个事务同时存取同一数据的情况。若对并发操作不加控制就可能会读取和存储不正确的数据，破坏数据库的一致性。</p></blockquote><blockquote><p>加锁是实现数据库并发控制的一个非常重要的技术。当事务在对某个数据对象进行操作前，先向系统发出请求，对其加锁。加锁后事务就对该数据对象有了一定的控制，在该事务释放锁之前，其他的事务不能对此数据对象进行更新操作。</p></blockquote><blockquote><p>基本锁类型：锁包括行级锁和表级锁</p></blockquote><h4 id="索引的作用？和它的优点缺点是什么？"><a href="#索引的作用？和它的优点缺点是什么？" class="headerlink" title="索引的作用？和它的优点缺点是什么？"></a>索引的作用？和它的优点缺点是什么？</h4><blockquote><p>索引就一种特殊的查询表，数据库的搜索引擎可以利用它加速对数据的检索。它很类似与现实生活中书的目录，不需要查询整本书内容就可以找到想要的数据。索引可以是唯一的，创建索引允许指定单个列或者是多个列。缺点是它减慢了数据录入的速度，同时也增加了数据库的尺寸大小。</p></blockquote><h4 id="如何通俗地理解三个范式？"><a href="#如何通俗地理解三个范式？" class="headerlink" title="如何通俗地理解三个范式？"></a>如何通俗地理解三个范式？</h4><ul><li>第一范式：1NF是对属性的原子性约束，要求属性具有原子性，不可再分解；</li><li>第二范式：2NF是对记录的惟一性约束，要求记录有惟一标识，即实体的惟一性；</li><li>第三范式：3NF是对字段冗余性的约束，即任何字段不能由其他字段派生出来，它要求字段没有冗余。</li></ul><h4 id="主键、外键和索引的区别？"><a href="#主键、外键和索引的区别？" class="headerlink" title="主键、外键和索引的区别？"></a>主键、外键和索引的区别？</h4><blockquote><p>定义：<br>主键–唯一标识一条记录，不能有重复的，不允许为空<br>外键–表的外键是另一表的主键, 外键可以有重复的, 可以是空值<br>索引–该字段没有重复值，但可以有一个空值</p></blockquote><blockquote><p>作用：<br>主键–用来保证数据完整性<br>外键–用来和其他表建立联系用的<br>索引–是提高查询排序的速度</p></blockquote><blockquote><p>个数：<br>主键–主键只能有一个<br>外键–一个表可以有多个外键<br>索引–一个表可以有多个唯一索引</p></blockquote><h4 id="简述-private、-protected、-public修饰符的访问权限。"><a href="#简述-private、-protected、-public修饰符的访问权限。" class="headerlink" title="简述 private、 protected、 public修饰符的访问权限。"></a>简述 private、 protected、 public修饰符的访问权限。</h4><ul><li>private : 私有成员, 在类的内部才可以访问。</li><li>protected : 保护成员，该类内部和继承类中可以访问。</li><li>public : 公共成员，完全公开，没有访问限制。</li></ul><h4 id="堆和栈的区别？"><a href="#堆和栈的区别？" class="headerlink" title="堆和栈的区别？"></a>堆和栈的区别？</h4><ul><li>堆是程序运行期间动态分配的内存空间，你可以根据程序的运行情况确定要分配的堆内存的大小；</li><li>栈是编译期间就分配好的内存空间，因此你的代码中必须就栈的大小有明确的定义。</li></ul><h4 id="常用的魔术方法有哪些？举例说明"><a href="#常用的魔术方法有哪些？举例说明" class="headerlink" title="常用的魔术方法有哪些？举例说明"></a>常用的魔术方法有哪些？举例说明</h4><blockquote><p>php规定以两个下划线（<strong>）开头的方法都保留为魔术方法，所以建议大家函数名最好不用</strong>开头，除非是为了重载已有的魔术方法。</p></blockquote><ul><li>__construct() 实例化类时自动调用。</li><li>__destruct() 类对象使用结束时自动调用。</li><li>__set() 在给未定义的属性赋值的时候调用。</li><li>__get() 调用未定义的属性时候调用。</li><li>__isset() 使用isset()或empty()函数时候会调用。</li><li>__unset() 使用unset()时候会调用。</li><li>__sleep() 使用serialize序列化时候调用。</li><li>__wakeup() 使用unserialize反序列化的时候调用。</li><li>__call() 调用一个不存在的方法的时候调用。</li><li>__callStatic()调用一个不存在的静态方法是调用。</li><li>__toString() 把对象转换成字符串的时候会调用。比如 echo。</li><li>__invoke() 当尝试把对象当方法调用时调用。</li><li>__set_state() 当使用var_export()函数时候调用。接受一个数组参数。</li><li>__clone() 当使用clone复制一个对象时候调用。</li></ul><h4 id="this和self、parent这三个关键词分别代表什么？在哪些场合下使用？"><a href="#this和self、parent这三个关键词分别代表什么？在哪些场合下使用？" class="headerlink" title="$this和self、parent这三个关键词分别代表什么？在哪些场合下使用？"></a>$this和self、parent这三个关键词分别代表什么？在哪些场合下使用？</h4><blockquote><p>$this 当前对象<br>self 当前类<br>parent 当前类的父类</p></blockquote><blockquote><p>$this在当前类中使用,使用-&gt;调用属性和方法<br>self也在当前类中使用，不过需要使用::调用<br>parent在类中使用</p></blockquote><h4 id="作用域操作符-如何使用？都在哪些场合下使用？"><a href="#作用域操作符-如何使用？都在哪些场合下使用？" class="headerlink" title="作用域操作符::如何使用？都在哪些场合下使用？"></a>作用域操作符::如何使用？都在哪些场合下使用？</h4><ul><li>调用类常量</li><li>调用静态方法</li></ul><h4 id="autoload-方法的工作原理是什么？"><a href="#autoload-方法的工作原理是什么？" class="headerlink" title="__autoload()方法的工作原理是什么？"></a>__autoload()方法的工作原理是什么？</h4><blockquote><p>使用这个魔术函数的基本条件是类文件的文件名要和类的名字保持一致。<br>当程序执行到实例化某个类的时候，如果在实例化前没有引入这个类文件，那么就自动执行__autoload()函数。<br>这个函数会根据实例化的类的名称来查找这个类文件的路径，当判断这个类文件路径下确实存在这个类文件后<br>就执行include或者require来载入该类，然后程序继续执行，如果这个路径下不存在该文件时就提示错误。<br>使用自动载入的魔术函数可以不必要写很多个include或者require函数。</p></blockquote><h4 id="简述高并发网站解决方案。"><a href="#简述高并发网站解决方案。" class="headerlink" title="简述高并发网站解决方案。"></a>简述高并发网站解决方案。</h4><ul><li>前端优化（CND加速、建立独立图片服务器）</li><li>服务端优化（页面静态化、并发处理[异步|多线程]、队列处理）</li><li>数据库优化（数据库缓存[Memcachaed|Redis]、读写分离、分库分表、分区）</li><li>Web服务器优化（负载均衡、反向代理）</li></ul><h4 id="Mysql的存储引擎-myisam和innodb的区别。"><a href="#Mysql的存储引擎-myisam和innodb的区别。" class="headerlink" title="Mysql的存储引擎,myisam和innodb的区别。"></a>Mysql的存储引擎,myisam和innodb的区别。</h4><ul><li>MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持；</li><li>MyISAM类型的表强调的是性能，其执行速度比InnoDB类型更快；</li><li>InnoDB不支持FULLTEXT类型的索引；</li><li>InnoDB中不保存表的具体行数，也就是说，执行select count(*) from table时，InnoDB要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可；</li><li>对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引；</li><li>DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除；</li><li>LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性(例如外键)的表不适用；</li><li>MyISAM支持表锁，InnoDB支持行锁。</li></ul><blockquote><p>MyISAM：成熟、稳定、易于管理，快速读取。一些功能不支持（事务等），表级锁。</p></blockquote><blockquote><p>InnoDB：支持事务、外键等特性、数据行锁定。空间占用大，不支持全文索引等。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;收集了一些常见的面试题&lt;br&gt;
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>python调用微信扫码登录获取朋友列表</title>
    <link href="http://yoursite.com/2019/06/27/python%E8%B0%83%E7%94%A8%E5%BE%AE%E4%BF%A1%E6%89%AB%E7%A0%81%E7%99%BB%E5%BD%95%E8%8E%B7%E5%8F%96%E6%9C%8B%E5%8F%8B%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2019/06/27/python调用微信扫码登录获取朋友列表/</id>
    <published>2019-06-27T08:25:30.000Z</published>
    <updated>2019-08-06T13:16:08.269Z</updated>
    
    <content type="html"><![CDATA[<p>通过分析微信网页版登录相关接口实现用python扫描登录获取朋友列表（window下测试）。<br><a id="more"></a></p><h3 id="主线程"><a href="#主线程" class="headerlink" title="主线程"></a>主线程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-04-12 11:05:31</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : link</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> xml.dom.minidom</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebwxLogin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化参数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.session = requests.session()</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 5.1; rv:33.0) Gecko/20100101 Firefox/33.0'</span>&#125;</span><br><span class="line">        self.QRImgPath = os.path.split(os.path.realpath(__file__))[<span class="number">0</span>] + os.sep + <span class="string">'webWeixinQr.jpg'</span></span><br><span class="line">        self.uuid = <span class="string">''</span></span><br><span class="line">        self.tip = <span class="number">0</span></span><br><span class="line">        self.base_uri = <span class="string">'https://wx2.qq.com'</span></span><br><span class="line">        self.redirect_uri = <span class="string">''</span></span><br><span class="line">        self.skey = <span class="string">''</span></span><br><span class="line">        self.wxsid = <span class="string">''</span></span><br><span class="line">        self.wxuin = <span class="string">''</span></span><br><span class="line">        self.pass_ticket = <span class="string">''</span></span><br><span class="line">        self.deviceId = <span class="string">'e000000000000000'</span></span><br><span class="line">        self.BaseRequest = &#123;&#125;</span><br><span class="line">        self.ContactList = []</span><br><span class="line">        self.My = []</span><br><span class="line">        self.SyncKey = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取UUID</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getUUID</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'https://login.weixin.qq.com/jslogin'</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">'appid'</span>: <span class="string">'wx782c26e4c19acffb'</span>,</span><br><span class="line">            <span class="string">'redirect_uri'</span>: <span class="string">'https://wx2.qq.com/cgi-bin/mmwebwx-bin/webwxnewloginpage'</span>,</span><br><span class="line">            <span class="string">'fun'</span>: <span class="string">'new'</span>,</span><br><span class="line">            <span class="string">'lang'</span>: <span class="string">'zh_CN'</span>,</span><br><span class="line">            <span class="string">'_'</span>: int(time.time() * <span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        response = self.session.get(url, params=params, verify=<span class="keyword">False</span>)</span><br><span class="line">        target = response.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        print(target)</span><br><span class="line">        pattern = <span class="string">'window.QRLogin.code = (\d+); window.QRLogin.uuid = "(.*)"'</span></span><br><span class="line">        ob = re.search(pattern, target)</span><br><span class="line">        code = ob.group(<span class="number">1</span>)</span><br><span class="line">        self.uuid = ob.group(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> code == <span class="string">'200'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取二维码</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showQRImage</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'https://login.weixin.qq.com/qrcode/'</span> + self.uuid</span><br><span class="line">        response = self.session.get(url, verify=<span class="keyword">False</span>)</span><br><span class="line">        self.tip = <span class="number">1</span></span><br><span class="line">        <span class="keyword">with</span> open(self.QRImgPath, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.content)</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 打开二维码</span></span><br><span class="line">        <span class="keyword">if</span> sys.platform.find(<span class="string">'darwin'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">            subprocess.call([<span class="string">'open'</span>, self.QRImgPath])  <span class="comment"># 苹果系统</span></span><br><span class="line">        <span class="keyword">elif</span> sys.platform.find(<span class="string">'linux'</span>) &gt;= <span class="number">0</span>:</span><br><span class="line">            subprocess.call([<span class="string">'xdg-open'</span>, self.QRImgPath])  <span class="comment"># linux系统</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            os.startfile(self.QRImgPath)  <span class="comment"># windows系统</span></span><br><span class="line">        print(<span class="string">'请使用微信扫描二维码登录'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检测登录状态</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkLogin</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'https://login.wx2.qq.com/cgi-bin/mmwebwx-bin/login'</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">'loginicon'</span>: <span class="string">'true'</span>,</span><br><span class="line">            <span class="string">'uuid'</span>: self.uuid,</span><br><span class="line">            <span class="string">'tip'</span>: self.tip,</span><br><span class="line">            <span class="string">'_'</span>: int(time.time() * <span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        response = self.session.get(url, params=params, verify=<span class="keyword">False</span>)</span><br><span class="line">        target = response.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        pattern = <span class="string">'window.code=(\d+);'</span></span><br><span class="line">        ob = re.search(pattern, target)</span><br><span class="line">        code = ob.group(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> code == <span class="string">'201'</span>:  <span class="comment"># 已扫描</span></span><br><span class="line">            print(<span class="string">'成功扫描,请在手机上点击确认登录'</span>)</span><br><span class="line">            self.tip = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> code == <span class="string">'200'</span>:  <span class="comment"># 已登录</span></span><br><span class="line">            print(<span class="string">'正在登录中...'</span>)</span><br><span class="line">            regx = <span class="string">'window.redirect_uri="(\S+?)";'</span></span><br><span class="line">            ob = re.search(regx, target)</span><br><span class="line">            self.redirect_uri = ob.group(<span class="number">1</span>) + <span class="string">'&amp;fun=new'</span></span><br><span class="line">            self.base_uri = self.redirect_uri[:self.redirect_uri.rfind(<span class="string">'/'</span>)]</span><br><span class="line">            print(self.base_uri)</span><br><span class="line">        <span class="keyword">elif</span> code == <span class="string">'408'</span>:  <span class="comment"># 超时</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 登录</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">        response = self.session.get(self.redirect_uri, verify=<span class="keyword">False</span>)</span><br><span class="line">        data = response.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="comment"># data = '&lt;error&gt;&lt;ret&gt;0&lt;/ret&gt;&lt;message&gt;&lt;/message&gt;&lt;skey&gt;@crypt_609947c9_e2770547725ade68fec8429b023b124f&lt;/skey&gt;&lt;wxsid&gt;OxjDKFg0ElOfXgsO&lt;/wxsid&gt;&lt;wxuin&gt;1744069411&lt;/wxuin&gt;&lt;pass_ticket&gt;4uKemtRtpCiuOdIb%2B0n9KLuxKcjajfWIYt4JWJFxOaNvJACjm%2B%2BvO8ET0OqPzqkx&lt;/pass_ticket&gt;&lt;isgrayscale&gt;1&lt;/isgrayscale&gt;&lt;/error&gt;'</span></span><br><span class="line">        print(data)</span><br><span class="line">        doc = xml.dom.minidom.parseString(data)</span><br><span class="line">        root = doc.documentElement</span><br><span class="line">        <span class="comment"># 提取响应中的参数</span></span><br><span class="line">        <span class="keyword">for</span> node <span class="keyword">in</span> root.childNodes:</span><br><span class="line">            <span class="keyword">if</span> node.nodeName == <span class="string">'skey'</span>:</span><br><span class="line">                self.skey = node.childNodes[<span class="number">0</span>].data</span><br><span class="line">            <span class="keyword">elif</span> node.nodeName == <span class="string">'wxsid'</span>:</span><br><span class="line">                self.wxsid = node.childNodes[<span class="number">0</span>].data</span><br><span class="line">            <span class="keyword">elif</span> node.nodeName == <span class="string">'wxuin'</span>:</span><br><span class="line">                self.wxuin = node.childNodes[<span class="number">0</span>].data</span><br><span class="line">            <span class="keyword">elif</span> node.nodeName == <span class="string">'pass_ticket'</span>:</span><br><span class="line">                self.pass_ticket = node.childNodes[<span class="number">0</span>].data</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> all((self.skey, self.wxsid, self.wxuin, self.pass_ticket)):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        self.BaseRequest = &#123;</span><br><span class="line">            <span class="string">'Uin'</span>: int(self.wxuin),</span><br><span class="line">            <span class="string">'Sid'</span>: self.wxsid,</span><br><span class="line">            <span class="string">'Skey'</span>: self.skey,</span><br><span class="line">            <span class="string">'DeviceID'</span>: self.deviceId,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化界面</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">webwxinit</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = self.base_uri + <span class="string">'/webwxinit?r=%s&amp;lang=zh_CN&amp;pass_ticket=%s'</span> % (self.wxuin, self.pass_ticket)</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">'BaseRequest'</span>: self.BaseRequest</span><br><span class="line">        &#125;</span><br><span class="line">        h = self.headers</span><br><span class="line">        h[<span class="string">'ContentType'</span>] = <span class="string">'application/json; charset=UTF-8'</span></span><br><span class="line">        response = self.session.post(url, json=params, headers=h, verify=<span class="keyword">False</span>)</span><br><span class="line">        data = response.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        dic = json.loads(data)</span><br><span class="line">        self.ContactList = dic[<span class="string">'ContactList'</span>]</span><br><span class="line">        self.My = dic[<span class="string">'User'</span>]</span><br><span class="line">        SyncKeyList = []</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> dic[<span class="string">'SyncKey'</span>][<span class="string">'List'</span>]:</span><br><span class="line">            SyncKeyList.append(<span class="string">'%s_%s'</span> % (item[<span class="string">'Key'</span>], item[<span class="string">'Val'</span>]))</span><br><span class="line">        self.SyncKey = <span class="string">'|'</span>.join(SyncKeyList)</span><br><span class="line">        ErrMsg = dic[<span class="string">'BaseResponse'</span>][<span class="string">'ErrMsg'</span>]</span><br><span class="line">        Ret = dic[<span class="string">'BaseResponse'</span>][<span class="string">'Ret'</span>]</span><br><span class="line">        <span class="keyword">if</span> Ret != <span class="number">0</span>:</span><br><span class="line">            print(ErrMsg)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取联系人</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">webwxgetcontact</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = self.base_uri + <span class="string">'/webwxgetcontact'</span></span><br><span class="line">        print(<span class="number">23432</span>, url)</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">'lang'</span>: <span class="string">'zh_CN'</span>,</span><br><span class="line">            <span class="string">'pass_ticket'</span>: self.pass_ticket,</span><br><span class="line">            <span class="string">'r'</span>: int(time.time() * <span class="number">1000</span>),</span><br><span class="line">            <span class="string">'seq'</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">'skey'</span>: self.skey</span><br><span class="line">        &#125;</span><br><span class="line">        h = self.headers</span><br><span class="line">        h[<span class="string">'ContentType'</span>] = <span class="string">'application/json; charset=UTF-8'</span></span><br><span class="line">        response = self.session.get(url, params=params, verify=<span class="keyword">False</span>)</span><br><span class="line">        data = response.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        dic = json.loads(data)</span><br><span class="line">        MemberList = dic[<span class="string">'MemberList'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 倒序遍历,不然删除的时候出问题..</span></span><br><span class="line">        SpecialUsers = [<span class="string">"newsapp"</span>, <span class="string">"fmessage"</span>, <span class="string">"filehelper"</span>, <span class="string">"weibo"</span>, <span class="string">"qqmail"</span>, <span class="string">"tmessage"</span>, <span class="string">"qmessage"</span>, <span class="string">"qqsync"</span>,</span><br><span class="line">                        <span class="string">"floatbottle"</span>, <span class="string">"lbsapp"</span>, <span class="string">"shakeapp"</span>, <span class="string">"medianote"</span>, <span class="string">"qqfriend"</span>, <span class="string">"readerapp"</span>, <span class="string">"blogapp"</span>,</span><br><span class="line">                        <span class="string">"facebookapp"</span>, <span class="string">"masssendapp"</span>,</span><br><span class="line">                        <span class="string">"meishiapp"</span>, <span class="string">"feedsapp"</span>, <span class="string">"voip"</span>, <span class="string">"blogappweixin"</span>, <span class="string">"weixin"</span>, <span class="string">"brandsessionholder"</span>,</span><br><span class="line">                        <span class="string">"weixinreminder"</span>, <span class="string">"wxid_novlwrv3lqwv11"</span>, <span class="string">"gh_22b87fa7cb3c"</span>, <span class="string">"officialaccounts"</span>,</span><br><span class="line">                        <span class="string">"notification_messages"</span>, <span class="string">"wxitil"</span>, <span class="string">"userexperience_alarm"</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(MemberList) - <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">            Member = MemberList[i]</span><br><span class="line">            <span class="keyword">if</span> Member[<span class="string">'VerifyFlag'</span>] &amp; <span class="number">8</span> != <span class="number">0</span>:  <span class="comment"># 公众号/服务号</span></span><br><span class="line">                MemberList.remove(Member)</span><br><span class="line">            <span class="keyword">elif</span> Member[<span class="string">'UserName'</span>] <span class="keyword">in</span> SpecialUsers:  <span class="comment"># 特殊账号</span></span><br><span class="line">                MemberList.remove(Member)</span><br><span class="line">            <span class="keyword">elif</span> Member[<span class="string">'UserName'</span>].find(<span class="string">'@@'</span>) != <span class="number">-1</span>:  <span class="comment"># 群聊</span></span><br><span class="line">                MemberList.remove(Member)</span><br><span class="line">            <span class="keyword">elif</span> Member[<span class="string">'UserName'</span>] == self.My[<span class="string">'UserName'</span>]:  <span class="comment"># 自己</span></span><br><span class="line">                MemberList.remove(Member)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> MemberList</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 主程序</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.getUUID():</span><br><span class="line">            print(<span class="string">'获取uuid失败'</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.showQRImage()</span><br><span class="line"></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> self.checkLogin() != <span class="string">'200'</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        os.remove(self.QRImgPath)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.login():</span><br><span class="line">            print(<span class="string">'登录失败'</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 登录完成, 下面查询好友</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.webwxinit():</span><br><span class="line">            print(<span class="string">'初始化失败'</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        MemberList = self.webwxgetcontact()</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'微信通讯录共%s位好友'</span> % len(MemberList))</span><br><span class="line">        nantop = <span class="number">0</span></span><br><span class="line">        nvtop = <span class="number">0</span></span><br><span class="line">        wztop = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> MemberList:</span><br><span class="line">            <span class="comment"># sex = '未知' if x['Sex'] == 0 else '男' if x['Sex'] == 1 else '女'</span></span><br><span class="line">            <span class="comment"># print('昵称:%s, 性别:%s, 备注:%s, 签名:%s' % (x['NickName'], sex, x['RemarkName'], x['Signature']))</span></span><br><span class="line">            <span class="keyword">if</span> x[<span class="string">'Sex'</span>] == <span class="number">0</span>:</span><br><span class="line">                wztop = wztop + <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> x[<span class="string">'Sex'</span>] == <span class="number">1</span>:</span><br><span class="line">                nantop = nantop + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nvtop = nvtop + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">'其中男：%d，女：%d，未知：%d'</span> % (nantop, nvtop, wztop))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'开始'</span>)</span><br><span class="line">    wx = WebwxLogin()</span><br><span class="line">    wx.main()</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">开始</span><br><span class="line">E:\Python\Python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span><br><span class="line">  InsecureRequestWarning)</span><br><span class="line">window.QRLogin.code = 200; window.QRLogin.uuid = &quot;QYQyezcMFQ==&quot;;</span><br><span class="line">E:\Python\Python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span><br><span class="line">  InsecureRequestWarning)</span><br><span class="line">请使用微信扫描二维码登录</span><br><span class="line">E:\Python\Python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span><br><span class="line">  InsecureRequestWarning)</span><br><span class="line">成功扫描,请在手机上点击确认登录</span><br><span class="line">E:\Python\Python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span><br><span class="line">  InsecureRequestWarning)</span><br><span class="line">正在登录中...</span><br><span class="line">https://wx2.qq.com/cgi-bin/mmwebwx-bin</span><br><span class="line">E:\Python\Python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span><br><span class="line">  InsecureRequestWarning)</span><br><span class="line">&lt;error&gt;&lt;ret&gt;0&lt;/ret&gt;&lt;message&gt;&lt;/message&gt;&lt;skey&gt;@crypt_c25c57d7_acd069ae3977d7820c81fe8b3d1c021b&lt;/skey&gt;&lt;wxsid&gt;TmE0nw5bo2fLJJwt&lt;/wxsid&gt;&lt;wxuin&gt;2508725506&lt;/wxuin&gt;&lt;pass_ticket&gt;nIdLgkUjB%2B7CnLC%2Bpn9mhzGpRobtp4rwVKXyAuF46yELAFuGUfVOz0IUVAC8goWr&lt;/pass_ticket&gt;&lt;isgrayscale&gt;1&lt;/isgrayscale&gt;&lt;/error&gt;</span><br><span class="line">E:\Python\Python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span><br><span class="line">  InsecureRequestWarning)</span><br><span class="line">23432 https://wx2.qq.com/cgi-bin/mmwebwx-bin/webwxgetcontact</span><br><span class="line">E:\Python\Python37-32\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings</span><br><span class="line">  InsecureRequestWarning)</span><br><span class="line">微信通讯录共287位好友</span><br><span class="line">其中男：169，女：100，未知：18</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过分析微信网页版登录相关接口实现用python扫描登录获取朋友列表（window下测试）。&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python模块flask示例</title>
    <link href="http://yoursite.com/2019/06/27/python%E6%A8%A1%E5%9D%97flask%E7%A4%BA%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/06/27/python模块flask示例/</id>
    <published>2019-06-27T08:05:01.000Z</published>
    <updated>2019-08-06T13:16:08.266Z</updated>
    
    <content type="html"><![CDATA[<p>python模块flask接口，实现返回微信公众号的access_token和ticket以及微信模板消息发送。<br><a id="more"></a></p><h3 id="配置设置"><a href="#配置设置" class="headerlink" title="配置设置"></a>配置设置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2017-11-09 16:16:21</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : http://example.org</span></span><br><span class="line"><span class="comment"># @Version : $Id$</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义个人测试公众号的配置</span></span><br><span class="line">myWeChat = &#123;</span><br><span class="line">    <span class="string">'appID'</span>: <span class="string">'wx89*********ba6'</span>,</span><br><span class="line">    <span class="string">'appsecret'</span>: <span class="string">'c69b71**********9ec1e'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">weChat_api = &#123;</span><br><span class="line">    <span class="string">'send_temp_msg'</span>: <span class="string">'https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=%s'</span>,  <span class="comment"># 发送模板消息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义redis配置</span></span><br><span class="line">myRedis = &#123;<span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>, <span class="string">'port'</span>: <span class="number">6379</span>, <span class="string">'db'</span>: <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">redisKey = &#123;</span><br><span class="line">    <span class="string">'access_token'</span>: <span class="string">'wechat_access_token'</span>,  <span class="comment"># 微信token</span></span><br><span class="line">    <span class="string">'token_tmp'</span>: <span class="string">'wechat_token_tmp'</span>,  <span class="comment"># 微信token临时储存</span></span><br><span class="line">    <span class="string">'ticket'</span>: <span class="string">'wechat_ticket'</span>,  <span class="comment"># 微信token</span></span><br><span class="line">    <span class="string">'ticket_tmp'</span>: <span class="string">'wechat_ticket_tmp'</span>,  <span class="comment"># 微信ticket临时储存</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日志记录"><a href="#日志记录" class="headerlink" title="日志记录"></a>日志记录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2017-11-09 16:16:21</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : http://example.org</span></span><br><span class="line"><span class="comment"># @Version : $Id$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> logging.handlers <span class="keyword">import</span> TimedRotatingFileHandler</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">logfilename = <span class="string">'/home/python/pyapis/logs/'</span> + str(time.strftime(<span class="string">'%Y%m%d'</span>)) + <span class="string">'.log'</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    level=logging.INFO,</span><br><span class="line">    format=<span class="string">'%(asctime)s %(levelname)s %(message)s'</span>,</span><br><span class="line">    datefmt=<span class="string">'%d %m %Y %H:%M:%S'</span>,</span><br><span class="line">    filename=logfilename,</span><br><span class="line">    filemode=<span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line"><span class="comment"># # 定义一个TimedRotatingFileHandler，按时间段写日志，不删除历史日志.服务器定时重启的话请注释这块</span></span><br><span class="line"><span class="comment"># Rthandler = TimedRotatingFileHandler('/home/py/wechat_py/logs/myapp.log', when="D", interval=1, backupCount=0)</span></span><br><span class="line"><span class="comment"># # 设置后缀名称，跟strftime的格式一样</span></span><br><span class="line"><span class="comment"># Rthandler.suffix = "%Y-%m-%d.log"</span></span><br><span class="line"><span class="comment"># Rthandler.setLevel(logging.DEBUG)</span></span><br><span class="line"><span class="comment"># formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')</span></span><br><span class="line"><span class="comment"># Rthandler.setFormatter(formatter)</span></span><br><span class="line"><span class="comment"># logging.getLogger('').addHandler(Rthandler)</span></span><br><span class="line"><span class="comment">###########################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line"><span class="comment"># 定义一个StreamHandler，将INFO级别或更高的日志信息打印到标准错误，并将其添加到当前的日志处理对象#</span></span><br><span class="line">console = logging.StreamHandler()</span><br><span class="line">console.setLevel(logging.INFO)</span><br><span class="line">formatter = logging.Formatter(<span class="string">'%(asctime)s - %(name)s - %(levelname)s - %(message)s'</span>)</span><br><span class="line">console.setFormatter(formatter)</span><br><span class="line">logging.getLogger(<span class="string">''</span>).addHandler(console)</span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># logging.debug('This is debug message by liu-ke')</span></span><br><span class="line"><span class="comment"># logging.info('This is info message by liu-ke')</span></span><br><span class="line"><span class="comment"># logging.warning('This is warning message by liu-ke')</span></span><br></pre></td></tr></table></figure><h3 id="主线程"><a href="#主线程" class="headerlink" title="主线程"></a>主线程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-06-19 23:55:52</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : link</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_restful <span class="keyword">import</span> reqparse, abort, Api, Resource</span><br><span class="line"><span class="keyword">from</span> AppLoggin <span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> AppConfig <span class="keyword">import</span> myRedis, redisKey, weChat_api, myWeChat</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">api = Api(app)</span><br><span class="line"></span><br><span class="line">pool = redis.ConnectionPool(**myRedis)</span><br><span class="line">r = redis.Redis(connection_pool=pool)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Emptys</span><span class="params">(Resource)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">404</span>, <span class="string">'errmsg'</span>: <span class="string">'页面不存在'</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">404</span>, <span class="string">'errmsg'</span>: <span class="string">'页面不存在'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取微信token</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccessToken</span><span class="params">(Resource)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self)</span>:</span></span><br><span class="line">        access_token = r.get(redisKey[<span class="string">'access_token'</span>])</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">0</span>, <span class="string">'errmsg'</span>: <span class="string">'获取成功'</span>, <span class="string">'value'</span>: access_token.decode(<span class="string">'utf-8'</span>) <span class="keyword">if</span> access_token <span class="keyword">else</span> <span class="string">''</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取微信ticket</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ticket</span><span class="params">(Resource)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self)</span>:</span></span><br><span class="line">        ticket = r.get(redisKey[<span class="string">'ticket'</span>])</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">0</span>, <span class="string">'errmsg'</span>: <span class="string">'获取成功'</span>, <span class="string">'value'</span>: ticket.decode(<span class="string">'utf-8'</span>) <span class="keyword">if</span> ticket <span class="keyword">else</span> <span class="string">''</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送模板消息</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SendTemplateMessage</span><span class="params">(Resource)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'http://127.0.0.1:5000/access_token'</span></span><br><span class="line">        res = requests.get(url).json()</span><br><span class="line">        access_token = res[<span class="string">'value'</span>]</span><br><span class="line">        <span class="keyword">if</span> access_token:</span><br><span class="line">            send_url = weChat_api[<span class="string">'send_temp_msg'</span>] % access_token</span><br><span class="line"></span><br><span class="line">            parser = reqparse.RequestParser()</span><br><span class="line"></span><br><span class="line">            parser.add_argument(<span class="string">'openid'</span>, type=str)</span><br><span class="line">            parser.add_argument(<span class="string">'template_id'</span>, type=str)</span><br><span class="line">            parser.add_argument(<span class="string">'url'</span>, type=str)</span><br><span class="line">            parser.add_argument(<span class="string">'first_val'</span>, type=str)</span><br><span class="line">            parser.add_argument(<span class="string">'keyword1_val'</span>, type=str)</span><br><span class="line">            parser.add_argument(<span class="string">'keyword2_val'</span>, type=str)</span><br><span class="line">            parser.add_argument(<span class="string">'remark_val'</span>, type=str)</span><br><span class="line"></span><br><span class="line">            args = parser.parse_args()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> args[<span class="string">'openid'</span>]:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">2</span>, <span class="string">'errmsg'</span>: <span class="string">'openid不能为空'</span>&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> args[<span class="string">'template_id'</span>]:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">2</span>, <span class="string">'errmsg'</span>: <span class="string">'template_id不能为空'</span>&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> args[<span class="string">'first_val'</span>] <span class="keyword">or</span> <span class="keyword">not</span> args[<span class="string">'keyword1_val'</span>] <span class="keyword">or</span> <span class="keyword">not</span> args[<span class="string">'keyword2_val'</span>] <span class="keyword">or</span> <span class="keyword">not</span> args[<span class="string">'remark_val'</span>]:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">2</span>, <span class="string">'errmsg'</span>: <span class="string">'模板消息不能为空'</span>&#125;</span><br><span class="line"></span><br><span class="line">            temp_data = &#123;</span><br><span class="line">                <span class="string">'touser'</span>: args[<span class="string">'openid'</span>],</span><br><span class="line">                <span class="string">'template_id'</span>: args[<span class="string">'template_id'</span>],</span><br><span class="line">                <span class="string">'url'</span>: args[<span class="string">'url'</span>],</span><br><span class="line">                <span class="string">'data'</span>: &#123;</span><br><span class="line">                    <span class="string">'first'</span>: &#123;</span><br><span class="line">                        <span class="string">'value'</span>: args[<span class="string">'first_val'</span>],</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">'keyword1'</span>: &#123;</span><br><span class="line">                        <span class="string">'value'</span>: args[<span class="string">'keyword1_val'</span>],</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">'keyword2'</span>: &#123;</span><br><span class="line">                        <span class="string">'value'</span>: args[<span class="string">'keyword2_val'</span>],</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">'remark'</span>: &#123;</span><br><span class="line">                        <span class="string">'value'</span>: args[<span class="string">'remark_val'</span>],</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            send_result = requests.post(send_url, verify=<span class="keyword">False</span>, json=temp_data)</span><br><span class="line">            res = send_result.json()</span><br><span class="line"></span><br><span class="line">            logging.info(<span class="string">'[data] %s ,res %s'</span> % (json.dumps(temp_data, ensure_ascii=<span class="keyword">False</span>), send_result.text))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: res[<span class="string">'errcode'</span>], <span class="string">'errmsg'</span>:  res[<span class="string">'errmsg'</span>]&#125;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">'errcode'</span>: <span class="number">1</span>, <span class="string">'errmsg'</span>: <span class="string">'access_token获取失败'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">api.add_resource(Emptys, <span class="string">'/'</span>)</span><br><span class="line">api.add_resource(AccessToken, <span class="string">'/access_token'</span>)</span><br><span class="line">api.add_resource(Ticket, <span class="string">'/ticket'</span>)</span><br><span class="line">api.add_resource(SendTemplateMessage, <span class="string">'/send_template_message'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># app.config['JSON_AS_ASCII'] = False</span></span><br><span class="line">    app.config.update(RESTFUL_JSON=dict(ensure_ascii=<span class="keyword">False</span>))</span><br><span class="line">    app.run(host=<span class="string">'127.0.0.1'</span>, port=<span class="string">'5000'</span>, debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="linux开机执行脚本"><a href="#linux开机执行脚本" class="headerlink" title="linux开机执行脚本"></a>linux开机执行脚本</h3><p><code>crontab -e</code>可以查看定时任务，设定每天3点重启服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 3 * * * /sbin/reboot</span><br></pre></td></tr></table></figure></p><p><code>vim /etc/rc.local</code>编辑开机任务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 启动python的api接口</span><br><span class="line">logdate=&quot;`date +%Y-%m-%d`&quot;</span><br><span class="line">nohup python3.6 /home/python/pyapis/Main.py &gt; &quot;/home/python/pyapis/logs/&quot;$&#123;logdate&#125;&quot;.log&quot; 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python模块flask接口，实现返回微信公众号的access_token和ticket以及微信模板消息发送。&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python获取微信公众号的access_token和ticket</title>
    <link href="http://yoursite.com/2019/06/27/python%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9A%84access-token%E5%92%8Cticket/"/>
    <id>http://yoursite.com/2019/06/27/python获取微信公众号的access-token和ticket/</id>
    <published>2019-06-27T07:38:38.000Z</published>
    <updated>2019-08-06T13:16:08.269Z</updated>
    
    <content type="html"><![CDATA[<p>微信公众号的access_token和ticket都有次数限制，所以使用python来定时获取数据并保存到redis中，方便多方取值。<br><a id="more"></a></p><h3 id="配置设置"><a href="#配置设置" class="headerlink" title="配置设置"></a>配置设置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2017-11-09 16:16:21</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : http://example.org</span></span><br><span class="line"><span class="comment"># @Version : $Id$</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义个人测试公众号的配置</span></span><br><span class="line">myWeChat = &#123;</span><br><span class="line">    <span class="string">'appID'</span>: <span class="string">'wx89*********ba6'</span>,</span><br><span class="line">    <span class="string">'appsecret'</span>: <span class="string">'c69b71**********9ec1e'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">weChat_api = &#123;</span><br><span class="line">    <span class="string">'access_token'</span>: <span class="string">'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=%s&amp;secret=%s'</span>,  <span class="comment"># 获取微信token</span></span><br><span class="line">    <span class="string">'ticket'</span>: <span class="string">'https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=%s&amp;type=jsapi'</span>,  <span class="comment"># 获取微信ticket</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义redis配置</span></span><br><span class="line">myRedis = &#123;<span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>, <span class="string">'port'</span>: <span class="number">6379</span>, <span class="string">'db'</span>: <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">redisKey = &#123;</span><br><span class="line">    <span class="string">'access_token'</span>: <span class="string">'wechat_access_token'</span>,  <span class="comment"># 微信token</span></span><br><span class="line">    <span class="string">'token_tmp'</span>: <span class="string">'wechat_token_tmp'</span>,  <span class="comment"># 微信token临时储存</span></span><br><span class="line">    <span class="string">'ticket'</span>: <span class="string">'wechat_ticket'</span>,  <span class="comment"># 微信token</span></span><br><span class="line">    <span class="string">'ticket_tmp'</span>: <span class="string">'wechat_ticket_tmp'</span>,  <span class="comment"># 微信ticket临时储存</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日志记录"><a href="#日志记录" class="headerlink" title="日志记录"></a>日志记录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2017-11-09 16:16:21</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : http://example.org</span></span><br><span class="line"><span class="comment"># @Version : $Id$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> logging.handlers <span class="keyword">import</span> TimedRotatingFileHandler</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">logfilename = <span class="string">'/home/python/wechat_py/logs/'</span> + str(time.strftime(<span class="string">'%Y%m%d'</span>)) + <span class="string">'.log'</span></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    level=logging.INFO,</span><br><span class="line">    format=<span class="string">'%(asctime)s %(levelname)s %(message)s'</span>,</span><br><span class="line">    datefmt=<span class="string">'%d %m %Y %H:%M:%S'</span>,</span><br><span class="line">    filename=logfilename,</span><br><span class="line">    filemode=<span class="string">'a'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line"><span class="comment"># # 定义一个TimedRotatingFileHandler，按时间段写日志，不删除历史日志.服务器定时重启的话请注释这块</span></span><br><span class="line"><span class="comment"># Rthandler = TimedRotatingFileHandler('/home/py/wechat_py/logs/myapp.log', when="D", interval=1, backupCount=0)</span></span><br><span class="line"><span class="comment"># # 设置后缀名称，跟strftime的格式一样</span></span><br><span class="line"><span class="comment"># Rthandler.suffix = "%Y-%m-%d.log"</span></span><br><span class="line"><span class="comment"># Rthandler.setLevel(logging.DEBUG)</span></span><br><span class="line"><span class="comment"># formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')</span></span><br><span class="line"><span class="comment"># Rthandler.setFormatter(formatter)</span></span><br><span class="line"><span class="comment"># logging.getLogger('').addHandler(Rthandler)</span></span><br><span class="line"><span class="comment">###########################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line"><span class="comment"># 定义一个StreamHandler，将INFO级别或更高的日志信息打印到标准错误，并将其添加到当前的日志处理对象#</span></span><br><span class="line">console = logging.StreamHandler()</span><br><span class="line">console.setLevel(logging.INFO)</span><br><span class="line">formatter = logging.Formatter(<span class="string">'%(asctime)s - %(name)s - %(levelname)s - %(message)s'</span>)</span><br><span class="line">console.setFormatter(formatter)</span><br><span class="line">logging.getLogger(<span class="string">''</span>).addHandler(console)</span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># logging.debug('This is debug message by liu-ke')</span></span><br><span class="line"><span class="comment"># logging.info('This is info message by liu-ke')</span></span><br><span class="line"><span class="comment"># logging.warning('This is warning message by liu-ke')</span></span><br></pre></td></tr></table></figure><h3 id="主线程"><a href="#主线程" class="headerlink" title="主线程"></a>主线程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2017-11-09 16:16:21</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : http://example.org</span></span><br><span class="line"><span class="comment"># @Version : $Id$</span></span><br><span class="line"><span class="keyword">from</span> AppLoggin <span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> AppConfig <span class="keyword">import</span> myRedis, redisKey, weChat_api, myWeChat</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 线程休眠时间</span></span><br><span class="line">smtime = <span class="number">600</span></span><br><span class="line"><span class="comment"># redis保存时间</span></span><br><span class="line">settime = <span class="number">1800</span></span><br><span class="line"></span><br><span class="line">pool = redis.ConnectionPool(**myRedis)</span><br><span class="line">r = redis.Redis(connection_pool=pool)</span><br><span class="line">print(<span class="string">'获取公众号token ticket 脚本启动...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获取token</span></span><br><span class="line">        check_key_token = r.get(redisKey[<span class="string">'token_tmp'</span>])</span><br><span class="line">        <span class="comment"># print(check_key_token)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> check_key_token:</span><br><span class="line">            token_url = weChat_api[<span class="string">'access_token'</span>] % (myWeChat[<span class="string">'appID'</span>], myWeChat[<span class="string">'appsecret'</span>])</span><br><span class="line">            <span class="comment"># logging.info(token_url)</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                token_result = requests.get(token_url, verify=<span class="keyword">False</span>)</span><br><span class="line">                logging.info(<span class="string">'token result: %s'</span> % token_result.text)</span><br><span class="line">                token_res = token_result.json()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> token_res.get(<span class="string">'access_token'</span>):</span><br><span class="line">                    access_token = token_res[<span class="string">'access_token'</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">                    r.set(redisKey[<span class="string">'access_token'</span>], access_token)</span><br><span class="line">                    r.set(redisKey[<span class="string">'token_tmp'</span>], access_token, settime)</span><br><span class="line">                    check_key_token = access_token</span><br><span class="line"></span><br><span class="line">                    logging.info(<span class="string">'[INFO] set token %s '</span> % token_res[<span class="string">'access_token'</span>])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                print(datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>), <span class="string">'[ERROR] get token. '</span>, str(e))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取ticket</span></span><br><span class="line">        check_key_ticket = r.get(redisKey[<span class="string">'ticket_tmp'</span>])</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> check_key_ticket <span class="keyword">and</span> check_key_token:</span><br><span class="line"></span><br><span class="line">            ticket_url = weChat_api[<span class="string">'ticket'</span>] % check_key_token.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            <span class="comment"># logging.info(ticket_url)</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                ticket_result = requests.get(ticket_url, verify=<span class="keyword">False</span>)</span><br><span class="line">                logging.info(<span class="string">'ticket result: %s'</span> % ticket_result.text)</span><br><span class="line">                ticket_res = ticket_result.json()</span><br><span class="line">                <span class="keyword">if</span> ticket_res.get(<span class="string">'ticket'</span>):</span><br><span class="line">                    ticket = ticket_res[<span class="string">'ticket'</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">                    r.set(redisKey[<span class="string">'ticket'</span>], ticket)</span><br><span class="line">                    r.set(redisKey[<span class="string">'ticket_tmp'</span>], ticket, settime)</span><br><span class="line"></span><br><span class="line">                    logging.info(<span class="string">'[INFO] set ticket %s '</span> % ticket_res[<span class="string">'ticket'</span>])</span><br><span class="line"></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                print(datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>), <span class="string">'[ERROR] get ticket. '</span>, str(e))</span><br><span class="line"></span><br><span class="line">        time.sleep(smtime)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>), <span class="string">'[ERROR] redis err. '</span>, str(e))</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><h3 id="linux开机执行脚本"><a href="#linux开机执行脚本" class="headerlink" title="linux开机执行脚本"></a>linux开机执行脚本</h3><p><code>crontab -e</code>可以查看定时任务，设定每天3点重启服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 3 * * * /sbin/reboot</span><br></pre></td></tr></table></figure></p><p><code>vim /etc/rc.local</code>编辑开机任务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logdate=&quot;`date +%Y-%m-%d`&quot;</span><br><span class="line"># 获取微信token和ticket</span><br><span class="line">nohup python3.6 /home/python/wechat_py/getWechatConfig.py &gt; &quot;/home/python/wechat_py/logs/&quot;$&#123;logdate&#125;&quot;.log&quot; 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微信公众号的access_token和ticket都有次数限制，所以使用python来定时获取数据并保存到redis中，方便多方取值。&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PhpStorm配置</title>
    <link href="http://yoursite.com/2019/05/27/PhpStorm%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/05/27/PhpStorm配置/</id>
    <published>2019-05-27T02:18:35.000Z</published>
    <updated>2019-08-06T13:16:08.266Z</updated>
    
    <content type="html"><![CDATA[<p> PhpStorm 是 JetBrains 公司开发的一款商业的 PHP集成开发工具的利器。<br> <a id="more"></a></p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p> <a href="http://www.phpstorm-themes.com/theme/dimmed-ocean" target="_blank" rel="noopener">Dimmed Ocean</a></p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><ul><li>BrowseWordAtCaret 选中一个单词,高亮其它相同的单词<br>首先需要安装一个BrowseWordAtCaret 插件，然后Settings -&gt; Editor -&gt; General -&gt; Appearance - Highlight Word at Caret</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; PhpStorm 是 JetBrains 公司开发的一款商业的 PHP集成开发工具的利器。&lt;br&gt;
    
    </summary>
    
    
      <category term="编辑器" scheme="http://yoursite.com/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>python爬取猫眼正在热映电影</title>
    <link href="http://yoursite.com/2019/04/29/python%E7%88%AC%E5%8F%96%E7%8C%AB%E7%9C%BC%E6%AD%A3%E5%9C%A8%E7%83%AD%E6%98%A0%E7%94%B5%E5%BD%B1/"/>
    <id>http://yoursite.com/2019/04/29/python爬取猫眼正在热映电影/</id>
    <published>2019-04-29T03:20:24.000Z</published>
    <updated>2019-08-06T13:16:08.268Z</updated>
    
    <content type="html"><![CDATA[<p>python网络爬虫<br><a id="more"></a></p><blockquote><p>用<code>python</code>写爬虫爬取需要的数据比较容易，以<code>Python</code>简洁的语法和一大波成熟的库，写起来相当的快</p></blockquote><p><strong>python的版本以及使用的库</strong></p><ul><li>Python 3.6.4</li><li>requests</li><li>lxml</li></ul><hr><p>这次主要是爬取猫眼的热映电影，网址为<code>http://maoyan.com/films</code></p><h5 id="新建个项目"><a href="#新建个项目" class="headerlink" title="新建个项目"></a>新建个项目</h5><p>我用 <strong>类(Class)</strong> 的方式创建，并初始化需要使用的参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaoYanHot</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.session = requests.session()  <span class="comment"># requests库的session对象能够帮我们跨请求保持某些参数，也会在同一个session实例发出的所有请求之间保持cookies</span></span><br><span class="line">        self.baseUrl = <span class="string">'http://maoyan.com/films'</span></span><br><span class="line">        <span class="comment"># 设置requests请求的headers参数来模拟浏览器访问</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'</span>,</span><br><span class="line">            <span class="string">'Accept'</span>: <span class="string">'text/html;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">            <span class="string">'Accept-Charset'</span>: <span class="string">'ISO-8859-1,utf-8;q=0.7,*;q=0.3'</span>,</span><br><span class="line">            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip'</span>,</span><br><span class="line">            <span class="string">'Connection'</span>: <span class="string">'close'</span>,</span><br><span class="line">            <span class="string">'Referer'</span>: <span class="keyword">None</span>  <span class="comment"># 注意如果依然不能抓取的话，这里可以设置抓取网站的host</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开始访问</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, pages=<span class="string">'?offset=0'</span>)</span>:</span></span><br><span class="line">        url = self.baseUrl + pages</span><br><span class="line">        print(<span class="string">'获取url：'</span> + url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MaoYanHot = MaoYanHot()</span><br><span class="line">MaoYanHot.run()</span><br></pre></td></tr></table></figure></p><h4 id="获取正在热映电影首页数据"><a href="#获取正在热映电影首页数据" class="headerlink" title="获取正在热映电影首页数据"></a>获取正在热映电影首页数据</h4><p>写个<code>def</code>来获取网页内容，并在<code>run</code>里面调用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取网页内容</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHtmlContent</span><span class="params">(self, url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        respone = self.session.get(url, headers=self.headers)</span><br><span class="line">        <span class="keyword">if</span> respone.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment"># 这里的编码取决于网页编码</span></span><br><span class="line">            <span class="comment"># 在decode的时候指定错误处理方式,有strict, ignore和replace三种处理方式，strict是默认的也就是抛出异常，ignore是忽略非法字符</span></span><br><span class="line">            <span class="keyword">return</span> respone.content.decode(<span class="string">'utf-8'</span>, <span class="string">'ignore'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'err1:'</span> + str(e))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure></p><p>在<strong>run</strong>里面调用<code>contents = self.getHtmlContent(url)</code></p><p>如果顺利的话就会得到HTML内容，通过HTML发现dd标签并没有闭合需要处理下<br><img src="https://user-gold-cdn.xitu.io/2018/5/17/1636ea7b2ac1d8cf?w=795&amp;h=347&amp;f=png&amp;s=51601" alt><br>通过<code>etree.HTML</code>我发现并不能正确闭合dd标签，造成层层嵌套，写个例子测试下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">aaa = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;dl&gt;</span></span><br><span class="line"><span class="string">    &lt;dd&gt;1111</span></span><br><span class="line"><span class="string">    &lt;dd&gt;1111</span></span><br><span class="line"><span class="string">    &lt;dd&gt;1111</span></span><br><span class="line"><span class="string">    &lt;dd&gt;1111</span></span><br><span class="line"><span class="string">&lt;/dl&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">bbb = etree.HTML(aaa)</span><br><span class="line">print(etree.tostring(bbb))</span><br></pre></td></tr></table></figure></p><p>打印的结果是<code>b&#39;&lt;html&gt;&lt;body&gt;&lt;dl&gt;\n    &lt;dd&gt;1111\n    &lt;dd&gt;1111\n    &lt;dd&gt;1111\n    &lt;dd&gt;1111\n&lt;/dd&gt;&lt;/dd&gt;&lt;/dd&gt;&lt;/dd&gt;&lt;/dl&gt;\n&lt;/body&gt;&lt;/html&gt;&#39;</code></p><h4 id="把HTML转为XML"><a href="#把HTML转为XML" class="headerlink" title="把HTML转为XML"></a>把HTML转为XML</h4><p>手动闭合<code>dd</code>后通过<code>etree.HTML</code>把HTML转为XML，利用<a href="http://www.runoob.com/xpath/xpath-tutorial.html" target="_blank" rel="noopener"><code>xpath语法</code></a>可以快速匹配我们需要的节点。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把html转为xml</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">htmlToXml</span><span class="params">(self, contents)</span>:</span></span><br><span class="line">    <span class="comment"># 手动闭合dd标签</span></span><br><span class="line">    contents = contents.replace(<span class="string">'&lt;dd'</span>, <span class="string">'&lt;/dd&gt;&lt;dd'</span>)</span><br><span class="line">    <span class="keyword">return</span> etree.HTML(contents)</span><br></pre></td></tr></table></figure></p><p>在<strong>run</strong>里面调用<code>xmls = self.htmlToXml(contents)</code><br>再来看看电影结构组成，如下图<br><img src="https://user-gold-cdn.xitu.io/2018/5/17/1636eb34a66c1149?w=540&amp;h=402&amp;f=png&amp;s=22165" alt><br>我们可以看到电影数据都是在<code>dd</code>里面，评分分为 <em>暂无评分</em> 和 <em>具体评分</em> 2种，父元素是<code>dl</code>，而它的<code>class[movie-list]</code>在页面只有一个。</p><h4 id="获取电影的名称和评分"><a href="#获取电影的名称和评分" class="headerlink" title="获取电影的名称和评分"></a>获取电影的名称和评分</h4><p>接下来写个<code>def</code>分析需要的电影数据，如电影的名称和评分<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用xpath解析html内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parsingHtml</span><span class="params">(self, html)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 选择文档中的节点，而不考虑它们的位置。选取属性class="movie-list"的 dl 节点，这里返回的是dd列表集合</span></span><br><span class="line">            movieList = html.xpath(<span class="string">'//dl[@class="movie-list"]/dd'</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> len(movieList):</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> movieList:</span><br><span class="line">                    <span class="comment"># 从当前的 dd 节点选取属性data-act="movies-click"的 a 的节点的文本内容，这里匹配的是电影名称</span></span><br><span class="line">                    movieName = item.xpath(<span class="string">'.//a[@data-act="movies-click"]/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">                    <span class="comment"># 从当前的 dd 节点选取属性class="channel-detail channel-detail-orange的 div 的节点的文本内容，这里匹配的是暂无评分</span></span><br><span class="line">                    moviePa = item.xpath(<span class="string">'.//div[@class="channel-detail channel-detail-orange"]/text()'</span>)</span><br><span class="line">                    <span class="comment"># moviePa没有值说明是有具体评分</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> moviePa:</span><br><span class="line">                        <span class="comment"># 匹配评分的整数</span></span><br><span class="line">                        integer = item.xpath(<span class="string">'.//div[@class="channel-detail channel-detail-orange"]/i[@class="integer"]/text()'</span>)</span><br><span class="line">                        <span class="comment"># 匹配评分的小数</span></span><br><span class="line">                        fraction = item.xpath(<span class="string">'./div[@class="channel-detail channel-detail-orange"]/i[@class="fraction"]/text()'</span>)</span><br><span class="line">                        moviePa = integer + fraction</span><br><span class="line">                    <span class="keyword">yield</span>(&#123;</span><br><span class="line">                        <span class="string">'movieName'</span>: movieName,</span><br><span class="line">                        <span class="string">'moviePa'</span>: <span class="string">''</span>.join(moviePa)</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'err2:'</span> + str(e))</span><br><span class="line">            <span class="keyword">return</span></span><br></pre></td></tr></table></figure></p><p>在<strong>run</strong>里面调用<code>movieList = self.parsingHtml(xmls)</code>，通过<code>for</code>循环打印电影数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for item in movieList:</span><br><span class="line">    strs = &apos;电影：%s -- 评分： %s&apos; % (item[&apos;movieName&apos;], item[&apos;moviePa&apos;])</span><br><span class="line">    print(strs)</span><br></pre></td></tr></table></figure></p><p>输出如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">获取url：http://maoyan.com/films?offset=0</span><br><span class="line">电影：复仇者联盟3：无限战争 -- 评分： 8.6</span><br><span class="line">电影：我是你妈 -- 评分： 8.2</span><br><span class="line">电影：后来的我们 -- 评分： 8.1</span><br><span class="line">电影：超时空同居 -- 评分： 8.8</span><br><span class="line">电影：寂静之地 -- 评分： 暂无评分</span><br><span class="line">电影：幕后玩家 -- 评分： 8.1</span><br><span class="line">电影：狂暴巨兽 -- 评分： 9.0</span><br><span class="line">电影：战犬瑞克斯 -- 评分： 8.2</span><br><span class="line">电影：巴霍巴利王2：终结 -- 评分： 8.7</span><br><span class="line">电影：亲爱的，我要和别人结婚了 -- 评分： 8.2</span><br><span class="line">电影：小公主艾薇拉与神秘王国 -- 评分： 5.7</span><br><span class="line">电影：昼颜 -- 评分： 暂无评分</span><br><span class="line">电影：头号玩家 -- 评分： 9.1</span><br><span class="line">电影：七号公馆 -- 评分： 暂无评分</span><br><span class="line">电影：冰雪女王3：火与冰 -- 评分： 8.2</span><br><span class="line">电影：侏罗纪世界2 -- 评分： 暂无评分</span><br><span class="line">电影：玛丽与魔女之花 -- 评分： 8.0</span><br><span class="line">电影：复仇者联盟4 -- 评分： 暂无评分</span><br><span class="line">电影：青年马克思 -- 评分： 8.4</span><br><span class="line">电影：狄仁杰之四大天王 -- 评分： 暂无评分</span><br><span class="line">电影：爱情公寓 -- 评分： 暂无评分</span><br><span class="line">电影：路过未来 -- 评分： 暂无评分</span><br><span class="line">电影：21克拉 -- 评分： 8.2</span><br><span class="line">电影：游侠索罗：星球大战外传 -- 评分： 暂无评分</span><br><span class="line">电影：午夜十二点 -- 评分： 3.5</span><br><span class="line">电影：龙在哪里？ -- 评分： 8.6</span><br><span class="line">电影：火魔高跟鞋 -- 评分： 暂无评分</span><br><span class="line">电影：动物世界 -- 评分： 暂无评分</span><br><span class="line">电影：犬之岛 -- 评分： 7.9</span><br><span class="line">电影：厉害了，我的国 -- 评分： 9.6</span><br></pre></td></tr></table></figure></p><h4 id="自动获取下一页的数据"><a href="#自动获取下一页的数据" class="headerlink" title="自动获取下一页的数据"></a>自动获取下一页的数据</h4><p>自此已经可以请求网页并且获取需要的数据，接下来自动请求下一页。通过分析发现URl都是<code>http://maoyan.com/films</code>拼接<code>?offset=x</code>这个参数，x是当前页数的起始数，第一页<code>x</code>为0，第二页<code>x</code>为30，以此类推。刚好下一页的<code>href</code>就是这个参数。</p><p>写个<code>def</code>获取下一个的参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配下一页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getNextPage</span><span class="params">(self, html)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获取a元素的文本值为下一页的href属性</span></span><br><span class="line">        result = html.xpath(<span class="string">'//a[text()="下一页"]/@href'</span>)</span><br><span class="line">        <span class="keyword">return</span> result[<span class="number">0</span>] <span class="keyword">if</span> len(result) <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'err3:'</span> + str(e))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure></p><p>在<strong>run</strong>里面通过递归的方式实现自动获取下一页的数据，并随机休眠5-20秒以预防被猫眼拒绝访问<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">NextPage = self.getNextPage(xmls)</span><br><span class="line">    <span class="keyword">if</span> NextPage:</span><br><span class="line">        sleepTime = random.randint(<span class="number">5</span>, <span class="number">20</span>)</span><br><span class="line">        print(<span class="string">'休眠时间：%s'</span> % (sleepTime))</span><br><span class="line">        <span class="comment"># time.sleep(sleepTime)</span></span><br><span class="line">        sarr = list(range(sleepTime))</span><br><span class="line">        sarr.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line">        <span class="keyword">for</span> iss <span class="keyword">in</span> sarr:</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            print(<span class="string">'倒计时：'</span> + str(iss))</span><br><span class="line">        self.run(NextPage)</span><br></pre></td></tr></table></figure></p><p>到这里已经基本完成了一个爬虫</p><h4 id="设置cookie来获取需要登陆的网站的数据"><a href="#设置cookie来获取需要登陆的网站的数据" class="headerlink" title="设置cookie来获取需要登陆的网站的数据"></a>设置cookie来获取需要登陆的网站的数据</h4><p>有些网站内容必须需要登陆了才能访问，手动设置cookie的方式应该是比较省力的，通过浏览器登陆网页后，通过<code>F12</code> - <code>Network</code> - <code>Headers</code> - <code>Request Headers</code> 找到 <code>Cookie</code> 字段里面包含了cookie信息，写个<code>def</code>把字符串转为字典<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dictToCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">    cookie_str = <span class="string">'uuid=1A6E888B4A4B29B16FBA1299108DBE9C716675A309C3BAA9D55E347DEB6E83EC; _lxsdk_cuid=16367a2e6a9c8-0d58eea69a4d89-3c3c5905-1fa400-16367a2e6a9c8; _lxsdk=1A6E888B4A4B29B16FBA1299108DBE9C716675A309C3BAA9D55E347DEB6E83EC; _csrf=89ce8482c620a863330c9ffcaf2e20579a55a76cbd8637ac62a2b9f72c172a7b; _lx_utm=utm_source%3DBaidu%26utm_medium%3Dorganic; lt=DiIgzaThdLC5XZdcq4joMkZRpD8AAAAA3QUAAIpNTDuzpXNwUmtKXTXO6i9RayLLEM7KoYPwtHI1-tbRoMyue5EEa87kRKXrkA9SxQ; lt.sig=HiWqeKJoko8oWV-YaVVbIHt4iXQ; __mta=46043675.1526452119497.1526534209978.1526537087635.59; _lxsdk_s=1636cb36a83-aff-08c-b8a%7C%7C2'</span></span><br><span class="line">    cookie_dict = dict()</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> cookie_str.split(<span class="string">';'</span>):</span><br><span class="line">        key, value = item.split(<span class="string">'='</span>, <span class="number">1</span>)  <span class="comment"># 1代表只分一次，得到两个数据</span></span><br><span class="line">        cookie_dict[key] = value</span><br><span class="line">    <span class="keyword">return</span> cookie_dict</span><br></pre></td></tr></table></figure></p><p>然后在<code>class</code>的<code>__init__</code>里面把字典转为<code>cookiejar</code>并设置<code>cookie</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cookie_dict = self.dictToCookie()</span><br><span class="line">self.session.cookies = requests.utils.cookiejar_from_dict(cookie_dict, cookiejar=<span class="keyword">None</span>, overwrite=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-05-16 15:14:06</span></span><br><span class="line"><span class="comment"># @Author  : Your Name (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : link</span></span><br><span class="line"><span class="comment"># @Version : 1.0.0</span></span><br><span class="line"><span class="comment"># 获取猫眼热门电影</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaoYanHot</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.session = requests.session()</span><br><span class="line">        self.baseUrl = <span class="string">'http://maoyan.com/films'</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'</span>,</span><br><span class="line">            <span class="string">'Accept'</span>: <span class="string">'text/html;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">            <span class="string">'Accept-Charset'</span>: <span class="string">'ISO-8859-1,utf-8;q=0.7,*;q=0.3'</span>,</span><br><span class="line">            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip'</span>,</span><br><span class="line">            <span class="string">'Connection'</span>: <span class="string">'close'</span>,</span><br><span class="line">            <span class="string">'Referer'</span>: <span class="keyword">None</span>  <span class="comment"># 注意如果依然不能抓取的话，这里可以设置抓取网站的host</span></span><br><span class="line">        &#125;</span><br><span class="line">        cookie_dict = self.dictToCookie()</span><br><span class="line">        self.session.cookies = requests.utils.cookiejar_from_dict(cookie_dict, cookiejar=<span class="keyword">None</span>, overwrite=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 转为字典</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dictToCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        cookie_str = <span class="string">'uuid=1A6E888B4A4B29B16FBA1299108DBE9C716675A309C3BAA9D55E347DEB6E83EC; _lxsdk_cuid=16367a2e6a9c8-0d58eea69a4d89-3c3c5905-1fa400-16367a2e6a9c8; _lxsdk=1A6E888B4A4B29B16FBA1299108DBE9C716675A309C3BAA9D55E347DEB6E83EC; _csrf=89ce8482c620a863330c9ffcaf2e20579a55a76cbd8637ac62a2b9f72c172a7b; _lx_utm=utm_source%3DBaidu%26utm_medium%3Dorganic; lt=DiIgzaThdLC5XZdcq4joMkZRpD8AAAAA3QUAAIpNTDuzpXNwUmtKXTXO6i9RayLLEM7KoYPwtHI1-tbRoMyue5EEa87kRKXrkA9SxQ; lt.sig=HiWqeKJoko8oWV-YaVVbIHt4iXQ; __mta=46043675.1526452119497.1526534209978.1526537087635.59; _lxsdk_s=1636cb36a83-aff-08c-b8a%7C%7C2'</span></span><br><span class="line">        cookie_dict = dict()</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> cookie_str.split(<span class="string">';'</span>):</span><br><span class="line">            key, value = item.split(<span class="string">'='</span>, <span class="number">1</span>)  <span class="comment"># 1代表只分一次，得到两个数据</span></span><br><span class="line">            cookie_dict[key] = value</span><br><span class="line">        <span class="keyword">return</span> cookie_dict</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取网页内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getHtmlContent</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            respone = self.session.get(url, headers=self.headers)</span><br><span class="line">            <span class="keyword">if</span> respone.status_code == <span class="number">200</span>:</span><br><span class="line">                <span class="keyword">return</span> respone.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'err1:'</span> + str(e))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 把html转为xml</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">htmlToXml</span><span class="params">(self, contents)</span>:</span></span><br><span class="line">        <span class="comment"># 手动闭合dd标签</span></span><br><span class="line">        contents = contents.replace(<span class="string">'&lt;dd'</span>, <span class="string">'&lt;/dd&gt;&lt;dd'</span>)</span><br><span class="line">        <span class="keyword">return</span> etree.HTML(contents)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 利用xpath解析html内容</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parsingHtml</span><span class="params">(self, html)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            movieList = html.xpath(<span class="string">'//dl[@class="movie-list"]/dd'</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> len(movieList):</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> movieList:</span><br><span class="line">                    movieName = item.xpath(<span class="string">'.//a[@data-act="movies-click"]/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">                    moviePa = item.xpath(<span class="string">'.//div[@class="channel-detail channel-detail-orange"]/text()'</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> moviePa:</span><br><span class="line">                        integer = item.xpath(<span class="string">'.//div[@class="channel-detail channel-detail-orange"]/i[@class="integer"]/text()'</span>)</span><br><span class="line">                        fraction = item.xpath(<span class="string">'./div[@class="channel-detail channel-detail-orange"]/i[@class="fraction"]/text()'</span>)</span><br><span class="line">                        moviePa = integer + fraction</span><br><span class="line">                    <span class="keyword">yield</span>(&#123;</span><br><span class="line">                        <span class="string">'movieName'</span>: movieName,</span><br><span class="line">                        <span class="string">'moviePa'</span>: <span class="string">''</span>.join(moviePa)</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'err2:'</span> + str(e))</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 匹配下一页</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getNextPage</span><span class="params">(self, html)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = html.xpath(<span class="string">'//a[text()="下一页"]/@href'</span>)</span><br><span class="line">            <span class="keyword">return</span> result[<span class="number">0</span>] <span class="keyword">if</span> len(result) <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'err3:'</span> + str(e))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开始访问</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, pages=<span class="string">'?offset=18180'</span>)</span>:</span></span><br><span class="line">        url = self.baseUrl + pages</span><br><span class="line">        print(<span class="string">'获取url：'</span> + url)</span><br><span class="line">        contents = self.getHtmlContent(url)</span><br><span class="line">        <span class="keyword">if</span> contents:</span><br><span class="line">            xmls = self.htmlToXml(contents)</span><br><span class="line">            movieList = self.parsingHtml(xmls)</span><br><span class="line"></span><br><span class="line">            file_object = open(<span class="string">'movie.txt'</span>, <span class="string">'a+'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">            file_object.write(<span class="string">'获取url：'</span> + url + <span class="string">"\n"</span>)</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> movieList:</span><br><span class="line">                strs = <span class="string">'电影：%s -- 评分： %s'</span> % (item[<span class="string">'movieName'</span>], item[<span class="string">'moviePa'</span>])</span><br><span class="line">                print(strs)</span><br><span class="line">                file_object.write(strs + <span class="string">"\n"</span>)</span><br><span class="line">            file_object.close()</span><br><span class="line"></span><br><span class="line">            NextPage = self.getNextPage(xmls)</span><br><span class="line">            <span class="keyword">if</span> NextPage:</span><br><span class="line">                sleepTime = random.randint(<span class="number">5</span>, <span class="number">20</span>)</span><br><span class="line">                print(<span class="string">'休眠时间：%s'</span> % (sleepTime))</span><br><span class="line">                <span class="comment"># time.sleep(sleepTime)</span></span><br><span class="line">                sarr = list(range(sleepTime))</span><br><span class="line">                sarr.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line">                <span class="keyword">for</span> iss <span class="keyword">in</span> sarr:</span><br><span class="line">                    time.sleep(<span class="number">1</span>)</span><br><span class="line">                    print(<span class="string">'倒计时：'</span> + str(iss))</span><br><span class="line">                self.run(NextPage)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'网页内容获取失败'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MaoYanHot = MaoYanHot()</span><br><span class="line">MaoYanHot.run()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python网络爬虫&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>sublime text3配置</title>
    <link href="http://yoursite.com/2019/04/26/sublime-text3%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/04/26/sublime-text3配置/</id>
    <published>2019-04-26T14:30:36.000Z</published>
    <updated>2019-04-26T14:38:25.634Z</updated>
    
    <content type="html"><![CDATA[<p>Sublime Text：一款具有代码高亮、语法提示、自动完成且反应快速的编辑器软件，不仅具有华丽的界面，还支持插件扩展机制，用她来写代码，绝对是一种享受。<br><a id="more"></a></p><h2 id="Sublime-Text-3"><a href="#Sublime-Text-3" class="headerlink" title="Sublime Text 3"></a>Sublime Text 3</h2><h3 id="个人配置"><a href="#个人配置" class="headerlink" title="个人配置"></a>个人配置</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 字体大小</span><br><span class="line">    "font_size": 14,</span><br><span class="line">    // 高亮编辑中的那一行</span><br><span class="line">    "highlight_line": true,</span><br><span class="line">    // 焦点丢失后自动保存</span><br><span class="line">    "save_on_focus_lost": true,</span><br><span class="line">    // 显示当前文件的编码和行结尾</span><br><span class="line">    "show_encoding": true,</span><br><span class="line">    "show_line_endings": true,</span><br><span class="line">    // 保存的时候把无用的空格去掉</span><br><span class="line">    "trim_trailing_white_space_on_save": true,</span><br><span class="line">    // Tab转换 这个设置会在你按Tab的时候，转成4个空格</span><br><span class="line">    "tab_size": 4,</span><br><span class="line">    "translate_tabs_to_spaces": true,</span><br><span class="line">    // 自动换行</span><br><span class="line">    "word_wrap": false,</span><br><span class="line">    // 宽度指导线</span><br><span class="line">    "rulers": [80],</span><br><span class="line">    // 拼写检查</span><br><span class="line">    "spell_check": false,</span><br><span class="line">    // 要不要滚过头</span><br><span class="line">    "scroll_past_end": true,</span><br><span class="line">    // 显示Tab、空格</span><br><span class="line">    "draw_white_space": "all",</span><br><span class="line">    // 加粗文件夹名称</span><br><span class="line">    "bold_folder_labels": true,</span><br><span class="line">    // 显示全路径</span><br><span class="line">    "show_full_path": true,</span><br><span class="line">    // 设置文件修改时, 标签高亮提示, 这样可以提示保存</span><br><span class="line">    "highlight_modified_tabs": true,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><ul><li><p><a href="https://github.com/kkga/spacegray" target="_blank" rel="noopener">Spacegray</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    /*主题设置*/</span><br><span class="line">    "theme": "Spacegray Eighties.sublime-theme",</span><br><span class="line">    "color_scheme": "Packages/Theme - Spacegray/base16-eighties.dark.tmTheme",</span><br><span class="line">    // 标签字体大小</span><br><span class="line">    "spacegray_tabs_font_large": true,</span><br><span class="line">    // 标签高度</span><br><span class="line">    "spacegray_tabs_large": true,</span><br><span class="line">    // 边栏标签字体大小</span><br><span class="line">    "spacegray_sidebar_font_large": true,</span><br><span class="line">    // 启用侧栏文件图标</span><br><span class="line">    "spacegray_fileicons": true,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/jamiewilson/predawn" target="_blank" rel="noopener">Predawn</a></p></li><li><a href="https://github.com/equinusocio/material-theme" target="_blank" rel="noopener">Material Theme</a></li></ul><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><ul><li>Alignment<br>代码对齐，如写几个变量，选中这几行，Ctrl+Alt+A，哇，齐了。推荐使用</li><li>SideBarEnhancements<br>侧栏右键功能增强，非常实用</li><li>BracketHighlighter<br>该插件提供行数列高亮的各种配对的语法符号。</li><li>DocBlockr<br>一个真正简单的方式来轻松地创建许多语言包括JavaScript，PHP和CoffeeScript的文档块。只要在函数的上面输入<code>/**</code>，按Tab就可以了。DocBlockr会观察函数需要的变量名和类型，并创建文档块。</li><li>SublimeTmpl<br>快速生成文件模板</li><li>emmet<br>前端神器。一个可以极大提高web开发者HTML和CSS工作效率的工具箱组件。</li><li>jQuery<br>为jQuery的大部分方法提供了示例代码段，让jQuery的API更加容易使用。</li><li>HTML-CSS-JS Prettify<br>代码格式化插件</li><li>HTML5<br>HTML5标签拓展</li><li>JsFormat<br>javascript格式化</li><li>CSS Format<br>CSS格式化</li><li>Tag<br>HTML格式化</li><li>Brackethighlighter<br>标签对标记</li><li>SideBarEnhancements<br>增强型侧边栏</li><li>BufferScroll<br>代码折叠状态保留</li><li>StyleToken<br>标记颜色代码功能：</li><li>Emmet<br>前端神器</li><li>TortoiseSVN<br>SVN你懂的</li><li>QuoteHTML<br>把HTML拼接成js插入字符串，神器</li><li>Clipboard Manager<br>增强型剪贴板，可访问历史剪贴板记录</li><li>FileHeader<br>文件模板 , 可自动更新修改时间</li><li>AutoPrefixer<br>浏览器私有属性前缀补全 (Node.js依赖)</li><li>ColorConvert<br>RGBA颜色转换，十六进制颜色转换为RGBA颜色</li><li>Better Completion<br>全能代码提示</li><li>LiveStyle<br>双向更改无刷新实时预览 , 包含chrome插件 Emmet LiveStyle</li><li>jQuery<br>jQuery 代码提示（Better Completion 已可替代此插件）</li><li>Sass以及SASS Build<br>使用Sass必备，ctrl+b执行编译</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sublime Text：一款具有代码高亮、语法提示、自动完成且反应快速的编辑器软件，不仅具有华丽的界面，还支持插件扩展机制，用她来写代码，绝对是一种享受。&lt;br&gt;
    
    </summary>
    
    
      <category term="编辑器" scheme="http://yoursite.com/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>github + hexo 搭建个人博客</title>
    <link href="http://yoursite.com/2019/04/26/hello-world/"/>
    <id>http://yoursite.com/2019/04/26/hello-world/</id>
    <published>2019-04-26T14:22:38.135Z</published>
    <updated>2019-04-26T14:22:38.144Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub Pages 是通过我们网站托管和发布的公开网页。所以利用这个可以搭建个人博客。<br><a id="more"></a></p><h1 id="如何搭建个人博客"><a href="#如何搭建个人博客" class="headerlink" title="如何搭建个人博客"></a>如何搭建个人博客</h1><h2 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h2><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><p>前往<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>注册账号，并且创建一个New repository。Repository name填写为dracoqiu.github.io，dracoqiu这个为用户名，自行修改。创建完成后在项目的Settings里找到GitHub Pages，会发现这里有显示你的博客地址。</p><h3 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH-Key"></a>配置SSH-Key</h3><p>给电脑配置SSH-Key的话就不用每次都输入账号密码。<br>1、打开git的命令行工具输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your e-mail"</span></span><br></pre></td></tr></table></figure></p><p>创建成功后会看到以下内容<br>Your identification has been saved in /c/Users/XZY-06/.ssh/id_rsa.<br>Your public key has been saved in /c/Users/XZY-06/.ssh/id_rsa.pub.<br>打开文件夹，然后找到id_rsa.pub，用编辑器打开复制里面的内容，然后登陆你的GitHub账户，依次点击账号Settings &gt; SSH and GPG keys &gt; new SSH key，把id_rsa.<br>pub中的内容拷贝进去key项，title相当于备注，可随意填写 。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;  <span class="comment"># 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</span></span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><p>新建完成后，指定文件夹的目录如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml  <span class="comment"># 网站的 配置 信息，您可以在此配置大部分的参数。</span></span><br><span class="line">├── package.json  <span class="comment"># 应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</span></span><br><span class="line">├── scaffolds  <span class="comment"># 模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</span></span><br><span class="line">├── <span class="built_in">source</span>  <span class="comment"># 资源文件夹是存放用户资源的地方。</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts  <span class="comment"># md文件存放目录</span></span><br><span class="line">└── themes  <span class="comment"># 主题 文件夹。Hexo 会根据主题来生成静态页面。</span></span><br></pre></td></tr></table></figure></p><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>运行以下命令将生成静态文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo g  <span class="comment"># 简写</span></span><br></pre></td></tr></table></figure></p><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s  <span class="comment"># 简写</span></span><br></pre></td></tr></table></figure></p><p>如果端口被占用运行以下命令给该端口再启动服务器。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 3000</span><br></pre></td></tr></table></figure></p><p>在浏览器中输入 localhost:3000就可以看到博客。</p><h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><h4 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h4><p>打开Git bash，在当前项目根目下使用git从github上checkout主题的代码，输入指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>下载完成后，在hexo\theme目录下回多出一个next文件夹，里面就是next主题所需的文件,当然我们也可以看到在theme文件目录还有一个landscape文件夹，这也就是hexo默认的主题。</p><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p>之前我们配置hexo的时候，有用到<code>_config.yml</code>文件，称其为<em>站点配置文件</em>，而我们打开next主题文件夹，发现里面也有一个<code>_config.yml</code>文件，我们称这个为<em>主题配置文件</em>。在hexo中启用next主题的方式：就是打开站点配置文件，找到theme字段，将其值改为“next”，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme:  next</span><br></pre></td></tr></table></figure></p><h4 id="next的样式选择"><a href="#next的样式选择" class="headerlink" title="next的样式选择"></a>next的样式选择</h4><p>next的样式其实有三种：Muse、Mist和Pisces，步骤2中看到的其实是next默认的模式Muse，根据官方说明三个样式的特点如下：<br><em>Muse</em>： 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白<br><em>Mist</em>：  Muse 的紧凑版本，整洁有序的单栏外观<br><em>Pisces</em>： 双栏 Scheme，小家碧玉似的清新<br>切换的控制其实很简单，使用next主题配置文件中的<code>scheme</code>字段来控制，假设我们选择Mist样式（个人认为最好看的样式），操作步骤是：打开next文件夹中的<code>_config.yml</code>文件，找到<code>scheme</code>字段，将其设置为“Mist”，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line">scheme: Mist</span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure></p><p>重新启动博客，刷新浏览器可以看到效果</p><h4 id="设置favicon"><a href="#设置favicon" class="headerlink" title="设置favicon"></a>设置favicon</h4><p>打开主题配置文件<code>_config.yml</code>可以看到favicon的配置信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure></p><h4 id="菜单栏控制"><a href="#菜单栏控制" class="headerlink" title="菜单栏控制"></a>菜单栏控制</h4><p>我们看到页面顶部的菜单栏，其实是由主题配置文件中的menu字段控制的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment"># schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment"># commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure></p><p>然而，点击打开About却出现了“Cannot GET /about/”的页面错误，这是因为我们还没有about这个页面，需要使用<code>hexo new page &quot;页面名称&quot;</code>进行创建<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure></p><p>执行结果就是在hexo\source目录下面多出了一个about文件夹，里面有index.md，这就是点击About会展示的内容页面。同理，也可以创建tags页面</p><h4 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h4><p>添加一个 分类 页面，并在菜单中显示页面链接。<br>1、新建一个页面，命名为 categories 。命令如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure></p><p>2、编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段<code>comments</code>并将值设置为<code>false</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date: 2018-05-01 14:25:00</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>3、在页面头部可以设置分类以及标签<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: github + hexo 搭建个人博客</span><br><span class="line">categories: <span class="string">"Hexo教程"</span> <span class="comment">#文章分類目錄 可以省略</span></span><br><span class="line">tags:</span><br><span class="line">     - Hexo教程</span><br><span class="line">description: <span class="comment">#你對本頁的描述 可以省略</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h4 id="创建一般的文章"><a href="#创建一般的文章" class="headerlink" title="创建一般的文章"></a>创建一般的文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"文章名称"</span></span><br></pre></td></tr></table></figure><h4 id="菜单栏控制-1"><a href="#菜单栏控制-1" class="headerlink" title="菜单栏控制"></a>菜单栏控制</h4><p>在站点配置文件中假如如下内容，明确指定使用的语言，例如中文<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure></p><h4 id="侧栏设置"><a href="#侧栏设置" class="headerlink" title="侧栏设置"></a>侧栏设置</h4><p>在主题配置文件的<code>sidebar</code>字段，此处我直接设置为侧栏一直显示，而且显示在右边<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  <span class="comment"># Sidebar Position, available value: left | right</span></span><br><span class="line">  position: left</span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display, available value:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggler.</span></span><br><span class="line">  <span class="comment">#display: post</span></span><br><span class="line">  display: always</span><br><span class="line">  <span class="comment">#display: hide</span></span><br><span class="line">  <span class="comment">#display: remove</span></span><br></pre></td></tr></table></figure></p><h4 id="设置头像和作者名称"><a href="#设置头像和作者名称" class="headerlink" title="设置头像和作者名称"></a>设置头像和作者名称</h4><p>在站点配置文件中，新加一个字段<code>avatar</code>，值就是头像的连接地址，这里我使用站内地址，将avatar.png放到本地目录hexo\source\images中；作者名称直接设置站点配置文件中<code>author</code>字段的值：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 静然之旅</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">author: 静然</span><br><span class="line">avatar: /images/avatar.png</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></p><h4 id="给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。"><a href="#给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。" class="headerlink" title="给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。"></a>给文章设置阅读量，启用不蒜子统计，仅限于文章页面显示阅读书，在首页不显示。</h4><p>在主题的配置文件找到<code>busuanzi_count</code>字段，把<code>enable</code>设置为<code>true</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="literal">true</span></span><br><span class="line">  site_uv_header: &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="literal">true</span></span><br><span class="line">  site_pv_header: &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="literal">true</span></span><br><span class="line">  page_pv_header: &lt;i class=<span class="string">"fa fa-file-o"</span>&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure></p><h3 id="上传到GitHub"><a href="#上传到GitHub" class="headerlink" title="上传到GitHub"></a>上传到GitHub</h3><p>打开站点<code>配置文件</code>(即更目录下的<code>_config.yml</code>)，在最后修改如下代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/dracoqiu/dracoqiu.github.io.git  <span class="comment"># 库（Repository）地址</span></span><br><span class="line">  branch: master  <span class="comment"># 分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</span></span><br><span class="line">  message: [message]  <span class="comment"># 自定义提交信息 (默认为 Site updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;)</span></span><br></pre></td></tr></table></figure></p><p>每次修改本地文件都需执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br><span class="line"><span class="comment"># 以下为简写</span></span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><p>如果执行<code>$ hexo deploy</code>提示<code>ERROR Deployer not found: git</code>，则执行以下命令，再执行<code>$ hexo deploy</code>上传到GitHub<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><h3 id="博客安装和主题配置参考"><a href="#博客安装和主题配置参考" class="headerlink" title="博客安装和主题配置参考"></a>博客安装和主题配置参考</h3><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a><br><a href="http://theme-next.iissnan.com/getting-started.html#top" target="_blank" rel="noopener">next主题官网</a><br><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GitHub Pages 是通过我们网站托管和发布的公开网页。所以利用这个可以搭建个人博客。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo教程" scheme="http://yoursite.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云SDK-PHP</title>
    <link href="http://yoursite.com/2019/04/18/%E8%85%BE%E8%AE%AF%E4%BA%91SDK-PHP/"/>
    <id>http://yoursite.com/2019/04/18/腾讯云SDK-PHP/</id>
    <published>2019-04-18T09:40:48.000Z</published>
    <updated>2019-04-26T14:24:48.042Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP-SDK"><a href="#PHP-SDK" class="headerlink" title="PHP-SDK"></a>PHP-SDK</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>欢迎使用腾讯云开发者工具套件（SDK）3.0，SDK3.0 是云 API3.0 平台的配套工具。目前已经支持 cvm、vpc、cbs 等产品，后续所有的云服务产品都会接入进来。新版 SDK 实现了统一化，具有各个语言版本的 SDK 使用方法相同，接口调用方式相同，统一的错误码和返回包格式这些优点。<br>为方便 PHP 开发者调试和接入腾讯云产品 API，这里向您介绍适用于 PHP 的腾讯云开发工具包，并提供首次使用开发工具包的简单示例。让您快速获取腾讯云 PHP SDK 并开始调用。<br><a id="more"></a></p><h3 id="支持-3-0-版本的产品列表"><a href="#支持-3-0-版本的产品列表" class="headerlink" title="支持 3.0 版本的产品列表"></a>支持 3.0 版本的产品列表</h3><p>SDK3.0支持全部 API3.0下的产品，本列表可能滞后于实际代码，如有疑问请咨询具体的产品。</p><ul><li><a href="https://cloud.tencent.com/document/api/213/15689" target="_blank" rel="noopener">云服务器</a></li><li><a href="https://cloud.tencent.com/document/api/386/18637" target="_blank" rel="noopener">黑石物理服务器</a></li><li><a href="https://cloud.tencent.com/document/api/362/15634" target="_blank" rel="noopener">云硬盘</a></li><li><a href="https://cloud.tencent.com/document/api/457/31853" target="_blank" rel="noopener">容器服务</a></li><li><a href="https://cloud.tencent.com/document/api/858/17761" target="_blank" rel="noopener">容器实例服务</a></li><li><a href="https://cloud.tencent.com/document/api/377/20423" target="_blank" rel="noopener">弹性伸缩</a></li><li><a href="https://cloud.tencent.com/document/api/583/17235" target="_blank" rel="noopener">无服务器云函数</a></li><li><a href="https://cloud.tencent.com/document/api/599/15880" target="_blank" rel="noopener">批量计算</a></li><li><a href="https://cloud.tencent.com/document/api/214/30667" target="_blank" rel="noopener">负载均衡</a></li><li><a href="https://cloud.tencent.com/document/api/215/15755" target="_blank" rel="noopener">私有网络</a></li><li><a href="https://cloud.tencent.com/document/api/216/18404" target="_blank" rel="noopener">专线接入</a></li><li><a href="https://cloud.tencent.com/document/api/236/15830" target="_blank" rel="noopener">云数据库 MySQL</a></li><li><a href="https://cloud.tencent.com/document/api/239/20002" target="_blank" rel="noopener">云数据库 Redis</a></li><li><a href="https://cloud.tencent.com/document/api/240/31797" target="_blank" rel="noopener">云数据库 MongoDB</a></li><li><a href="https://cloud.tencent.com/document/api/571/18122" target="_blank" rel="noopener">数据传输服务 DTS</a></li><li><a href="https://cloud.tencent.com/document/api/237/16144" target="_blank" rel="noopener">云数据库 MariaDB</a></li><li><a href="https://cloud.tencent.com/document/api/557/16124" target="_blank" rel="noopener">分布式数据库 DCDB</a></li><li><a href="https://cloud.tencent.com/document/api/238/19927" target="_blank" rel="noopener">云数据库 SQL Server</a></li><li><a href="https://cloud.tencent.com/document/api/409/16761" target="_blank" rel="noopener">云数据库 PostgreSQL</a></li><li><a href="https://cloud.tencent.com/document/api/228/30974" target="_blank" rel="noopener">内容分发网络</a></li><li><a href="https://cloud.tencent.com/document/api/296/19825" target="_blank" rel="noopener">主机安全</a></li><li><a href="https://cloud.tencent.com/document/api/692/16733" target="_blank" rel="noopener">Web 漏洞扫描</a></li><li><a href="https://cloud.tencent.com/document/api/283/17742" target="_blank" rel="noopener">应用安全</a></li><li><a href="https://cloud.tencent.com/document/api/266/31753" target="_blank" rel="noopener">云点播</a></li><li><a href="https://cloud.tencent.com/document/api/267/20456" target="_blank" rel="noopener">云直播</a></li><li><a href="https://cloud.tencent.com/document/api/441/17362" target="_blank" rel="noopener">智能语音服务</a></li><li><a href="https://cloud.tencent.com/document/api/551/15612" target="_blank" rel="noopener">机器翻译</a></li><li><a href="https://cloud.tencent.com/document/api/851/18295" target="_blank" rel="noopener">智能钛机器学习</a></li><li><a href="https://cloud.tencent.com/document/api/656/18281" target="_blank" rel="noopener">催收机器人</a></li><li><a href="https://cloud.tencent.com/document/api/884/19310" target="_blank" rel="noopener">智聆口语评测</a></li><li><a href="https://cloud.tencent.com/document/api/853/18384" target="_blank" rel="noopener">腾讯优评</a></li><li><a href="https://cloud.tencent.com/document/api/845/30620" target="_blank" rel="noopener">Elasticsearch Service</a></li><li><a href="https://cloud.tencent.com/document/api/634/19469" target="_blank" rel="noopener">物联网通信</a></li><li><a href="https://cloud.tencent.com/document/api/663/19455" target="_blank" rel="noopener">TBaaS</a></li><li><a href="https://cloud.tencent.com/document/api/248/30343" target="_blank" rel="noopener">云监控</a></li><li><a href="https://cloud.tencent.com/document/api/659/18591" target="_blank" rel="noopener">迁移服务平台</a></li><li><a href="https://cloud.tencent.com/document/api/869/17778" target="_blank" rel="noopener">电子合同服务</a></li><li><a href="https://cloud.tencent.com/document/api/555/19170" target="_blank" rel="noopener">计费相关</a></li><li><a href="https://cloud.tencent.com/document/api/563/16034" target="_blank" rel="noopener">渠道合作伙伴</a></li><li><a href="https://cloud.tencent.com/document/api/1007/31320" target="_blank" rel="noopener">人脸核身-云智慧眼</a></li><li><a href="https://cloud.tencent.com/document/api/1013/31737" target="_blank" rel="noopener">威胁情报云查</a></li><li><a href="https://cloud.tencent.com/document/api/1012/31720" target="_blank" rel="noopener">样本智能分析平台</a></li><li><a href="https://cloud.tencent.com/document/api/1004/30607" target="_blank" rel="noopener">数学作业批改</a></li><li><a href="https://cloud.tencent.com/document/api/670/31052" target="_blank" rel="noopener">人脸融合</a></li><li><a href="https://cloud.tencent.com/document/api/867/32770" target="_blank" rel="noopener">人脸识别</a></li><li><a href="https://cloud.tencent.com/document/api/1000/30698" target="_blank" rel="noopener">数字版权管理</a></li></ul><h3 id="Composer安装"><a href="#Composer安装" class="headerlink" title="Composer安装"></a>Composer安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require tencentcloud/tencentcloud-sdk-php</span><br></pre></td></tr></table></figure><h3 id="示例一"><a href="#示例一" class="headerlink" title="示例一"></a>示例一</h3><p>以查询可用区接口为例:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'../../../TCloudAutoLoader.php'</span>;</span><br><span class="line"><span class="comment">// 导入对应产品模块的client</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Cvm</span>\<span class="title">V20170312</span>\<span class="title">CvmClient</span>;</span><br><span class="line"><span class="comment">// 导入要请求接口对应的Request类</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Cvm</span>\<span class="title">V20170312</span>\<span class="title">Models</span>\<span class="title">DescribeZonesRequest</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Exception</span>\<span class="title">TencentCloudSDKException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Credential</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 实例化一个证书对象，入参需要传入腾讯云账户secretId，secretKey</span></span><br><span class="line">    $cred = <span class="keyword">new</span> Credential(<span class="string">"secretId"</span>, <span class="string">"secretKey"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// # 实例化要请求产品(以cvm为例)的client对象</span></span><br><span class="line">    $client = <span class="keyword">new</span> CvmClient($cred, <span class="string">"ap-guangzhou"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化一个请求对象</span></span><br><span class="line">    $req = <span class="keyword">new</span> DescribeZonesRequest();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过client对象调用想要访问的接口，需要传入请求对象</span></span><br><span class="line">    $resp = $client-&gt;DescribeZones($req);</span><br><span class="line"></span><br><span class="line">    print_r($resp-&gt;toJsonString());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(TencentCloudSDKException $e) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="示例二"><a href="#示例二" class="headerlink" title="示例二"></a>示例二</h3><p>查询用户该地域下符合条件的所有实例<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'../../../TCloudAutoLoader.php'</span>;</span><br><span class="line"><span class="comment">// 导入对应产品模块的client</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Cvm</span>\<span class="title">V20170312</span>\<span class="title">CvmClient</span>;</span><br><span class="line"><span class="comment">// 导入要请求接口对应的Request类</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Cvm</span>\<span class="title">V20170312</span>\<span class="title">Models</span>\<span class="title">DescribeInstancesRequest</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Cvm</span>\<span class="title">V20170312</span>\<span class="title">Models</span>\<span class="title">Filter</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Exception</span>\<span class="title">TencentCloudSDKException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Credential</span>;</span><br><span class="line"><span class="comment">// 导入可选配置类</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Profile</span>\<span class="title">ClientProfile</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Profile</span>\<span class="title">HttpProfile</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 实例化一个证书对象，入参需要传入腾讯云账户secretId，secretKey</span></span><br><span class="line">    <span class="comment">//$cred = new Credential("secretId", "secretKey");</span></span><br><span class="line">    $cred = <span class="keyword">new</span> Credential(getenv(<span class="string">"TENCENTCLOUD_SECRET_ID"</span>), getenv(<span class="string">"TENCENTCLOUD_SECRET_KEY"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化一个http选项，可选的，没有特殊需求可以跳过</span></span><br><span class="line">    $httpProfile = <span class="keyword">new</span> HttpProfile();</span><br><span class="line">    $httpProfile-&gt;setReqMethod(<span class="string">"GET"</span>);  <span class="comment">// post请求(默认为post请求)</span></span><br><span class="line">    $httpProfile-&gt;setReqTimeout(<span class="number">30</span>);    <span class="comment">// 请求超时时间，单位为秒(默认60秒)</span></span><br><span class="line">    $httpProfile-&gt;setEndpoint(<span class="string">"cvm.ap-shanghai.tencentcloudapi.com"</span>);  <span class="comment">// 指定接入地域域名(默认就近接入)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化一个client选项，可选的，没有特殊需求可以跳过</span></span><br><span class="line">    $clientProfile = <span class="keyword">new</span> ClientProfile();</span><br><span class="line">    $clientProfile-&gt;setSignMethod(<span class="string">"HmacSHA256"</span>);  <span class="comment">// 指定签名算法(默认为HmacSHA256)</span></span><br><span class="line">    $clientProfile-&gt;setHttpProfile($httpProfile);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化要请求产品(以cvm为例)的client对象,clientProfile是可选的</span></span><br><span class="line">    $client = <span class="keyword">new</span> CvmClient($cred, <span class="string">"ap-shanghai"</span>, $clientProfile);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化一个cvm实例信息查询请求对象,每个接口都会对应一个request对象。</span></span><br><span class="line">    $req = <span class="keyword">new</span> DescribeInstancesRequest();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 填充请求参数,这里request对象的成员变量即对应接口的入参</span></span><br><span class="line">    <span class="comment">// 你可以通过官网接口文档或跳转到request对象的定义处查看请求参数的定义</span></span><br><span class="line">    $respFilter = <span class="keyword">new</span> Filter();  <span class="comment">// 创建Filter对象, 以zone的维度来查询cvm实例</span></span><br><span class="line">    $respFilter-&gt;Name = <span class="string">"zone"</span>;</span><br><span class="line">    $respFilter-&gt;Values = [<span class="string">"ap-shanghai-1"</span>, <span class="string">"ap-shanghai-2"</span>];</span><br><span class="line">    $req-&gt;Filters = [$respFilter];  <span class="comment">// Filters 是成员为Filter对象的列表</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里还支持以标准json格式的string来赋值请求参数的方式。下面的代码跟上面的参数赋值是等效的</span></span><br><span class="line">    $params = [</span><br><span class="line">        <span class="string">"Filters"</span> =&gt; [</span><br><span class="line">            [</span><br><span class="line">                <span class="string">"Name"</span> =&gt; <span class="string">"zone"</span>,</span><br><span class="line">                <span class="string">"Values"</span> =&gt; [<span class="string">"ap-shanghai-1"</span>, <span class="string">"ap-shanghai-2"</span>]</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line">    $req-&gt;fromJsonString(json_encode($params));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过client对象调用DescribeInstances方法发起请求。注意请求方法名与请求对象是对应的</span></span><br><span class="line">    <span class="comment">// 返回的resp是一个DescribeInstancesResponse类的实例，与请求对象对应</span></span><br><span class="line">    $resp = $client-&gt;DescribeInstances($req);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出json格式的字符串回包</span></span><br><span class="line">    print_r($resp-&gt;toJsonString());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 也可以取出单个值。</span></span><br><span class="line">    <span class="comment">// 你可以通过官网接口文档或跳转到response对象的定义处查看返回字段的定义</span></span><br><span class="line">    print_r($resp-&gt;TotalCount);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(TencentCloudSDKException $e) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>从上面的2个示例可以看出，使用sdk分为4步</p><ol><li>实例化一个证书对象</li><li>实例化要请求产品的client对象</li><li>实例化一个请求对象</li><li>通过client对象调用想要访问的接口</li></ol><h3 id="例子-查询视频的详情"><a href="#例子-查询视频的详情" class="headerlink" title="例子 - 查询视频的详情"></a>例子 - 查询视频的详情</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'../../../TCloudAutoLoader.php'</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Credential</span>;</span><br><span class="line"><span class="comment">// 导入对应产品模块的client</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Vod</span>\<span class="title">V20180717</span>\<span class="title">VodClient</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Vod</span>\<span class="title">V20180717</span>\<span class="title">Models</span>\<span class="title">DescribeMediaInfosRequest</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">TencentCloud</span>\<span class="title">Common</span>\<span class="title">Exception</span>\<span class="title">TencentCloudSDKException</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 实例化一个证书对象，入参需要传入腾讯云账户secretId，secretKey</span></span><br><span class="line">    $secretId = <span class="string">'123456'</span>;</span><br><span class="line">    $secretKey = <span class="string">'123456'</span>;</span><br><span class="line">    $cred = <span class="keyword">new</span> Credential($secretId, $secretKey);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化要请求产品的client对象</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 这里是获取媒体详细信息，接口名称为【DescribeMediaInfos】</span></span><br><span class="line"><span class="comment">    * 在sdk里面搜索这个关键字，会找到包含这个名字的文件，结构如下</span></span><br><span class="line"><span class="comment">    * Vod</span></span><br><span class="line"><span class="comment">    * -- Models</span></span><br><span class="line"><span class="comment">    * ---- DescribeMediaInfosRequest.php 构建请求参数</span></span><br><span class="line"><span class="comment">    * ---- DescribeMediaInfosResponse.php 构建返回参数</span></span><br><span class="line"><span class="comment">    * -- VodClient.php</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    $client = <span class="keyword">new</span> VodClient($cred, <span class="string">"ap-guangzhou"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例化一个请求对象</span></span><br><span class="line">    $req = <span class="keyword">new</span> DescribeMediaInfosRequest();</span><br><span class="line">    <span class="comment">// 传递参数</span></span><br><span class="line">    $req-&gt;FileIds = [<span class="string">'5285890788094598255'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过client对象调用想要访问的接口，需要传入请求对象</span></span><br><span class="line">    $resp = $client-&gt;DescribeMediaInfos($req);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 如果提示错误【cURL error 60: SSL certificate problem: self signed certificate in certificate chain (see http://curl.haxx.se/libcurl/c/libcurl-errors.html)】</span></span><br><span class="line"><span class="comment">    * 则修改文件【\vendor\tencentcloud\tencentcloud-sdk-php\src\TencentCloud\Common\Http\HttpConnection.php】的方法【__construct】</span></span><br><span class="line"><span class="comment">    * 由 $this-&gt;client = new Client(["base_uri" =&gt; $url]);</span></span><br><span class="line"><span class="comment">    * 改为 $this-&gt;client = new Client(["base_uri" =&gt; $url,'verify'=&gt;false]);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    $result = $resp-&gt;toJsonString();</span><br><span class="line">    $res = json_decode($result, <span class="keyword">true</span>);</span><br><span class="line">    dd($res);</span><br><span class="line">&#125; <span class="keyword">catch</span> (TencentCloudSDKException $e) &#123;</span><br><span class="line">    dd($e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>all_policy 权限设置示例<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"Statement"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Action"</span>: [</span><br><span class="line">        <span class="string">"oss:ListBuckets"</span>,</span><br><span class="line">        <span class="string">"oss:GetBucketAcl"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Resource"</span>: [<span class="string">"acs:oss:*:*:*"</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Action"</span>: [</span><br><span class="line">        <span class="string">"oss:*"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Resource"</span>: [<span class="string">"acs:oss:*:*:*"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"Version"</span>: <span class="string">"1"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;PHP-SDK&quot;&gt;&lt;a href=&quot;#PHP-SDK&quot; class=&quot;headerlink&quot; title=&quot;PHP-SDK&quot;&gt;&lt;/a&gt;PHP-SDK&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;欢迎使用腾讯云开发者工具套件（SDK）3.0，SDK3.0 是云 API3.0 平台的配套工具。目前已经支持 cvm、vpc、cbs 等产品，后续所有的云服务产品都会接入进来。新版 SDK 实现了统一化，具有各个语言版本的 SDK 使用方法相同，接口调用方式相同，统一的错误码和返回包格式这些优点。&lt;br&gt;为方便 PHP 开发者调试和接入腾讯云产品 API，这里向您介绍适用于 PHP 的腾讯云开发工具包，并提供首次使用开发工具包的简单示例。让您快速获取腾讯云 PHP SDK 并开始调用。&lt;br&gt;
    
    </summary>
    
    
      <category term="SDK" scheme="http://yoursite.com/tags/SDK/"/>
    
  </entry>
  
  <entry>
    <title>响应式图片</title>
    <link href="http://yoursite.com/2019/04/03/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2019/04/03/响应式图片/</id>
    <published>2019-04-03T12:44:07.000Z</published>
    <updated>2019-04-26T14:22:38.146Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、什么是响应式图片？"><a href="#一、什么是响应式图片？" class="headerlink" title="一、什么是响应式图片？"></a>一、什么是响应式图片？</h3><a id="more"></a><blockquote><p>根据不同的屏幕分辨率，和设备像素比来尽可能选择高分辨率的图片。<br>或者换个角度来说，当在小屏幕上不需要高清图或大图，这样我们用小图代替，就可以减少网络带宽啦。</p></blockquote><p>1、同样是普通屏幕（相对与retain等高清屏幕而言）上，在手机屏幕上显示小图片，在电脑浏览器上显示大图片。<br>2、同样大小的屏幕上，普通设备上显示普清图片，高清屏幕（如 retain屏幕）的设备上显示高清图片。</p><h3 id="二、如何实现响应式图片？"><a href="#二、如何实现响应式图片？" class="headerlink" title="二、如何实现响应式图片？"></a>二、如何实现响应式图片？</h3><ol><li>使用一张图片+css样式</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;text-align: center&quot; style=&quot;width: 100%&quot;&gt;&lt;img src=&quot;css/a.png&quot; style=&quot;width: 80%&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这样图片始终保持在频幕居中位置，且长度为外层div的80%宽</p><ol start="2"><li>多张图片</li></ol><p>上面那种方式，如果图片被拉伸过大会导致图片不清楚，影响用户体验。所以我们可以提供多张图片让浏览器选择最合适的。</p><ol><li>采用媒体查询的方式</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@media only screen and (max-width : 512px) &#123;</span><br><span class="line">    .img &#123; background-image: url(sunset-small.jpg); &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (max-width : 1024px) &#123;</span><br><span class="line">    .img &#123; background-image: url(sunset-large.jpg); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>only ：只针对，同类的有all media（所有设备）<br>screen：适应计算机彩色屏幕，同类的还有print（适应打印预览模式下查看的内容或者打印机打印的内容）<br>and：与条件 同类有or<br>max-width ：1024px 适应浏览器的最小宽度为 1024 像素，同类还有（指定min-width，width）<br>符合以上条件，则使用大括号里的样式</p><ol start="2"><li>html</li></ol><p>srcset和sizes是HTML5新支持的属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;image&quot;  src=&quot;mm-width-128px.jpg&quot;</span><br><span class="line">     srcset=&quot;mm-width-128px.jpg 128w, mm-width-256px.jpg 256w, mm-width-512px.jpg 512w&quot;</span><br><span class="line">     sizes=&quot;(max-width: 360px) 340px, 128px&quot;&gt;</span><br></pre></td></tr></table></figure></p><ul><li>src：当设备不支持srcset，sizes属性时，使用这个图片</li><li>srcset: 列出图片资源</li></ul><p>例如mm-width-128px.jpg 128w 代表图片是mm-width-128px.jpg 128px宽的图片，规格是128w。<br>128w的单位w是文件尺寸单位，一般128px宽度就写128w，如果是128px宽度的图片是png24无损图片，或100%质量JPG图片，则规格定为256w 即<code>128*2</code></p><ul><li>sizes：用来表示尺寸临界点。</li></ul><p>语法如下：</p><blockquote><p>sizes=”[media query] [length], [media query] [length] … etc”</p></blockquote><p>例如</p><p>size = “(max-width: 360px) 340px”<br>Eg (max-width: 360px)是媒体查询，表示当视图宽度不大于360px时，图片的宽度限制为340像素（这个宽度指的是css指定的图片大小，也称为渲染尺寸），当设备像素比是1的时候，应该使用大于等于340w规格的图片，所以浏览器会选择mm-width-512px.jpg<br>当设备像素比是2的时候，应该使用大于等于340<em>2=680w规格的图片<br>为什么呢？因为设备像素比是2，代表设备放2个像素点，但实际我们看到的宽度只有一个像素，也就是设备上正常显示1个像素大小需要2个像素点，这就是高清的由来，相当于图片压缩了。可是srcset里没有大于等于680w的图片，浏览器只有尽量选择高清的图，即mm-width-512px.jpg。<br>Eg 当视觉宽度为400px（&gt;360px），图片的宽度限制为128像素<br>设备像素比为1时，选择&gt;=128w规格的图（即mm-width-128px.jpg）<br>设备像素比为2时，选择&gt;=128</em>2w(图片限制的宽度<em>设备像素比 ，规格的图片即mm-width-256px.jpg ，设备像素比为3时，选择512w规格的图,设备像素比为4时，选择640w规格的图 可以没有提供，于是选择了512w的图<br>sizes=”(max-width: 360px) calc(100vw - 20px) “<br>代表：当视图宽度不大于360px时，应该使用大于100%视觉宽度-20px的规格的图片<br>（注：vw代表视觉宽度的百分比）<br>Eg 当视觉宽度为250px，设备像素比为1时，，图片的宽度限制为（250px-20px）=230px，<br>设备像素比为1，选择规格230w以上的图片，所以应该选mm-width-256px.jpg这张图来显示<br>设备像素比为2，选择230</em>2w以上的图片，所以选择mm-width-512px.jpg这张图来显示</p><p>来源： <a href="http://blog.csdn.net/zyr12/article/details/50211689" target="_blank" rel="noopener">http://blog.csdn.net/zyr12/article/details/50211689</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、什么是响应式图片？&quot;&gt;&lt;a href=&quot;#一、什么是响应式图片？&quot; class=&quot;headerlink&quot; title=&quot;一、什么是响应式图片？&quot;&gt;&lt;/a&gt;一、什么是响应式图片？&lt;/h3&gt;
    
    </summary>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>H5项目常见问题及注意事项</title>
    <link href="http://yoursite.com/2019/04/03/H5%E9%A1%B9%E7%9B%AE%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2019/04/03/H5项目常见问题及注意事项/</id>
    <published>2019-04-03T12:32:54.000Z</published>
    <updated>2019-04-26T14:22:38.133Z</updated>
    
    <content type="html"><![CDATA[<p>H5项目常见问题及注意事项<br><a id="more"></a></p><h3 id="Meta基础知识："><a href="#Meta基础知识：" class="headerlink" title="Meta基础知识："></a>Meta基础知识：</h3><h4 id="H5页面窗口自动调整到设备宽度，并禁止用户缩放页面"><a href="#H5页面窗口自动调整到设备宽度，并禁止用户缩放页面" class="headerlink" title="H5页面窗口自动调整到设备宽度，并禁止用户缩放页面"></a>H5页面窗口自动调整到设备宽度，并禁止用户缩放页面</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">//一、HTML页面结构</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">// width    设置viewport宽度，为一个正整数，或字符串‘device-width’</span><br><span class="line"></span><br><span class="line">// height   设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置</span><br><span class="line"></span><br><span class="line">// initial-scale    默认缩放比例，为一个数字，可以带小数</span><br><span class="line"></span><br><span class="line">// minimum-scale    允许用户最小缩放比例，为一个数字，可以带小数</span><br><span class="line"></span><br><span class="line">// maximum-scale    允许用户最大缩放比例，为一个数字，可以带小数</span><br><span class="line"></span><br><span class="line">// user-scalable    是否允许手动缩放</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//二、JS动态判断</span><br><span class="line"></span><br><span class="line">var phoneWidth =  parseInt(window.screen.width);</span><br><span class="line"></span><br><span class="line">var phoneScale = phoneWidth/640;</span><br><span class="line"></span><br><span class="line">var ua = navigator.userAgent;</span><br><span class="line"></span><br><span class="line">if (/Android (\d+\.\d+)/.test(ua))&#123;</span><br><span class="line"></span><br><span class="line">    var version = parseFloat(RegExp.$1);</span><br><span class="line"></span><br><span class="line">    if(version&gt;2.3)&#123;</span><br><span class="line"></span><br><span class="line">        document.write('<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=640, minimum-scale = '+phoneScale+', maximum-scale = '+phoneScale+', target-densitydpi=device-dpi"</span>&gt;</span>');</span><br><span class="line"></span><br><span class="line">    &#125;else&#123;</span><br><span class="line"></span><br><span class="line">        document.write('<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=640, target-densitydpi=device-dpi"</span>&gt;</span>');</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line"></span><br><span class="line">    document.write('<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=640, user-scalable=no, target-densitydpi=device-dpi"</span>&gt;</span>');</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="空白页基本meta标签"><a href="#空白页基本meta标签" class="headerlink" title="空白页基本meta标签"></a>空白页基本meta标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设置缩放 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, user-scalable=no, minimal-ui"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 可隐藏地址栏，仅针对IOS的Safari（注：IOS7.0版本以后，safari上已看不到效果） --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 仅针对IOS的Safari顶端状态条的样式（可选default/black/black-translucent ） --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- IOS中禁用将数字识别为电话号码/忽略Android平台中对邮箱地址的识别 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span><span class="attr">content</span>=<span class="string">"telephone=no, email=no"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="其他meta标签"><a href="#其他meta标签" class="headerlink" title="其他meta标签"></a>其他meta标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 避免IE使用兼容模式 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"HandheldFriendly"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 微软的老式浏览器 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"MobileOptimized"</span> <span class="attr">content</span>=<span class="string">"320"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- uc强制竖屏 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"screen-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- QQ强制竖屏 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- UC强制全屏 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"full-screen"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- QQ强制全屏 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-fullscreen"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- UC应用模式 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"browsermode"</span> <span class="attr">content</span>=<span class="string">"application"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- QQ应用模式 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-page-mode"</span> <span class="attr">content</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- windows phone 点击无高光 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h3><h4 id="移动端如何定义字体font-family"><a href="#移动端如何定义字体font-family" class="headerlink" title="移动端如何定义字体font-family"></a>移动端如何定义字体font-family</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@ --------------------------------------中文字体的英文名称</span><br><span class="line"></span><br><span class="line">@ 宋体      SimSun</span><br><span class="line"></span><br><span class="line">@ 黑体      SimHei</span><br><span class="line"></span><br><span class="line">@ 微信雅黑   Microsoft Yahei</span><br><span class="line"></span><br><span class="line">@ 微软正黑体 Microsoft JhengHei</span><br><span class="line"></span><br><span class="line">@ 新宋体    NSimSun</span><br><span class="line"></span><br><span class="line">@ 新细明体  MingLiU</span><br><span class="line"></span><br><span class="line">@ 细明体    MingLiU</span><br><span class="line"></span><br><span class="line">@ 标楷体    DFKai-SB</span><br><span class="line"></span><br><span class="line">@ 仿宋     FangSong</span><br><span class="line"></span><br><span class="line">@ 楷体     KaiTi</span><br><span class="line"></span><br><span class="line">@ 仿宋_GB2312  FangSong_GB2312</span><br><span class="line"></span><br><span class="line">@ 楷体_GB2312  KaiTi_GB2312</span><br><span class="line"></span><br><span class="line">@</span><br><span class="line"></span><br><span class="line">@ 说明：中文字体多数使用宋体、雅黑，英文用Helvetica</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">body &#123; font-family: Microsoft Yahei,SimSun,Helvetica; &#125;</span><br></pre></td></tr></table></figure><h4 id="打电话发短信写邮件怎么实现"><a href="#打电话发短信写邮件怎么实现" class="headerlink" title="打电话发短信写邮件怎么实现"></a>打电话发短信写邮件怎么实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">// 一、打电话</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"tel:0755-10086"</span>&gt;</span>打电话给:0755-10086<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//  二、发短信，winphone系统无效</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"sms:10086"</span>&gt;</span>发短信给: 10086<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 三、写邮件</span><br><span class="line"></span><br><span class="line">//注：在添加这些功能时，第一个功能以"?"开头，后面的以"&amp;"开头</span><br><span class="line"></span><br><span class="line">//1.普通邮件</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题）</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?cc=zhangqian0406@yeah.net"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//3.跟着抄送地址后，写上&amp;bcc=,可添加密件抄送地址（Android存在兼容问题）</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=384900096@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com;384900096@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//5.包含主题，用?subject=</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?subject=邮件主题"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=邮件主题内容%0A腾讯诚信%0A期待您的到来"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//7.内容包含链接，含http(s)://等的文本自动转化为链接</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=http://www.baidu.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//8.内容包含图片（PC不支持）</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=&lt;img src='images/1.jpg' /&gt;"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//9.完整示例</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com;384900096@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=993233461@qq.com&amp;subject=[邮件主题]&amp;body=腾讯诚邀您参与%0A%0Ahttp://www.baidu.com%0A%0A&lt;img src='images/1.jpg' /&gt;"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="移动端touch事件（区分webkit和winphone）"><a href="#移动端touch事件（区分webkit和winphone）" class="headerlink" title="移动端touch事件（区分webkit和winphone）"></a>移动端touch事件（区分webkit和winphone）</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">/* 当用户手指放在移动设备在屏幕上滑动会触发的touch事件 */</span><br><span class="line"></span><br><span class="line">// 以下支持webkit</span><br><span class="line"></span><br><span class="line">touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指</span><br><span class="line"></span><br><span class="line">touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动</span><br><span class="line"></span><br><span class="line">touchend——当手指离开屏幕时触发</span><br><span class="line"></span><br><span class="line">touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//TouchEvent说明：</span><br><span class="line"></span><br><span class="line">touches：屏幕上所有手指的信息</span><br><span class="line"></span><br><span class="line">targetTouches：手指在目标区域的手指信息</span><br><span class="line"></span><br><span class="line">changedTouches：最近一次触发该事件的手指信息</span><br><span class="line"></span><br><span class="line">touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//参数信息(changedTouches[0])</span><br><span class="line"></span><br><span class="line">clientX、clientY在显示区的坐标</span><br><span class="line"></span><br><span class="line">target：当前元素</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//事件响应顺序</span><br><span class="line"></span><br><span class="line">ontouchstart  &gt; ontouchmove  &gt; ontouchend &gt; onclick</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 以下支持winphone 8</span><br><span class="line"></span><br><span class="line">MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指</span><br><span class="line"></span><br><span class="line">MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html&#123;-ms-touch-action: none;&#125;可以阻止默认情况的发生：阻止页面滚动</span><br><span class="line"></span><br><span class="line">MSPointerUp——当手指离开屏幕时触发</span><br></pre></td></tr></table></figure><h4 id="移动端click屏幕产生200-300ms的延时响应"><a href="#移动端click屏幕产生200-300ms的延时响应" class="headerlink" title="移动端click屏幕产生200-300ms的延时响应"></a>移动端click屏幕产生200-300ms的延时响应</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">说明：移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以下是历史原因，来源一个公司内一个同事的分享：</span><br><span class="line"></span><br><span class="line">2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//解决方案：</span><br><span class="line"></span><br><span class="line">fastclick可以解决在手机上点击事件的300ms延迟</span><br><span class="line"></span><br><span class="line">zepto的touch模块，tap事件也是为了解决在click的延迟问题</span><br></pre></td></tr></table></figure><h4 id="Rentina显示屏原理及设计方案"><a href="#Rentina显示屏原理及设计方案" class="headerlink" title="Rentina显示屏原理及设计方案"></a>Rentina显示屏原理及设计方案</h4><p>说明：retina屏是一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个。<br>在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍。<br>那么，前端的应对方案是：设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//例如图片宽高为：200px*200px，那么写法如下</span><br><span class="line"></span><br><span class="line">.css&#123;width:100px;height:100px;background-size:100px 100px;&#125;</span><br><span class="line"></span><br><span class="line">//其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px</span><br><span class="line"></span><br><span class="line">.css&#123;font-size:20px&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//image-set设计Rentina背景图</span><br><span class="line"></span><br><span class="line">image-set,webkit私有属性，也是CSS4的属性，为解决Rentina屏幕下的图像而生。</span><br><span class="line"></span><br><span class="line">.css &#123;</span><br><span class="line"></span><br><span class="line">    background: url(images/bg.jpg) no-repeat center;</span><br><span class="line"></span><br><span class="line">    background: -webkit-image-set(</span><br><span class="line"></span><br><span class="line">    url(images/bg.jpg) 1x,     //支持image-set普通屏</span><br><span class="line"></span><br><span class="line">    url(images/bg-2x.jpg) 2x); //支持image-set的Rentinan</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="点击元素产生背景或边框怎么去掉"><a href="#点击元素产生背景或边框怎么去掉" class="headerlink" title="点击元素产生背景或边框怎么去掉"></a>点击元素产生背景或边框怎么去掉</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0去除灰色半透明遮罩；</span><br><span class="line"></span><br><span class="line">//android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果；</span><br><span class="line"></span><br><span class="line">//winphone系统,点击标签产生的灰色半透明背景，能通过设置<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span>去掉；</span><br><span class="line"></span><br><span class="line">//特殊说明：有些机型去除不了，如小米2。对于按钮类还有个办法，不使用a或者input标签，直接用div标签</span><br><span class="line"></span><br><span class="line">a,button,input,textarea &#123;</span><br><span class="line"></span><br><span class="line">    -webkit-tap-highlight-color: rgba(0,0,0,0);</span><br><span class="line"></span><br><span class="line">    -webkit-user-modify:read-write-plaintext-only; //-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 也可以</span><br><span class="line"></span><br><span class="line">* &#123; -webkit-tap-highlight-color: rgba(0,0,0,0); &#125;</span><br><span class="line"></span><br><span class="line">//winphone下</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="移动端字体单位font-size选择px还是rem"><a href="#移动端字体单位font-size选择px还是rem" class="headerlink" title="移动端字体单位font-size选择px还是rem"></a>移动端字体单位font-size选择px还是rem</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 如需适配多种移动设备，建议使用rem。以下为参考值：</span><br><span class="line"></span><br><span class="line">html &#123; font-size: 62.5%; &#125;   //10*16 = 62.5%</span><br><span class="line"></span><br><span class="line">//设置12px字体   这里注意在rem前要加上对应的px值，解决不支持rem的浏览器的兼容问题，做到优雅降级</span><br><span class="line"></span><br><span class="line">body &#123; font-size:12px; font-size:1.2rem; &#125;</span><br></pre></td></tr></table></figure><h4 id="超实用的CSS样式"><a href="#超实用的CSS样式" class="headerlink" title="超实用的CSS样式"></a>超实用的CSS样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">//去掉webkit的滚动条——display: none;</span><br><span class="line"></span><br><span class="line">//其他参数</span><br><span class="line"></span><br><span class="line">::-webkit-scrollba //滚动条整体部分</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb   //滚动条内的小方块</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track   //滚动条轨道</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-button  //滚动条轨道两端按钮</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track-piece  //滚动条中间部分，内置轨道</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner       //边角，两个滚动条交汇处</span><br><span class="line"></span><br><span class="line">::-webkit-resizer            //两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 禁止长按链接与图片弹出菜单</span><br><span class="line"></span><br><span class="line">a,img &#123; -webkit-touch-callout: none &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 禁止ios和android用户选中文字</span><br><span class="line"></span><br><span class="line">html,body &#123;-webkit-user-select:none; user-select: none; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 改变输入框placeholder的颜色值</span><br><span class="line"></span><br><span class="line">::-webkit-input-placeholder &#123; /* WebKit browsers */</span><br><span class="line"></span><br><span class="line">color: #999; &#125;</span><br><span class="line"></span><br><span class="line">:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */</span><br><span class="line"></span><br><span class="line">color: #999; &#125;</span><br><span class="line"></span><br><span class="line">::-moz-placeholder &#123; /* Mozilla Firefox 19+ */</span><br><span class="line"></span><br><span class="line">color: #999; &#125;</span><br><span class="line"></span><br><span class="line">:-ms-input-placeholder &#123; /* Internet Explorer 10+ */</span><br><span class="line"></span><br><span class="line">color: #999; &#125;</span><br><span class="line"></span><br><span class="line">input:focus::-webkit-input-placeholder&#123; color:#999; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// android上去掉语音输入按钮</span><br><span class="line"></span><br><span class="line">input::-webkit-input-speech-button &#123;display: none&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 阻止windows Phone的默认触摸事件</span><br><span class="line"></span><br><span class="line">/*说明：winphone下默认触摸事件事件使用e.preventDefault是无效的，可通过样式来禁用，如：*/</span><br><span class="line"></span><br><span class="line">html &#123; -ms-touch-action:none; &#125; //禁止winphone默认触摸事件</span><br></pre></td></tr></table></figure><h4 id="取消input在ios下，输入的时候英文首字母的默认大写"><a href="#取消input在ios下，输入的时候英文首字母的默认大写" class="headerlink" title="取消input在ios下，输入的时候英文首字母的默认大写"></a>取消input在ios下，输入的时候英文首字母的默认大写</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input autocapitalize=&quot;off&quot; autocorrect=&quot;off&quot; /&gt;</span><br></pre></td></tr></table></figure><h4 id="手机拍照和上传图片"><a href="#手机拍照和上传图片" class="headerlink" title="手机拍照和上传图片"></a>手机拍照和上传图片</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。Winphone不支持</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;file&quot; accept=&quot;images/*&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;file&quot; accept=&quot;video/*&quot; /&gt;</span><br></pre></td></tr></table></figure><h4 id="屏幕旋转的事件和样式"><a href="#屏幕旋转的事件和样式" class="headerlink" title="屏幕旋转的事件和样式"></a>屏幕旋转的事件和样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">//JS处理</span><br><span class="line"></span><br><span class="line">function orientInit()&#123;</span><br><span class="line"></span><br><span class="line">    var orientChk = document.documentElement.clientWidth &gt; document.documentElement.clientHeight?&apos;landscape&apos;:&apos;portrait&apos;;</span><br><span class="line"></span><br><span class="line">    if(orientChk ==&apos;lapdscape&apos;)&#123;</span><br><span class="line"></span><br><span class="line">        //这里是横屏下需要执行的事件</span><br><span class="line"></span><br><span class="line">    &#125;else&#123;</span><br><span class="line"></span><br><span class="line">        //这里是竖屏下需要执行的事件</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">orientInit();</span><br><span class="line"></span><br><span class="line">window.addEventListener(&apos;onorientationchange&apos; in window?&apos;orientationchange&apos;:&apos;resize&apos;, function()&#123;</span><br><span class="line"></span><br><span class="line">    setTimeout(orientInit, 100);</span><br><span class="line"></span><br><span class="line">&#125;,false)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//CSS处理</span><br><span class="line"></span><br><span class="line">//竖屏时样式</span><br><span class="line"></span><br><span class="line">@media all and (orientation:portrait)&#123;   &#125;</span><br><span class="line"></span><br><span class="line">//横屏时样式</span><br><span class="line"></span><br><span class="line">@media all and (orientation:landscape)&#123;   &#125;</span><br></pre></td></tr></table></figure><h4 id="audio元素和video元素在ios和andriod中无法自动播放"><a href="#audio元素和video元素在ios和andriod中无法自动播放" class="headerlink" title="audio元素和video元素在ios和andriod中无法自动播放"></a>audio元素和video元素在ios和andriod中无法自动播放</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">//音频，写法一</span><br><span class="line"></span><br><span class="line">&lt;audio src=&quot;music/bg.mp3&quot; autoplay loop controls&gt;你的浏览器还不支持哦&lt;/audio&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//音频，写法二</span><br><span class="line"></span><br><span class="line">&lt;audio controls=&quot;controls&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;source src=&quot;music/bg.ogg&quot; type=&quot;audio/ogg&quot;&gt;&lt;/source&gt;</span><br><span class="line"></span><br><span class="line">    &lt;source src=&quot;music/bg.mp3&quot; type=&quot;audio/mpeg&quot;&gt;&lt;/source&gt;</span><br><span class="line"></span><br><span class="line">    优先播放音乐bg.ogg，不支持在播放bg.mp3</span><br><span class="line"></span><br><span class="line">&lt;/audio&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//JS绑定自动播放（操作window时，播放音乐）</span><br><span class="line"></span><br><span class="line">$(window).one(&apos;touchstart&apos;, function()&#123;</span><br><span class="line"></span><br><span class="line">    music.play();</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//微信下兼容处理</span><br><span class="line"></span><br><span class="line">document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function () &#123;</span><br><span class="line"></span><br><span class="line">    music.play();</span><br><span class="line"></span><br><span class="line">&#125;, false);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//小结</span><br><span class="line"></span><br><span class="line">//1.audio元素的autoplay属性在IOS及Android上无法使用，在PC端正常</span><br><span class="line"></span><br><span class="line">//2.audio元素没有设置controls时，在IOS及Android会占据空间大小，而在PC端Chrome是不会占据任何空间</span><br></pre></td></tr></table></figure><h4 id="重力感应事件"><a href="#重力感应事件" class="headerlink" title="重力感应事件"></a>重力感应事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">// 运用HTML5的deviceMotion，调用重力感应事件</span><br><span class="line"></span><br><span class="line">if(window.DeviceMotionEvent)&#123;</span><br><span class="line"></span><br><span class="line">    document.addEventListener(&apos;devicemotion&apos;, deviceMotionHandler, false)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var speed = 30;</span><br><span class="line"></span><br><span class="line">var x = y = z = lastX = lastY = lastZ = 0;</span><br><span class="line"></span><br><span class="line">function deviceMotionHandler(eventData)&#123;</span><br><span class="line"></span><br><span class="line">    var acceleration = event.accelerationIncludingGravity;</span><br><span class="line"></span><br><span class="line">    x = acceleration.x;</span><br><span class="line"></span><br><span class="line">    y = acceleration.y;</span><br><span class="line"></span><br><span class="line">    z = acceleration.z;</span><br><span class="line"></span><br><span class="line">    if(Math.abs(x-lastX)&gt;speed || Math.abs(y-lastY)&gt;speed || Math.abs(z-lastZ)&gt;speed )&#123;</span><br><span class="line"></span><br><span class="line">        //这里是摇动后要执行的方法</span><br><span class="line"></span><br><span class="line">        yaoAfter();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    lastX = x;</span><br><span class="line"></span><br><span class="line">    lastY = y;</span><br><span class="line"></span><br><span class="line">    lastZ = z;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function yaoAfter()&#123;</span><br><span class="line"></span><br><span class="line">    //do something</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整"><a href="#微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整" class="headerlink" title="微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整"></a>微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">//以下代码可使Android机页面不再受用户字体缩放强制改变大小，但是会有1S左右延时，期间可以考虑loading来处理</span><br><span class="line"></span><br><span class="line">if (typeof(WeixinJSBridge) == &quot;undefined&quot;) &#123;</span><br><span class="line"></span><br><span class="line">    document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function (e) &#123;</span><br><span class="line"></span><br><span class="line">        setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">            WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;, &#123; &apos;fontSize&apos;:0&#125;, function(res)&#123;</span><br><span class="line"></span><br><span class="line">                alert(JSON.stringify(res));</span><br><span class="line"></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;, 0)</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">    setTimeout(function()&#123;</span><br><span class="line"></span><br><span class="line">        WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;, &#123; &apos;fontSize&apos;:0&#125;, function(res)&#123;</span><br><span class="line"></span><br><span class="line">            alert(JSON.stringify(res));</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;, 0)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//IOS下可使用 -webkit-text-size-adjust禁止用户调整字体大小</span><br><span class="line"></span><br><span class="line">body &#123; -webkit-text-size-adjust:100%!important; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//最好的解决方案：最好使用rem或百分比布局</span><br></pre></td></tr></table></figure><h4 id="定位的坑"><a href="#定位的坑" class="headerlink" title="定位的坑"></a>定位的坑</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">//fixed定位</span><br><span class="line"></span><br><span class="line">//1.ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位</span><br><span class="line"></span><br><span class="line">//2.android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位</span><br><span class="line"></span><br><span class="line">//3.ios4下不支持position:fixed</span><br><span class="line"></span><br><span class="line">//解决方案：使用[Iscroll](http://cubiq.org/iscroll-5)，如：</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;wrapper&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ul&gt;</span><br><span class="line"></span><br><span class="line">               &lt;li&gt;&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">               .....</span><br><span class="line"></span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;iscroll.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    var myscroll;</span><br><span class="line"></span><br><span class="line">    function loaded()&#123;</span><br><span class="line"></span><br><span class="line">        myscroll=new iScroll(&quot;wrapper&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    window.addEventListener(&quot;DOMContentLoaded&quot;,loaded,false);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//position定位</span><br><span class="line"></span><br><span class="line">//Android下弹出软键盘弹出时，影响absolute元素定位</span><br><span class="line"></span><br><span class="line">//解决方案:</span><br><span class="line"></span><br><span class="line">var ua = navigator.userAgent.indexOf(&apos;Android&apos;);</span><br><span class="line"></span><br><span class="line">if(ua&gt;-1)&#123;</span><br><span class="line"></span><br><span class="line">    $(&apos;.ipt&apos;).on(&apos;focus&apos;, function()&#123;</span><br><span class="line"></span><br><span class="line">        $(&apos;.css&apos;).css(&#123;&apos;visibility&apos;:&apos;hidden&apos;&#125;)</span><br><span class="line"></span><br><span class="line">    &#125;).on(&apos;blur&apos;, function()&#123;</span><br><span class="line"></span><br><span class="line">        $(&apos;.css&apos;).css(&#123;&apos;visibility&apos;:&apos;visible&apos;&#125;)</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="播放视频不全屏"><a href="#播放视频不全屏" class="headerlink" title="播放视频不全屏"></a>播放视频不全屏</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"></span><br><span class="line">1.ios7+支持自动播放</span><br><span class="line"></span><br><span class="line">2.支持Airplay的设备（如：音箱、Apple TV)播放</span><br><span class="line"></span><br><span class="line">x-webkit-airplay=&quot;true&quot;</span><br><span class="line"></span><br><span class="line">3.播放视频不全屏</span><br><span class="line"></span><br><span class="line">webkit-playsinline=&quot;true&quot;</span><br><span class="line"></span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;video x-webkit-airplay=&quot;true&quot; webkit-playsinline=&quot;true&quot; preload=&quot;auto&quot; autoplay src=&quot;http://&quot;&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><h4 id="JS判断设备"><a href="#JS判断设备" class="headerlink" title="JS判断设备"></a>JS判断设备</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function deviceType()&#123;</span><br><span class="line"></span><br><span class="line">    var ua = navigator.userAgent;</span><br><span class="line"></span><br><span class="line">    var agent = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;];</span><br><span class="line"></span><br><span class="line">    for(var i=0; i&lt;len,len = agent.length; i++)&#123;</span><br><span class="line"></span><br><span class="line">        if(ua.indexOf(agent[i])&gt;0)&#123;</span><br><span class="line"></span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">deviceType();</span><br><span class="line"></span><br><span class="line">window.addEventListener(&apos;resize&apos;, function()&#123;</span><br><span class="line"></span><br><span class="line">    deviceType();</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="JS判断微信浏览器"><a href="#JS判断微信浏览器" class="headerlink" title="JS判断微信浏览器"></a>JS判断微信浏览器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function isWeixin()&#123;</span><br><span class="line"></span><br><span class="line">    var ua = navigator.userAgent.toLowerCase();</span><br><span class="line"></span><br><span class="line">    if(ua.match(/MicroMessenger/i)==&apos;micromessenger&apos;)&#123;</span><br><span class="line"></span><br><span class="line">        return true;</span><br><span class="line"></span><br><span class="line">    &#125;else&#123;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="android-2-3-bug"><a href="#android-2-3-bug" class="headerlink" title="android 2.3 bug"></a>android 2.3 bug</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//1.@-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉</span><br><span class="line"></span><br><span class="line">//2.after和before伪类无法使用动画animation</span><br><span class="line"></span><br><span class="line">//3.border-radius不支持%单位，如要兼容，可以给radius设置一下较大的值</span><br><span class="line"></span><br><span class="line">//4.translate百分比的写法和scale在一起会导致失效，例如：</span><br><span class="line"></span><br><span class="line">-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)</span><br></pre></td></tr></table></figure><h4 id="android-4-x-bug"><a href="#android-4-x-bug" class="headerlink" title="android 4.x bug"></a>android 4.x bug</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//1.三星 Galaxy S4中自带浏览器不支持border-radius缩写</span><br><span class="line"></span><br><span class="line">//2.同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分</span><br><span class="line"></span><br><span class="line">//3.部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色</span><br><span class="line"></span><br><span class="line">//4.android无法同时播放多音频audio</span><br></pre></td></tr></table></figure><h4 id="消除transition闪屏"><a href="#消除transition闪屏" class="headerlink" title="消除transition闪屏"></a>消除transition闪屏</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.css &#123;</span><br><span class="line"></span><br><span class="line">    -webkit-transform-style: preserve-3d;</span><br><span class="line"></span><br><span class="line">    -webkit-backface-visibility: hidden;</span><br><span class="line"></span><br><span class="line">    -webkit-perspective: 1000;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="开启硬件加速"><a href="#开启硬件加速" class="headerlink" title="开启硬件加速"></a>开启硬件加速</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//目前，像Chrome/Filefox/Safari/IE9+以及最新版本Opera都支持硬件加速，当检测到某个DOM元素应用了某些CSS规则时就会自动开启，从而解决页面闪白，保证动画流畅。</span><br><span class="line"></span><br><span class="line">.css &#123;</span><br><span class="line"></span><br><span class="line">    -webkit-transform: translate3d(0,0,0);</span><br><span class="line"></span><br><span class="line">    -moz-transform: translate3d(0,0,0);</span><br><span class="line"></span><br><span class="line">    -ms-transform: translate3d(0,0,0);</span><br><span class="line"></span><br><span class="line">    transform: translate3d(0,0,0);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="渲染优化"><a href="#渲染优化" class="headerlink" title="渲染优化"></a>渲染优化</h4><p>//1.禁止使用iframe（阻塞父文档onload事件）</p><p>//2.禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能）</p><p>//使用CSS3代码代替JS动画；</p><p>//开启GPU加速；</p><p>//使用base64位编码图片(不小图而言，大图不建议使用)</p><p>// 对于一些小图标，可以使用base64位编码，以减少网络请求。但不建议大图使用，比较耗费CPU。小图标优势在于：</p><p>//1.减少HTTP请求；</p><p>//2.避免文件跨域；</p><p>//3.修改及时生效；<br><code>`</code><br>来源： <a href="http://mp.weixin.qq.com/s/JVUpsz9QHsNV0_7U-3HCMg" target="_blank" rel="noopener">http://mp.weixin.qq.com/s/JVUpsz9QHsNV0_7U-3HCMg</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;H5项目常见问题及注意事项&lt;br&gt;
    
    </summary>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>CSS3滚动条美化CSS3滚动条皮肤</title>
    <link href="http://yoursite.com/2019/04/03/CSS3%E6%BB%9A%E5%8A%A8%E6%9D%A1%E7%BE%8E%E5%8C%96CSS3%E6%BB%9A%E5%8A%A8%E6%9D%A1%E7%9A%AE%E8%82%A4/"/>
    <id>http://yoursite.com/2019/04/03/CSS3滚动条美化CSS3滚动条皮肤/</id>
    <published>2019-04-03T12:30:37.000Z</published>
    <updated>2019-04-26T14:22:38.131Z</updated>
    
    <content type="html"><![CDATA[<p>CSS3 -webkit-scrollbar滚动条皮肤美化实现，利用-webkit-scrollbar，-webkit-scrollbar-track，-webkit-scrollbar-thumb这2个属性设置不同样式的滚动条。<br><a id="more"></a><br>下面是5个滚动条样式。<br>css代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test1</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test1</span><span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>:<span class="number">#808080</span>;</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test1</span><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>:<span class="number">#ff4400</span>;</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test2</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test2</span><span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>:<span class="number">#fff</span>;</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test2</span><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#F90</span>;</span><br><span class="line"> <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(45deg,  rgba(255, 255, 255, .4) <span class="number">25%</span>,  transparent <span class="number">25%</span>,  transparent <span class="number">50%</span>,  <span class="built_in">rgba</span>(255, 255, 255, .4) <span class="number">50%</span>,  <span class="built_in">rgba</span>(255, 255, 255, .4) <span class="number">75%</span>,  transparent <span class="number">75%</span>,  transparent);</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test3</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test3</span><span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>:<span class="number">#f5f5f5</span>;</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test3</span><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line"> <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#FFF</span>;</span><br><span class="line"> <span class="attribute">background-image</span>: <span class="built_in">-webkit-gradient</span>(linear,  40% 0%,  75% 84%,  from(#4D9C41),  <span class="built_in">to</span>(#19911D),  <span class="built_in">color-stop</span>(.6, #54DE5D));</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test4</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:scroll <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test4</span>&gt;<span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test4</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line"> <span class="attribute">height</span>:<span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test4</span><span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>:<span class="number">#f5f5f5</span>;</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test4</span><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line"> <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#F90</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(90deg,  rgba(255, 255, 255, .4) <span class="number">25%</span>,  transparent <span class="number">25%</span>,  transparent <span class="number">50%</span>,  <span class="built_in">rgba</span>(255, 255, 255, .4) <span class="number">50%</span>,  <span class="built_in">rgba</span>(255, 255, 255, .4) <span class="number">75%</span>,  transparent <span class="number">75%</span>,  transparent);</span><br><span class="line"> <span class="attribute">-webkit-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">-moz-border-radius</span>: <span class="number">2em</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>:<span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test5</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line"> <span class="attribute">height</span>:<span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test5</span><span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>:<span class="number">#f5f5f5</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.test5</span><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#d52828</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>转自：<a href="https://code.pengyaou.com/legendsz/front/codecss/MTA1.html" target="_blank" rel="noopener">https://code.pengyaou.com/legendsz/front/codecss/MTA1.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS3 -webkit-scrollbar滚动条皮肤美化实现，利用-webkit-scrollbar，-webkit-scrollbar-track，-webkit-scrollbar-thumb这2个属性设置不同样式的滚动条。&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS滚动条实现步骤及美化小技巧</title>
    <link href="http://yoursite.com/2019/04/03/CSS%E6%BB%9A%E5%8A%A8%E6%9D%A1%E5%AE%9E%E7%8E%B0%E6%AD%A5%E9%AA%A4%E5%8F%8A%E7%BE%8E%E5%8C%96%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2019/04/03/CSS滚动条实现步骤及美化小技巧/</id>
    <published>2019-04-03T12:23:08.000Z</published>
    <updated>2019-04-26T14:22:38.132Z</updated>
    
    <content type="html"><![CDATA[<p>很多朋友在网页设计中要自定义滚动条样式的情景，滚动条的样式我们可以通过css来控制的，比如网易邮箱的滚动条样子很好看，就是利用的CSS来设置实现的。但是css控制的滚动条应该如何实现和隐藏呢？滚动条能不能换颜色或者做的更好看一些呢？下面通通告诉你。</p><p>你可以复习一下CSS overflow 属性的内容。<br><a id="more"></a><br>1、overflow-y : 设置当对象的内容超过其指定高度时如何管理内容；overflow-x : 设置当对象的内容超过其指定宽度时如何管理内容。</p><p>参数:<br>visible：扩大面积以显示所有内容</p><p>auto：仅当内容超出限定值时添加滚动条</p><p>hidden：总是隐藏滚动条</p><p>scroll：总是显示滚动条</p><p>2、height : 设置滚动条的高度（修改其后数值即可）。</p><p>3、滚动条颜色参数设置：</p><p>scrollbar-3d-light-color 设置或检索滚动条亮边框颜色</p><p>scrollbar-highlight-color 设置或检索滚动条3D界面的亮边（ThreedHighlight）颜色</p><p>scrollbar-face-color  设置或检索滚动条3D表面（ThreedFace）的颜色</p><p>scrollbar-arrow-color  设置或检索滚动条方向箭头的颜色</p><p>scrollbar-shadow-color  设置或检索滚动条3D界面的暗边（ThreedShadow）颜色</p><p>scrollbar-dark-shadow-color 设置或检索滚动条暗边框（ThreedDarkShadow）颜色</p><p>scrollbar-base-color  设置或检索滚动条基准颜色</p><p>设置滚动条样式<br>在原来的html的时候，我们可以这样定义整个页面的滚动条<br>body{<br>scrollbar-3dlight-color:#D4D0C8; /<em>- 最外左 -</em>/<br>   scrollbar-highlight-color:#fff; /<em>- 左二 -</em>/<br>   scrollbar-face-color:#E4E4E4; /<em>- 面子 -</em>/<br>   scrollbar-arrow-color:#666; /<em>- 箭头 -</em>/<br>   scrollbar-shadow-color:#808080; /<em>- 右二 -</em>/<br>   scrollbar-darkshadow-color:#D7DCE0; /<em>- 右一 -</em>/<br>   scrollbar-base-color:#D7DCE0; /<em>- 基色 -</em>/<br>   scrollbar-track-color:#;/<em>- 滑道 -</em>/<br>}</p><p>但是同样的代码，我们应用在 xhtml下就不起作用了，我相信好多好朋友也遇到过同样的问题<br>那么怎么才能在xhtml下应用滚动条样式呢？看下列代码<br>html{<br>scrollbar-3dlight-color:#D4D0C8; /<em>- 最外左 -</em>/<br>   scrollbar-highlight-color:#fff; /<em>- 左二 -</em>/<br>   scrollbar-face-color:#E4E4E4; /<em>- 面子 -</em>/<br>   scrollbar-arrow-color:#666; /<em>- 箭头 -</em>/<br>   scrollbar-shadow-color:#808080; /<em>- 右二 -</em>/<br>   scrollbar-darkshadow-color:#D7DCE0; /<em>- 右一 -</em>/<br>   scrollbar-base-color:#D7DCE0; /<em>- 基色 -</em>/<br>   scrollbar-track-color:#;/<em>- 滑道 -</em>/<br>}</p><p>这段代码和上一段唯一的不同就是在css定义的元素上，一个是body一个是html。我们再测试一下，把html页面的”body”修改成”html”测试一下，发现依然可以实现效果。那到底是为什么呢？</p><p>从字面上来看，xhtml比html多一个x,那么这个x其实也就是xml,为什么要加一个xml在里面？其实最根本的原因就是要让html更加结构化标准化（因为html实在是太烂）。我们在html里面定义的是body，因为html不是很标准所以这样可以生效，而在xhtml里面这样就不行了，我看看那个图很明显，body标签本身不是根元素，只有html才是根元素，而页面的滚动条也是属于根元素的，所以这就是我们为什么定义body没有效果的原因，因为我们定义的只是一个子原素。ok，我们知道了原理，来做一个试验如果把定义”body”或”xhtml”换成”<em>“，</em>{<br>scrollbar-3dlight-color:#D4D0C8;<br>   scrollbar-highlight-color:#fff;<br>   scrollbar-face-color:#E4E4E4;<br>   scrollbar-arrow-color:#666;<br>   scrollbar-shadow-color:#808080;<br>   scrollbar-darkshadow-color:#D7DCE0;<br>   scrollbar-base-color:#D7DCE0;<br>   scrollbar-track-color:#;<br>}</p><p>在html和xhtml都通过，因为*就是定义页面上的任何标签当然也包括了“html”这个标签。</p><p>(ps:其实与其说是html与xhtml的区别到不如说是有无XHTML 1.0 transitional doctype的区别，但是如果你把页面的XHTML 1.0 transitional doctype去掉的话，那么这个页面就没有doctype，默认的显示方式就是html4.01,不过你要把XHTML 1.0 transitional doctype修改成HTML 4.01 doctype同样页面定义body也不会有效果的，虽然这个页面的标准是html 4.01)</p><p>css隐藏滚动条(横向,坚向)<br>网上都说使用overflow-y:hiddencss可以隐藏滚动条，但是只能针对div元素，并不能隐藏浏览器，而一些资料说 <boby>里加入scroll=”no”，可隐藏滚动条；在<boby>里加入style=”overflow-x:hidden”，可隐藏水平滚动条；加入style=”overflow-y:hidden”，可隐藏垂直滚动条。</boby></boby></p><p>1、完全隐藏</p><p>　　在里加入scroll=”no”，可隐藏滚动条;</p><p>2、在不需要时隐藏</p><p>　　指当浏览器窗口宽度或高度大于页面的宽或高时，不显示滚动条;反之，则显示;</p><p>3、样式表方法</p><p>　　在里加入style=”overflow-x:hidden”，可隐藏水平滚动条;</p><p>　　加入style=”overflow-y:hidden”，可隐藏垂直滚动条。</p><p>body{ overflow-x:hidden; } 在标准 DTD 下是不可以的</p><p>html { overflow: scroll; }</p><p>强制隐藏滚动条:</p><p>html { overflow: hidden; }</p><p>隐藏IE的水平滚动条:</p><p>html { overflow-x: hidden; }</p><p>隐藏IE的垂直滚动条:</p><p>html { overflow-y: hidden; }</p><p>强制显示IE的水平滚动条:</p><p>html { overflow-x: scroll; }</p><p>强制显示IE的垂直滚动条:</p><p>html { overflow-y: scroll; }</p><p>强制显示Mozilla的水平滚动条:</p><p>html { overflow:-moz-scrollbars-horizontal; }</p><p>注意: 仅仅强制显示水平滚动条. 也就是说, 即使需要显示垂直滚动条时, 垂直滚动条也不会出现.</p><p>强制显示Mozilla的垂直滚动条:</p><p>html { overflow:-moz-scrollbars-vertical; }</p><p>注意: 仅仅强制显示垂直滚动条. 也就是说, 即使需要显示水平滚动条时, 水平滚动条也不会出现.</p><p><strong>最终的解决办法：</strong><br>在页面添加:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">html &#123; overflow-x:hidden; <span class="comment">//隐藏水平滚动条overflow-y:hidden;//隐藏垂直滚动条&#125;</span></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>CSS怎么美化滚动条<br>各种浏览器对CSS滚动条的支持情况：</p><p>这里说的Webkit浏览器包括谷歌浏览器，苹果公司的Safari浏览器，以及最新的Opera浏览器。这些浏览器加起来占有超过半数的桌面浏览器市场份额。对于移动端浏览器，基本上是谷歌浏览器和Safari浏览器的天下。唯一的遗憾是火狐浏览器，至今没有对CSS滚动条属性做任何的改进。至于IE浏览器，我们期待吧。</p><p>鉴于目前浏览器市场的格局，我们很有信心相信CSS滚动条美化功能会有很好的很光明的前景。</p><p>很多年前谷歌浏览器就已经开始支持对滚动条的CSS美化。这些Webkit浏览器专属的CSS属性需要使用-webkit-浏览器引擎前缀，我们在这里将只会使用一些基本的CSS滚动条属性，在代码里会增加一些必要的解释说明。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">    width: <span class="number">15</span>px;</span><br><span class="line">&#125; <span class="comment">/* 这是针对缺省样式 (必须的) */</span></span><br></pre></td></tr></table></figure></p><p>当CSS中出现伪元素样式时，Webkit引擎将会关闭它的缺省滚动条样式输出，只使用CSS里提供的样式信息。</p><p>这里是其它一些伪元素样式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">      background-color: #b46868;</span><br><span class="line">&#125; /* 滚动条的滑轨背景颜色 */</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">      background-color: rgba(0, 0, 0, 0.2);</span><br><span class="line">&#125; /* 滑块颜色 */</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-button &#123;</span><br><span class="line">      background-color: #7c2929;</span><br><span class="line">&#125; /* 滑轨两头的监听按钮颜色 */</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">      background-color: black;</span><br><span class="line">&#125; /* 横向滚动条和纵向滚动条相交处尖角的颜色 */</span><br></pre></td></tr></table></figure></p><p>加上了这些CSS属性，你将会看到下面的效果(再次提醒：你需要使用Webkit浏览器，比如谷歌浏览器才能看到效果)。<br><img src="/images/201611151617488929.png" alt="1"><br>谷歌浏览器的用户是最幸福的。但我们也不能放弃火狐浏览器和IE浏览器用户。对于这些浏览器，有一个非常有效的补救方案，就是使用javascript插件。网上有不少人推荐一个由Kelvin Luck开发的一个jQuery插件：jScrollPane。但也有人评论这个插件是“PITA”，我翻了一下字典，发现“PITA”中文意思是“让人蛋疼”。经过试用，感到它的确是让人蛋疼。不推荐使用它。我发现了另外一个插件malihu-custom-scrollbar-plugin，感觉相当不错，它的用法是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;js/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.min.css&quot;&gt;</span><br><span class="line">&lt;!-- latest jQuery direct from google&apos;s CDN --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery-1.11.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery-migrate-1.2.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;js/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.concat.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">if (!$.browser.webkit) &#123;</span><br><span class="line"></span><br><span class="line">    $.mCustomScrollbar.defaults.scrollButtons.enable=true; //enable scrolling buttons by default</span><br><span class="line">    $.mCustomScrollbar.defaults.axis=&quot;yx&quot;; //enable 2 axis scrollbars by default</span><br><span class="line"></span><br><span class="line">    $(&quot;.container&quot;).mCustomScrollbar(&#123;theme:&quot;dark&quot;&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>已经有很多网站都使用了这些滚动条的CSS美化技巧，特别是谷歌的一些应用和网站上，比如Gmail和Google+。相信很快火狐浏览器和IE浏览器也会提供自己的解决方案。<br>用CSS调整滚动条配色<br>IE浏览器可以通过调整CSS的方式，来给滚动条换色。</p><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.uicss-cn</span><br><span class="line">&#123;</span><br><span class="line">height:580px;overflow-y: scroll;</span><br><span class="line">scrollbar-face-color:#EAEAEA;</span><br><span class="line">scrollbar-shadow-color:#EAEAEA;</span><br><span class="line">scrollbar-highlight-color:#EAEAEA;</span><br><span class="line">scrollbar-3dlight-color:#EAEAEA;</span><br><span class="line">scrollbar-darkshadow-color:#697074;</span><br><span class="line">scrollbar-track-color:#F7F7F7;</span><br><span class="line">scrollbar-arrow-color:#666666;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>具体样式对应的滚动条区域如图所示：<br><img src="/images/201611151625519680.png" alt="1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多朋友在网页设计中要自定义滚动条样式的情景，滚动条的样式我们可以通过css来控制的，比如网易邮箱的滚动条样子很好看，就是利用的CSS来设置实现的。但是css控制的滚动条应该如何实现和隐藏呢？滚动条能不能换颜色或者做的更好看一些呢？下面通通告诉你。&lt;/p&gt;
&lt;p&gt;你可以复习一下CSS overflow 属性的内容。&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>如何用CSS3实现瀑布流效果</title>
    <link href="http://yoursite.com/2019/04/03/%E5%A6%82%E4%BD%95%E7%94%A8CSS3%E5%AE%9E%E7%8E%B0%E7%80%91%E5%B8%83%E6%B5%81%E6%95%88%E6%9E%9C/"/>
    <id>http://yoursite.com/2019/04/03/如何用CSS3实现瀑布流效果/</id>
    <published>2019-04-03T12:17:30.000Z</published>
    <updated>2019-04-26T14:22:38.152Z</updated>
    
    <content type="html"><![CDATA[<p>CSS3功能挺强大，觉得几行代码就可以搞定一个效果，这几天学了一个瀑布流效果，还挺喜欢的。<br><a id="more"></a><br>效果图<br><img src="/images/1693725-e3ffa61922c6e632.jpg" alt="1"></p><h3 id="一、原理图"><a href="#一、原理图" class="headerlink" title="一、原理图"></a>一、原理图</h3><p><img src="/images/1693725-a893a57df112b872.png" alt="2"><br>在一个大盒子里，放置多个小盒子，小盒子的大小可以不一致，长短不一样，呈现一种瀑布流的效果。</p><h3 id="二、body部分代码"><a href="#二、body部分代码" class="headerlink" title="二、body部分代码"></a>二、body部分代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"con"</span>&gt;</span>//建立的大盒子</span><br><span class="line">            //下面是内容区，就放一个盒子，其他的跟它是一样的</span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/1.jpg"</span> <span class="attr">width</span>=<span class="string">"188px"</span> /&gt;</span>   //插入图片</span><br><span class="line">                  <span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>野蛮生长<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span>         //下面的标题</span><br><span class="line">                 <span class="tag">&lt;<span class="name">p</span>&gt;</span>人长大的标志：试着听从自己内心的声音，而不去在乎外面的声</span><br><span class="line">                  音，等待和拖延是世界上最容易压垮一个人得东西。犹豫不决是你</span><br><span class="line">                  最大的敌人。能看书就不要发呆，能碎觉就不要拖延，能吃饭就不</span><br><span class="line">                  要饿着，能亲吻就不要说话，能找到自己想做的事情就不容易了，</span><br><span class="line">                  青春得浪费在美好事物上。</span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span>   //文字内容</span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span>     //这个内容盒子可以多复制一些，只要计算好大盒子的宽度和小盒子的数量就好了</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、CSS3代码"><a href="#三、CSS3代码" class="headerlink" title="三、CSS3代码"></a>三、CSS3代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">*&#123;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">0</span>&#125;</span><br><span class="line"><span class="comment">/*给大盒子添加样式*/</span></span><br><span class="line"><span class="selector-id">#con</span>&#123;<span class="attribute">width</span>:<span class="number">980px</span>;<span class="attribute">margin</span>:<span class="number">60px</span> auto;<span class="attribute">border-radius</span>:<span class="number">25px</span>;<span class="attribute">box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">10px</span> <span class="number">#000</span>;<span class="attribute">padding</span>:<span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面代码是兼容各个浏览器的，并实现了四列，没两列之间间距为30px，*/</span></span><br><span class="line">-moz-column-count:4;-moz-column-gap:30px;-moz-column-rule:0px solid #ff0000;   //火狐浏览器</span><br><span class="line">-webkit-column-count:4;-webkit-column-gap:30px;-webkit-column-rule:0px solid #ff0000;   //Google chrome</span><br><span class="line">-o-column-count:4;-o-column-gap:30px;-o-column-rule:0px solid #ff0000;   //Opera浏览器的</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*小盒子内容区的样式，display:inline-block：实现 效果*/</span></span><br><span class="line"><span class="selector-id">#con</span> <span class="selector-class">.pic</span>&#123;<span class="attribute">width</span>:<span class="number">188px</span>; <span class="attribute">min-height</span>:<span class="number">100px</span>;<span class="attribute">box-shadow</span>:<span class="number">2px</span> <span class="number">2px</span> <span class="number">6px</span> <span class="number">#b5b5b5</span>;<span class="attribute">padding</span>:<span class="number">20px</span> <span class="number">15px</span>;<span class="attribute">margin</span>:<span class="number">10px</span>;<span class="attribute">display</span>:inline-block&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#con</span> <span class="selector-tag">h3</span>&#123;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#ddd</span>;<span class="attribute">line-height</span>:<span class="number">30px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">padding</span>:<span class="number">5px</span> <span class="number">5px</span>;&#125;</span><br><span class="line"><span class="selector-id">#con</span> <span class="selector-tag">h3</span> <span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:none;<span class="attribute">color</span>:<span class="number">#999</span>;&#125;</span><br><span class="line"><span class="selector-id">#con</span>  <span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:<span class="number">#666</span>;<span class="attribute">line-height</span>:<span class="number">20px</span>;<span class="attribute">white-space</span>:nowrap;<span class="attribute">overflow</span>:hidden;</span><br><span class="line"><span class="comment">/*很多文字，一行显示不下，用省略号显示的代码*/</span></span><br><span class="line"><span class="attribute">text-overflow</span>:ellipsis;<span class="attribute">-o-text-overflow</span>:ellipsis;</span><br><span class="line"><span class="attribute">-moz-text-overflow</span>: ellipsis; <span class="attribute">-webkit-text-overflow</span>: ellipsis;  &#125;</span><br></pre></td></tr></table></figure><p>话说，CSS3真心强大，以前看到瀑布流样式的图片，从来没想过会这么简单，几行代码就能轻松搞定。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS3功能挺强大，觉得几行代码就可以搞定一个效果，这几天学了一个瀑布流效果，还挺喜欢的。&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>三种方式实现瀑布流布局</title>
    <link href="http://yoursite.com/2019/04/03/%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/04/03/三种方式实现瀑布流布局/</id>
    <published>2019-04-03T12:12:43.000Z</published>
    <updated>2019-04-26T14:22:38.145Z</updated>
    
    <content type="html"><![CDATA[<p>分别使用javascript，jquery，css实现瀑布流布局：<br><a id="more"></a><br>第一种方式：使用JavaScript：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>瀑布流布局<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    *&#123;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,</span></span><br><span class="line"><span class="css"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line"><span class="undefined">  content: " ";</span></span><br><span class="line"><span class="undefined">  display: table;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="undefined">  clear: both;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="undefined">  position: relative;</span></span><br><span class="line"><span class="undefined">  -webkit-column-width: 210px;</span></span><br><span class="line"><span class="undefined">  -moz-column-width: 210px;</span></span><br><span class="line"><span class="undefined">  -webkit-column-gap: 5px;</span></span><br><span class="line"><span class="undefined">  -moz-column-gap: 5px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="undefined">  float: left;</span></span><br><span class="line"><span class="undefined">  padding: 15px 0 0 15px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-class">.pic</span> &#123;</span></span><br><span class="line"><span class="undefined">  width: 180px;</span></span><br><span class="line"><span class="undefined">  height: auto;</span></span><br><span class="line"><span class="undefined">  padding: 10px;</span></span><br><span class="line"><span class="undefined">  border-radius: 5px;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">box-shadow</span>: 0 0 5<span class="selector-tag">px</span> <span class="selector-id">#cccccc</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#cccccc</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-class">.pic</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="undefined">  display: block;</span></span><br><span class="line"><span class="undefined">  width: 100%;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main clearfix"</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/0.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/1.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/2.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/3.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/4.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/5.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/6.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/7.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/8.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/9.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/10.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/11.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/12.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/13.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/14.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/15.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/16.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/17.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/18.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/19.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/20.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/21.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/22.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/23.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/24.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/25.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/26.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/27.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/28.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/29.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/25.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/26.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/27.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/28.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/29.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    waterfall(<span class="string">'main'</span>,<span class="string">'box'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//模拟json数据</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> dataJson = &#123;<span class="string">'data'</span>: [&#123;<span class="string">'src'</span>:<span class="string">'30.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'31.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'32.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'33.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'34.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'35.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'36.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'37.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'38.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'39.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'40.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'41.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'42.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'43.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'44.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'45.jpg'</span>&#125;]&#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//监听scroll事件</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> isPosting = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(checkScollSlide(<span class="string">'main'</span>,<span class="string">'box'</span>) &amp;&amp; !isPosting)&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oParent = <span class="built_in">document</span>.getElementById(<span class="string">'main'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> dataJson.data)&#123;</span></span><br><span class="line"><span class="javascript">                isPosting = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> oBox = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="javascript">                oBox.className = <span class="string">'box'</span>;</span></span><br><span class="line"><span class="xml">                oBox.innerHTML = '<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/'+dataJson.data[i].src+'"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>';</span></span><br><span class="line"><span class="undefined">                oParent.appendChild(oBox);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            isPosting = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">            waterfall(<span class="string">'main'</span>,<span class="string">'box'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="undefined">* parent 父元素id clsName 块元素类*/</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">waterfall</span>(<span class="params">parent,clsName</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//获取父元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oParent = <span class="built_in">document</span>.getElementById(parent),</span></span><br><span class="line"><span class="javascript">    <span class="comment">//获取所有box</span></span></span><br><span class="line"><span class="undefined">    aBoxArr = oParent.getElementsByClassName(clsName),</span></span><br><span class="line"><span class="javascript">    <span class="comment">//单个box宽度</span></span></span><br><span class="line"><span class="undefined">    iBoxW = aBoxArr[0].offsetWidth,</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 列数</span></span></span><br><span class="line"><span class="javascript">    cols = <span class="built_in">Math</span>.floor(<span class="built_in">document</span>.documentElement.clientWidth / iBoxW);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    oParent.style.cssText = <span class="string">'width:'</span>+iBoxW*cols+<span class="string">'px;margin:0 auto;'</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//储存所有的高度</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> hArr = [];</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; aBoxArr.length; i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(i &lt; cols)&#123;</span></span><br><span class="line"><span class="undefined">            hArr[i] = aBoxArr[i].offsetHeight;</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取hArr最小值</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> minH = <span class="built_in">Math</span>.min.apply(<span class="literal">null</span>,hArr),</span></span><br><span class="line"><span class="javascript">            <span class="comment">// hArr最小值索引index</span></span></span><br><span class="line"><span class="undefined">            minHIndex = getMinHIndex(hArr,minH);</span></span><br><span class="line"><span class="javascript">            aBoxArr[i].style.cssText = <span class="string">'position:absolute;top:'</span>+minH+<span class="string">'px;left:'</span>+aBoxArr[minHIndex].offsetLeft+<span class="string">'px;'</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="comment">//添加元素之后更新hArr</span></span></span><br><span class="line"><span class="undefined">            hArr[minHIndex] += aBoxArr[i].offsetHeight;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//获取最小值索引</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">getMinHIndex</span>(<span class="params">arr,val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(arr[i]  == val)&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> i;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//检查是否满足加载数据条件,parent 父元素id clsName 块元素类</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">checkScollSlide</span>(<span class="params">parent,clsName</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oParent = <span class="built_in">document</span>.getElementById(parent),</span></span><br><span class="line"><span class="undefined">        aBoxArr = oParent.getElementsByClassName(clsName),</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 最后一个box元素的offsetTop+高度的一半</span></span></span><br><span class="line"><span class="undefined">        lastBoxH = aBoxArr[aBoxArr.length - 1].offsetTop + aBoxArr[aBoxArr.length - 1].offsetHeight / 2,</span></span><br><span class="line"><span class="javascript">        <span class="comment">//兼容js标准模式和混杂模式</span></span></span><br><span class="line"><span class="javascript">        scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop,</span></span><br><span class="line"><span class="javascript">        height = <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> lastBoxH &lt; scrollTop + height ? <span class="literal">true</span> : <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>第二种方式：使用jquery：(html结构跟css同上)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">$( <span class="built_in">window</span> ).on( <span class="string">"load"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    waterfall(<span class="string">'main'</span>,<span class="string">'box'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//模拟数据json</span></span><br><span class="line">    <span class="keyword">var</span> dataJson = &#123;<span class="string">'data'</span>: [&#123;<span class="string">'src'</span>:<span class="string">'30.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'31.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'32.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'33.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'34.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'35.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'36.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'37.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'38.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'39.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'40.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'41.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'42.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'43.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'44.jpg'</span>&#125;,&#123;<span class="string">'src'</span>:<span class="string">'45.jpg'</span>&#125;]&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">window</span>.onscroll=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> isPosting = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(checkscrollside(<span class="string">'main'</span>,<span class="string">'box'</span>) &amp;&amp; !isPosting)&#123;</span><br><span class="line">            isPosting = <span class="literal">true</span>;</span><br><span class="line">            $.each(dataJson.data,<span class="function"><span class="keyword">function</span>(<span class="params">index,dom</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> $box = $(<span class="string">'&lt;div class="box"&gt;&lt;/div&gt;'</span>);</span><br><span class="line">                $box.html(<span class="string">'&lt;div class="pic"&gt;&lt;img src="./images/'</span>+$(dom).attr(<span class="string">'src'</span>)+<span class="string">'"&gt;&lt;/div&gt;'</span>);</span><br><span class="line">                $(<span class="string">'#main'</span>).append($box);</span><br><span class="line">                waterfall(<span class="string">'main'</span>,<span class="string">'box'</span>);</span><br><span class="line">                isPosting = <span class="literal">false</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> parend 父级id</span></span><br><span class="line"><span class="comment"> clsName 元素class</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waterfall</span>(<span class="params">parent,clsName</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $parent = $(<span class="string">'#'</span>+parent);<span class="comment">//父元素</span></span><br><span class="line">    <span class="keyword">var</span> $boxs = $parent.find(<span class="string">'.'</span>+clsName);<span class="comment">//所有box元素</span></span><br><span class="line">    <span class="keyword">var</span> iPinW = $boxs.eq( <span class="number">0</span> ).width()+<span class="number">15</span>;<span class="comment">// 一个块框box的宽</span></span><br><span class="line">    <span class="keyword">var</span> cols = <span class="built_in">Math</span>.floor( $( <span class="built_in">window</span> ).width() / iPinW );<span class="comment">//列数</span></span><br><span class="line">    $parent.width(iPinW * cols).css(&#123;<span class="string">'margin'</span>: <span class="string">'0 auto'</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pinHArr=[];<span class="comment">//用于存储 每列中的所有块框相加的高度。</span></span><br><span class="line"></span><br><span class="line">    $boxs.each( <span class="function"><span class="keyword">function</span>(<span class="params"> index, dom</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( index &lt; cols )&#123;</span><br><span class="line">            pinHArr[ index ] = $(dom).height(); <span class="comment">//所有列的高度</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> minH = <span class="built_in">Math</span>.min.apply( <span class="literal">null</span>, pinHArr );<span class="comment">//数组pinHArr中的最小值minH</span></span><br><span class="line">            <span class="keyword">var</span> minHIndex = $.inArray( minH, pinHArr );</span><br><span class="line">            $(dom).css(&#123;</span><br><span class="line">                <span class="string">'position'</span>: <span class="string">'absolute'</span>,</span><br><span class="line">                <span class="string">'top'</span>: minH + <span class="number">15</span>,</span><br><span class="line">                <span class="string">'left'</span>: $boxs.eq( minHIndex ).position().left</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//添加元素后修改pinHArr</span></span><br><span class="line">            pinHArr[ minHIndex ] += $(dom).height() + <span class="number">15</span>;<span class="comment">//更新添加了块框后的列高</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检验是否满足加载数据条件，即触发添加块框函数waterfall()的高度：最后一个块框的距离网页顶部+自身高的一半(实现未滚到底就开始加载)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkscrollside</span>(<span class="params">parent,clsName</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//最后一个块框</span></span><br><span class="line">    <span class="keyword">var</span> $lastBox = $(<span class="string">'#'</span>+parent).find(<span class="string">'.'</span>+clsName).last(),</span><br><span class="line">        lastBoxH = $lastBox.offset().top + $lastBox.height()/ <span class="number">2</span>,</span><br><span class="line">        scrollTop = $(<span class="built_in">window</span>).scrollTop(),</span><br><span class="line">        documentH = $(<span class="built_in">document</span>).height();</span><br><span class="line">    <span class="keyword">return</span> lastBoxH &lt; scrollTop + documentH ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>第三种方式：使用css：(html结构同上)<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  [color=#ff0000]-webkit-column-width: 210px;</span><br><span class="line">  <span class="selector-tag">-moz-column-width</span>: 210<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">-webkit-column-gap</span>: 5<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">-moz-column-gap</span>: 5<span class="selector-tag">px</span>;<span class="selector-attr">[/color]</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.pic</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">180px</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.pic</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>瀑布流实现方式比较：<br>Javascript原生方式/jquery方式</p><ol><li>需要计算，列数 = 浏览器窗口宽度/图片宽度，图片定位是根据每一列的高度计算下来图片的位置；</li><li>图片排序是按照图片计算的位置横向排列，位置是计算出来的，比较规范</li></ol><p>Css方式</p><ol><li>不需要计算，浏览器自动计算，只需设置列宽，性能高；</li><li>列宽随着浏览器窗口大小进行改变，用户体验不好；</li><li>图片排序按照垂直顺序排列，打乱图片显示顺序；</li><li>图片加载还是依靠javascript/jquery实现</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分别使用javascript，jquery，css实现瀑布流布局：&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>用CSS3实现瀑布流布局</title>
    <link href="http://yoursite.com/2019/04/03/%E7%94%A8CSS3%E5%AE%9E%E7%8E%B0%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/04/03/用CSS3实现瀑布流布局/</id>
    <published>2019-04-03T12:11:23.000Z</published>
    <updated>2019-04-26T14:22:38.153Z</updated>
    
    <content type="html"><![CDATA[<p>以前使用瀑布流都要用js，现在有了css3，可以轻松实现了。</p><p>掌握点：</p><p>1、column-count 把div中的文本分为多少列</p><p>2、column-width 规定列宽</p><p>3、column-gap 规定列间隙</p><p>4、break-inside: avoid; 避免元素内部断行并产生新列</p><p>注意: Internet Explorer 9及更早 IE 版本浏览器不支持 column-count 属性。<br><a id="more"></a><br>实例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS3瀑布流<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="comment">/*大层*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span>&#123;<span class="attribute">width</span>:<span class="number">80%</span>;<span class="attribute">margin</span>: <span class="number">0</span> auto;&#125;</span></span><br><span class="line"><span class="css">    <span class="comment">/*瀑布流层*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.waterfall</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">-moz-column-count</span><span class="selector-pseudo">:4</span>; <span class="comment">/* Firefox */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">-webkit-column-count</span><span class="selector-pseudo">:4</span>; <span class="comment">/* Safari 和 Chrome */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">column-count</span><span class="selector-pseudo">:4</span>;</span></span><br><span class="line"><span class="undefined">        -moz-column-gap: 1em;</span></span><br><span class="line"><span class="undefined">      -webkit-column-gap: 1em;</span></span><br><span class="line"><span class="undefined">      column-gap: 1em;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="comment">/*一个内容层*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.item</span>&#123;</span></span><br><span class="line"><span class="undefined">      padding: 1em;</span></span><br><span class="line"><span class="undefined">      margin: 0 0 1em 0;</span></span><br><span class="line"><span class="undefined">      -moz-page-break-inside: avoid;</span></span><br><span class="line"><span class="undefined">      -webkit-column-break-inside: avoid;</span></span><br><span class="line"><span class="undefined">      break-inside: avoid;</span></span><br><span class="line"><span class="css">     <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.item</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line"><span class="undefined">        width: 100%;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">margin-bottom</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"waterfall"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://imgsa.baidu.com/baike/c0%3Dbaike72%2C5%2C5%2C72%2C24/sign=f3d4063328738bd4d02cba63c0e2ecb3/a2cc7cd98d1001e910616de1be0e7bec55e797fa.jpg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>1 convallis timestamp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://imgsa.baidu.com/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=03948ea9b4315c60579863bdecd8a076/8326cffc1e178a825a6b5d1cfe03738da977e833.jpg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>2 convallis timestamp 2 Donec a fermentum nisi. <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://imgsa.baidu.com/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=3d645bf2d0ca7bcb6976cf7ddf600006/6d81800a19d8bc3efe5f64fb858ba61ea8d345af.jpg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>3 Nullam eget lectus augue. Donec eu sem sit amet ligula</span><br><span class="line">        faucibus suscipit. Suspendisse rutrum turpis quis nunc</span><br><span class="line">        convallis quis aliquam mauris suscipit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://imgsa.baidu.com/baike/c0%3Dbaike180%2C5%2C5%2C180%2C60/sign=fbc3501b0a087bf469e15fbb93ba3c49/bf096b63f6246b60ea65dd24e3f81a4c510fa273.jpg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span> 4 Donec a fermentum nisi. Integer dolor est, commodo ut</span><br><span class="line">        sagittis vitae, egestas at augue. <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://imgsa.baidu.com/baike/c0%3Dbaike150%2C5%2C5%2C150%2C50/sign=9fe1d71697ef76c6c4dff379fc7f969f/b03533fa828ba61ed2efcd184634970a304e5987.jpg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span> 5 Donec a fermentum nisi. Integer dolor est, commodo ut sagittis vitae, egestas at augue.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前使用瀑布流都要用js，现在有了css3，可以轻松实现了。&lt;/p&gt;
&lt;p&gt;掌握点：&lt;/p&gt;
&lt;p&gt;1、column-count 把div中的文本分为多少列&lt;/p&gt;
&lt;p&gt;2、column-width 规定列宽&lt;/p&gt;
&lt;p&gt;3、column-gap 规定列间隙&lt;/p&gt;
&lt;p&gt;4、break-inside: avoid; 避免元素内部断行并产生新列&lt;/p&gt;
&lt;p&gt;注意: Internet Explorer 9及更早 IE 版本浏览器不支持 column-count 属性。&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS3弹性布局</title>
    <link href="http://yoursite.com/2019/04/03/CSS3%E5%BC%B9%E6%80%A7%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/04/03/CSS3弹性布局/</id>
    <published>2019-04-03T11:59:20.000Z</published>
    <updated>2019-04-26T14:22:38.131Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例"><a href="#CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例" class="headerlink" title="CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例"></a>CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例</h3><p>弹性项目可以按弹性容器当前行的<code>cross axis</code>来对齐，和<code>justify-content</code>类似，但在垂直方向上。其中<code>align-items</code>属性用于弹性容器，而<code>align-self</code>用于弹性项目。 <code>align-items</code> 为弹性容器中所有项目设置缺省对齐属性，包括匿名弹性项目。<code>align-self</code> 可以为单独的弹性项目设置对齐来覆盖缺省值。<br><strong>（对于匿名弹性项目，align-self总是匹配对应弹性容器的align-items的值。）</strong><br><a id="more"></a><br>如果弹性项的cross-axis外边距是auto，align-self属性没有效果<br>align-items和align-self的语法如下</p><blockquote><p>align-items: flex-start | flex-end | center | baseline | stretch<br>align-self: auto | flex-start | flex-end | center| baseline |stretch</p></blockquote><p>align-self属性取值auto时，将计算为其父元素的align-items值，或者为stretch如果没有父元素的话。对齐属性的取值定义如下：<br>弹性项的cross-start margin的边紧挨着该行的cross-start的边（一般来说，就是挨着弹性容器顶部）。<br>弹性项的cross-end margin的边紧挨着该行的cross-end的边（一般来说，就是挨着弹性容器底部）。<br>弹性项的margin box在该行的cross axis上居中（垂直居中对齐）。（如果该弹性行的cross size小于弹性项，将在两个方向上同时溢出。）<br>baseline<br>如果弹性项的行内轴（inline axis）和垂直轴（cross axis）一致，该值等同于flex-start。否则，它参与基线对齐（baseline alignment）：所有参与的弹性项按基线对齐，而基线和cross-start margin的边距离最大的项目被放在该行cross-start的边上（一般来说，就是基线和容器顶部距离最大的项目被定位在最上边）。<br>stretch<br>如果弹性项的垂直尺寸（cross size）属性（一般来说，就是高度）是auto，并且没有垂直外边距（cross-axis margin）是auto的，该弹性项被拉伸以适应容器高度， 其所使用的值是使项目的外边框（margin box）的垂直尺寸尽可能接近和行相同的尺寸，并依然遵循min-height/min-width/max-height/max-width属性的限制。<br>注意：如果弹性容器的高度被限制，该值可能会导致该项的内容溢出。<br>弹性项的顶部挨着容器的顶部。<br><img src="/images/flex-align.svg" alt="1"><br>上图包含5个例子，每个例子的弹性容器中包含4个不同颜色的弹性项目，最下面的弹性项目带有文本基线。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例&quot;&gt;&lt;a href=&quot;#CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例&quot; class=&quot;headerlink&quot; title=&quot;CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例&quot;&gt;&lt;/a&gt;CSS3弹性布局align-items和align-self垂直轴方向行对齐属性详解及实例&lt;/h3&gt;&lt;p&gt;弹性项目可以按弹性容器当前行的&lt;code&gt;cross axis&lt;/code&gt;来对齐，和&lt;code&gt;justify-content&lt;/code&gt;类似，但在垂直方向上。其中&lt;code&gt;align-items&lt;/code&gt;属性用于弹性容器，而&lt;code&gt;align-self&lt;/code&gt;用于弹性项目。 &lt;code&gt;align-items&lt;/code&gt; 为弹性容器中所有项目设置缺省对齐属性，包括匿名弹性项目。&lt;code&gt;align-self&lt;/code&gt; 可以为单独的弹性项目设置对齐来覆盖缺省值。&lt;br&gt;&lt;strong&gt;（对于匿名弹性项目，align-self总是匹配对应弹性容器的align-items的值。）&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS使用position:sticky实现粘性布局</title>
    <link href="http://yoursite.com/2019/04/03/CSS%E4%BD%BF%E7%94%A8position-sticky%E5%AE%9E%E7%8E%B0%E7%B2%98%E6%80%A7%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/04/03/CSS使用position-sticky实现粘性布局/</id>
    <published>2019-04-02T16:09:47.000Z</published>
    <updated>2019-04-26T14:22:38.132Z</updated>
    
    <content type="html"><![CDATA[<p>CSS粘性布局<br><a id="more"></a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>一般都知道下面几个常用的：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attribute">position</span>: static;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在<code>https://developer.mozilla.org/zh-CN/docs/Web/CSS/position</code>还说了下面这三个值：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 全局值 */</span></span><br><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">inherit</span>;</span><br><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">initial</span>;</span><br><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">unset</span>;</span><br></pre></td></tr></table></figure></p><p>估计大部分都没有用过<strong>position:sticky</strong>吧。这个属性值还在试验阶段。怎样描述它呢？</p><p>sticky：对象在常态时遵循常规流。它就像是<code>relative</code>和<code>fixed</code>的合体，当在屏幕中时按常规流排版，当卷动到屏幕外时则表现如fixed。该属性的表现是现实中你见到的吸附效果。</p><p> 常用场景：当元素距离页面视口（Viewport，也就是fixed定位的参照）顶部距离大于 0px 时，元素以 relative 定位表现，而当元素距离页面视口小于 0px 时，元素表现为 fixed 定位，也就会固定在顶部。</p><p>代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attribute">position</span>: -webkit-sticky;</span><br><span class="line">    <span class="attribute">position</span>: sticky;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如下图表现方式：<br>距离页面顶部大于20px，表现为 <code>position:relative</code><br><img src="/images/595142-20180123182350022-659183544.gif" alt="1"><br>距离页面顶部小于20px，表现为 <code>position:fixed</code><br><img src="/images/595142-20180123182423787-1535029845.gif" alt="2"></p><h3 id="运用-position-sticky-实现头部导航栏固定"><a href="#运用-position-sticky-实现头部导航栏固定" class="headerlink" title="运用 position:sticky 实现头部导航栏固定"></a>运用 <code>position:sticky</code> 实现头部导航栏固定</h3><p>html代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"con"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"samecon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"samecon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题二<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"samecon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题三<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"samecon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题四<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"samecon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题五<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"samecon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>标题五六<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>CSS代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.samecon</span> <span class="selector-tag">h2</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: -webkit-sticky;</span><br><span class="line">    <span class="attribute">position</span>: sticky;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>同理，也可以实现侧边导航栏的超出固定</p><h3 id="生效规则"><a href="#生效规则" class="headerlink" title="生效规则"></a>生效规则</h3><ul><li>须指定 <code>top, right, bottom 或 left</code> 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。</li><li>并且 <code>top</code> 和 <code>bottom</code> 同时设置时，<code>top</code> 生效的优先级高，<code>left</code> 和 <code>right</code> 同时设置时，<code>left</code> 的优先级高。</li><li>设定为 <code>position:sticky</code> 元素的任意父节点的 <code>overflow</code> 属性必须是 <code>visible</code>，否则 <code>position:sticky</code> 不会生效。这里需要解释一下：</li><li>如果 <code>position:sticky</code> 元素的任意父节点定位设置为 <code>overflow:hidden</code>，则父容器无法进行滚动，所以 <code>position:sticky</code> 元素也不会有滚动然后固定的情况。</li><li>如果 <code>position:sticky</code> 元素的任意父节点定位设置为 <code>position:relative | absolute | fixed</code>，则元素相对父元素进行定位，而不会相对 viewprot 定位。</li><li>达到设定的阀值。这个还算好理解，也就是设定了 <code>position:sticky</code> 的元素表现为 <code>relative</code> 还是 <code>fixed</code> 是根据元素是否达到设定了的阈值决定的</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS粘性布局&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>eolinker</title>
    <link href="http://yoursite.com/2019/04/02/eolinker/"/>
    <id>http://yoursite.com/2019/04/02/eolinker/</id>
    <published>2019-04-02T13:37:18.000Z</published>
    <updated>2019-04-26T14:22:38.135Z</updated>
    
    <content type="html"><![CDATA[<p>eoLinker 是目前业内领先、国内最大的在线 API 接口管理平台，提供自动生成 API 文档、API 自动化测试、Mock 测试、团队协作等功能，旨在解决由于前后端分离导致的开发效率低下问题。<br><a id="more"></a></p><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><p>在<code>Cmder</code>输入下面的命令克隆项目<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/eolinker/PHP-EOLINKER-API-Studio-Lite-5.0.git</span><br></pre></td></tr></table></figure></p><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><ul><li>PHP 5.5+ / PHP7+（推荐）</li><li>Nginx（推荐） / Apache</li><li>项目目录需要具有完全的读写权限（777），用于写入配置文件。安装完成之后可以设置另外设置目录权限</li><li>PHP需要安装并启用mbstring以及curl模块，用于字符串处理以及接口测试功能<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PHP-EOLINKER-API-Studio-Lite-5.0</span><br><span class="line">├─ backend_source_code     |php源码</span><br><span class="line">├─ frontend_source_code    |前端源码</span><br><span class="line">├─ release                 |正式安装包</span><br><span class="line">├─ LICENSE</span><br><span class="line">└─ README.md</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> frontend_source_code</span><br><span class="line"><span class="comment">#安装前端依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment">#安装bower，如已安装忽略</span></span><br><span class="line">npm install bower -g</span><br><span class="line"><span class="comment">#安装运行依赖</span></span><br><span class="line">bower install</span><br></pre></td></tr></table></figure><h4 id="无法安装node-sass"><a href="#无法安装node-sass" class="headerlink" title="无法安装node-sass"></a>无法安装node-sass</h4><p>如果遇到以下情况无法安装node-sass的需要手动下载 <code>win32-x64-64_binding.node</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! errno 1</span><br><span class="line">npm ERR! node-sass@3.13.1 postinstall: `node scripts/build.js`</span><br><span class="line">npm ERR! Exit status 1</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Failed at the node-sass@3.13.1 postinstall script.</span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     C:\Users\Draco\AppData\Roaming\npm-cache\_logs\2019-03-28T14_53_20_124Z-debug.log</span><br></pre></td></tr></table></figure></p><p>使用以下命令查看对应的版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -p <span class="string">"[process.platform, process.arch, process.versions.modules].join('-')"</span></span><br></pre></td></tr></table></figure></p><p>然后到<a href="https://github.com/sass/node-sass/releases" target="_blank" rel="noopener"><code>https://github.com/sass/node-sass/releases</code></a>下载对应的版本，并且在电脑新建环境变量，键为<code>SASS_BINARY_PATH</code>，值为文件存放的地址，如 E:\win32-x64-64_binding.node，然后重新打开<code>Cmder</code>执行<code>npm install</code>命令</p><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>先执行<code>npm install gulp@3.9.* -g</code>安装gulp，因为项目里的写法不支持gulp4，所以安装3.9版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开发模式</span></span><br><span class="line">gulp serve</span><br><span class="line"><span class="comment">#编译模式（将项目文件输出为上线文件）</span></span><br><span class="line">gulp build</span><br><span class="line"><span class="comment">#调试上线模式</span></span><br><span class="line">gulp serve:dist</span><br></pre></td></tr></table></figure></p><h4 id="安装Ruby-and-Compass"><a href="#安装Ruby-and-Compass" class="headerlink" title="安装Ruby and Compass"></a>安装Ruby and Compass</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[23:41:58] Starting <span class="string">'styles:compass'</span>...</span><br><span class="line">[23:41:59] Error <span class="keyword">in</span> plugin <span class="string">'gulp-compass'</span></span><br><span class="line">Message:</span><br><span class="line">    You need to have Ruby and Compass installed and <span class="keyword">in</span> your system PATH <span class="keyword">for</span> this task to work.</span><br><span class="line">[23:41:59] Tested 12 tests, 12 passes, 0 failures: PASS</span><br></pre></td></tr></table></figure><p>如果出现这个提示，则需要安装Ruby和Compass，并且把Ruby添加到环境变量，如键为<code>Ruby</code>，值为<code>G:\Ruby26-x64\bin</code>，<br>执行<code>gem install compass</code>命令安装compass</p><h4 id="设置sass的缓存目录"><a href="#设置sass的缓存目录" class="headerlink" title="设置sass的缓存目录"></a>设置sass的缓存目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[23:54:24] all files 3.05 MB</span><br><span class="line">[23:54:24] Finished <span class="string">'jshint'</span> after 3.54 s</span><br><span class="line">    error src/app/import.scss (G:/Ruby26-x64/lib/ruby/2.6.0/tempfile.rb:133:<span class="keyword">in</span> `initialize<span class="string">': No such file or director</span></span><br><span class="line"><span class="string">y @ rb_sysopen - F:/PHP-EOLINKER-API-Studio-Lite-5.0/frontend_source_code/.sass-cache/75fcaf1b4852ceb732871195e41567c</span></span><br><span class="line"><span class="string">c2a7d8997/F%058/PHP-EOLINKER-API-Studio-Lite-5.0/frontend_source_code/src/app/ui/content/home/project/inside/content/</span></span><br><span class="line"><span class="string">env/default/index.scssc20190328-7424-2aelrr)</span></span><br><span class="line"><span class="string">Compilation failed in 1 files.</span></span><br><span class="line"><span class="string">[23:54:25] Error in plugin '</span>gulp-compass<span class="string">'</span></span><br><span class="line"><span class="string">Message:</span></span><br><span class="line"><span class="string">    directory .tmp/serve/app</span></span><br><span class="line"><span class="string">    error src/app/import.scss (G:/Ruby26-x64/lib/ruby/2.6.0/tempfile.rb:133:in `initialize'</span>: No such file or director</span><br><span class="line">y @ rb_sysopen - F:/PHP-EOLINKER-API-Studio-Lite-5.0/frontend_source_code/.sass-cache/75fcaf1b4852ceb732871195e41567c</span><br><span class="line">c2a7d8997/F%058/PHP-EOLINKER-API-Studio-Lite-5.0/frontend_source_code/src/app/ui/content/home/project/inside/content/</span><br><span class="line">env/default/index.scssc20190328-7424-2aelrr)</span><br><span class="line">Compilation failed <span class="keyword">in</span> 1 files.</span><br></pre></td></tr></table></figure><p>这个问题是由sass-cache目录路径过长，compass操作不过来引起的，在config.rb中添加cache_path = ‘F:\temp\sass’即可，也可以是其他路径，只要路径长度不超过255就行</p><h3 id="eoLinker前端修改"><a href="#eoLinker前端修改" class="headerlink" title="eoLinker前端修改"></a>eoLinker前端修改</h3><h4 id="语言换成中文"><a href="#语言换成中文" class="headerlink" title="语言换成中文"></a>语言换成中文</h4><ol><li>找到文件<code>frontend_source_code/src/app/app.module.js</code>以下配置<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$logProvider.debugEnabled(IsDebug);</span><br><span class="line">$urlRouterProvider.otherwise(<span class="string">'/index'</span>);</span><br><span class="line">$translateProvider.translations(<span class="string">'en'</span>, EN);</span><br><span class="line">$translateProvider.preferredLanguage(<span class="string">'en'</span>);</span><br></pre></td></tr></table></figure></li></ol><p>改成如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$logProvider.debugEnabled(IsDebug);</span><br><span class="line">$urlRouterProvider.otherwise(<span class="string">'/index'</span>);</span><br><span class="line"><span class="comment">// $translateProvider.translations('en', EN);</span></span><br><span class="line"><span class="comment">// $translateProvider.preferredLanguage('en');</span></span><br><span class="line">$translateProvider.translations(<span class="string">'cn'</span>, CN);</span><br><span class="line">$translateProvider.preferredLanguage(<span class="string">'cn'</span>);</span><br></pre></td></tr></table></figure></p><ol start="2"><li>展开中文国际化文件，文件为 <code>frontend_source_code/src/app/constant/language/cn.constants.js</code>，并且删除中文国际化文件中无意义的“0”前缀<h4 id="其他修复"><a href="#其他修复" class="headerlink" title="其他修复"></a>其他修复</h4></li><li><p>修复登录页“用户名”显示不正确，placeholder错误导致登录页“用户名”显示为“undefined”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#文件：`frontend_source_code/src/app/ui/content/index/index.html`</span><br><span class="line">#原内容</span><br><span class="line">`&lt;input class=&quot;eo-input&quot; name=&quot;username&quot; data-ng-model=&quot;$ctrl.data.interaction.request.loginName&quot; type=&quot;text&quot; placeholder=&quot;&#123;&#123;&apos;undefined&apos; &#125;&#125;&quot; ng-class=&quot;&#123;&apos;eo-input-error&apos;:loginForm.username.$invalid&amp;&amp;$ctrl.data.info.submitted&#125;&quot; required autofocus /&gt;`</span><br><span class="line">#修改后</span><br><span class="line">`&lt;input class=&quot;eo-input&quot; name=&quot;username&quot; data-ng-model=&quot;$ctrl.data.interaction.request.loginName&quot; type=&quot;text&quot; placeholder=&quot;&#123;&#123;&apos;21&apos;|translate&#125;&#125;&quot; ng-class=&quot;&#123;&apos;eo-input-error&apos;:loginForm.username.$invalid&amp;&amp;$ctrl.data.info.submitted&#125;&quot; required autofocus /&gt;`</span><br></pre></td></tr></table></figure></li><li><p>修复接口编辑页点击“更多设置”按钮报错，三元表达式和国际化组合使用时的代码有误导致弹窗无法渲染</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#文件：`frontend_source_code/src/app/modal/branch/ams/index.html`</span><br><span class="line">#原内容</span><br><span class="line">`&lt;header class=&quot;eo-modal-header&quot;&gt;&#123;&#123;data.input.status==&apos;body&apos;?&apos;37&apos;|translate:data.input.status==&apos;restful&apos;?&apos;38&apos;|translate:&apos;39&apos;|translate&#125;&#125;&#123;&#123;&apos;40&apos;|translate&#125;&#125;&lt;/header&gt;`</span><br><span class="line">#修改后</span><br><span class="line">`&lt;header class=&quot;eo-modal-header&quot;&gt;&#123;&#123;(data.input.status==&apos;body&apos;?&apos;37&apos;:data.input.status==&apos;restful&apos;?&apos;38&apos;:&apos;39&apos;)|translate&#125;&#125;&#123;&#123;&apos;40&apos;|translate&#125;&#125;&lt;/header&gt;`</span><br><span class="line"></span><br><span class="line">#原内容</span><br><span class="line">`&lt;td&gt;&#123;&#123;data.input.item.paramNotNull?&apos;45&apos;|translate:&apos;&apos;&#125;&#125;&lt;/td&gt;`</span><br><span class="line">#修改后</span><br><span class="line">`&lt;td&gt;&#123;&#123;data.input.item.paramNotNull?(&apos;45&apos;|translate):&apos;&apos;&#125;&#125;&lt;/td&gt;`</span><br></pre></td></tr></table></figure></li><li><p>修复未在cacheJson中存储apiNote及相关字段的信息，apiNote及相关字段的信息被保存在了api表中，但未保存到apiCache表中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#文件：`backend_source_code/Server/Web/Module/ApiModule.class.php`</span><br><span class="line">#112行</span><br><span class="line">$cacheJson[&apos;baseInfo&apos;][&apos;apiSuccessStatusCode&apos;] = $success_status_code;</span><br><span class="line"># 增加以下内容</span><br><span class="line">$cacheJson[&apos;baseInfo&apos;][&apos;apiNoteType&apos;] = $apiNoteType;</span><br><span class="line">$cacheJson[&apos;baseInfo&apos;][&apos;apiNote&apos;] = $apiNote;</span><br><span class="line">$cacheJson[&apos;baseInfo&apos;][&apos;apiNoteRaw&apos;] = $apiNoteRaw;</span><br><span class="line">#228行</span><br><span class="line">$cacheJson[&apos;baseInfo&apos;][&apos;apiSuccessStatusCode&apos;] = $success_status_code;</span><br><span class="line">#增加以下内容</span><br></pre></td></tr></table></figure></li><li><p>注释掉对未定义的方法的调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#文件：`frontend_source_code/src/app/ui/content/home/project/inside/content/api/edit/index.js`</span><br><span class="line">#517行</span><br><span class="line">if (vm.data.reset.status != &apos;add&apos;) &#123;</span><br><span class="line">    fun.monitorEditParam(status, arg.item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#655</span><br><span class="line">if (vm.data.reset.status != &apos;add&apos;) &#123;</span><br><span class="line">    fun.monitorDeleteParam(status, arg.item, arg.$index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修复无法保存接口，后端未返回必须的字段，没有做兼容导致无法保存（本修复是不必要的，只要后端返回了这三个字段就好了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#文件：`frontend_source_code/src/app/ui/content/home/project/inside/content/api/edit/index.js`</span><br><span class="line">#1276</span><br><span class="line">vm.interaction.response.apiInfo.apiNoteType = &quot;&quot; + vm.interaction.response.apiInfo.apiNoteType;</span><br><span class="line">vm.interaction.response.apiInfo.apiRichNote = vm.interaction.response.apiInfo.apiNoteType == &apos;0&apos; ? vm.interaction.response.apiInfo.apiNote : &apos;&apos;;</span><br><span class="line">vm.interaction.response.apiInfo.apiMarkdownNote = vm.interaction.response.apiInfo.apiNoteType == &apos;1&apos; ? vm.interaction.response.apiInfo.apiNote : &apos;&apos;;</span><br><span class="line">#修改后</span><br><span class="line">vm.interaction.response.apiInfo.apiNoteType = &quot;&quot; + fun.getOrDefault(vm.interaction.response.apiInfo.apiNoteType, &apos;1&apos;);</span><br><span class="line">vm.interaction.response.apiInfo.apiNoteRaw = fun.getOrDefault(vm.interaction.response.apiInfo.apiNoteRaw, &apos;&apos;);</span><br><span class="line">vm.interaction.response.apiInfo.apiRichNote = vm.interaction.response.apiInfo.apiNoteType == &apos;0&apos; ? fun.getOrDefault(vm.interaction.response.apiInfo.apiNote, &apos;&apos;) : &apos;&apos;;</span><br><span class="line">vm.interaction.response.apiInfo.apiMarkdownNote = vm.interaction.response.apiInfo.apiNoteType == &apos;1&apos; ? fun.getOrDefault(vm.interaction.response.apiInfo.apiNote, &apos;&apos;) : &apos;&apos;;</span><br><span class="line"></span><br><span class="line">#1379行后增加</span><br><span class="line">fun.getOrDefault = function (optional, defaultValue) &#123;</span><br><span class="line">    if (optional == undefined) &#123;</span><br><span class="line">        return defaultValue;</span><br><span class="line">    &#125;</span><br><span class="line">    return optional;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="整合前后端"><a href="#整合前后端" class="headerlink" title="整合前后端"></a>整合前后端</h3><ol><li>在php的web目录新建文件夹<code>eolinker_os</code>作为项目根目录，新建个文件夹存放<code>backend_source_code</code>的所有后端文件，<br>在<code>eolinker_os\server\RTP</code>新建目录<code>config</code>，在<code>eolinker_os\server</code>新建目录<code>dump</code><br>修改<code>frontend_source_code/app.conf.json</code>文件的 <em>development</em> 和 <em>production</em>的字段 serverUrl 为 <code>/server/index.php</code></li><li>运行<code>gulp build</code>编译前端文件，会在<code>frontend_source_code</code>下生成文件夹<code>eolinker</code>，把<code>eolinker</code>里的所有文件复制到<code>eolinker_os</code>，把<code>eolinker_os</code>整个文件夹放到服务器部署即可！</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;eoLinker 是目前业内领先、国内最大的在线 API 接口管理平台，提供自动生成 API 文档、API 自动化测试、Mock 测试、团队协作等功能，旨在解决由于前后端分离导致的开发效率低下问题。&lt;br&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://yoursite.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>window下PHP开发环境搭建</title>
    <link href="http://yoursite.com/2018/10/31/window%E4%B8%8BPHP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/10/31/window下PHP开发环境搭建/</id>
    <published>2018-10-31T13:59:43.000Z</published>
    <updated>2019-04-26T14:30:59.106Z</updated>
    
    <content type="html"><![CDATA[<p>window下推荐使用集成环境，方便快捷<br><a id="more"></a></p><h1 id="window下PHP开发环境搭建"><a href="#window下PHP开发环境搭建" class="headerlink" title="window下PHP开发环境搭建"></a>window下PHP开发环境搭建</h1><h2 id="php集成环境-phpstudy"><a href="#php集成环境-phpstudy" class="headerlink" title="php集成环境-phpstudy"></a><a href="http://phpstudy.php.cn/" target="_blank" rel="noopener">php集成环境-phpstudy</a></h2><blockquote><p>一次性安装，无须配置即可使用，是非常方便、好用的PHP调试环境。<br>该程序绿色小巧简易迷你仅有32M，有专门的控制面板。总之学习PHP只需一个包。<br>对学习PHP的新手来说，WINDOWS下环境配置是一件很困难的事；对老手来说也是一件烦琐的事。<br>因此无论你是新手还是老手，该程序包都是一个不错的选择。<br>全面适合 Win2000/XP/2003/win7/win8/win2008 操作系统<br>支持Apache、IIS、Nginx和LightTPD。</p></blockquote><h2 id="Composer安装-传送门"><a href="#Composer安装-传送门" class="headerlink" title="Composer安装 传送门"></a>Composer安装 <a href="https://getcomposer.org/Composer-Setup.exe" target="_blank" rel="noopener"><code>传送门</code></a></h2><h2 id="php常用扩展"><a href="#php常用扩展" class="headerlink" title="php常用扩展"></a>php常用扩展</h2><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><ol><li>下载redis的dll文件 <a href="https://windows.php.net/downloads/pecl/releases/redis" target="_blank" rel="noopener"><code>传送门</code></a></li><li><code>php.ini</code> 增加 <em>extension=php_redis.dll</em></li><li>下载redis的服务端和客户端 <a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noopener"><code>传送门</code></a></li><li>开机自启动</li></ol><ul><li><p>在redis的目录下执行（执行后就作为windows服务了）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-install redis.windows.conf</span><br></pre></td></tr></table></figure></li><li><p>安装好后需要手动启动redis</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-start</span><br></pre></td></tr></table></figure></li><li><p>停止服务</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-start</span><br></pre></td></tr></table></figure></li><li><p>卸载redis服务</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-uninstall</span><br></pre></td></tr></table></figure></li></ul><h3 id="Memcache"><a href="#Memcache" class="headerlink" title="Memcache"></a>Memcache</h3><ol><li>下载Memcache的dll文件 <a href="https://github.com/nono303/PHP7-memcahe-dll/tree/master" target="_blank" rel="noopener"><code>传送门</code></a>，其他版本 <a href="&#39;https://windows.php.net/downloads/pecl/releases/memcache/&#39;"><code>点击跳转</code></a></li><li><code>php.ini</code> 增加 <em>extension=php_memcache.dll</em></li><li>下载memcache的服务端并安装 <a href="http://www.runoob.com/memcached/window-install-memcached.html" target="_blank" rel="noopener"><code>传送门</code></a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;window下推荐使用集成环境，方便快捷&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
</feed>
